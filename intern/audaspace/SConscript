#!/usr/bin/env python
#
# ***** BEGIN LGPL LICENSE BLOCK *****
#
# Copyright 2009 Jrg Hermann Mller
#
# This file is part of AudaSpace.
#
# AudaSpace is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# AudaSpace is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with AudaSpace.  If not, see <http://www.gnu.org/licenses/>.
#
# ***** END LGPL LICENSE BLOCK *****

Import ('env')

sources = env.Glob('intern/*.cpp') + env.Glob('FX/*.cpp')
incs = '. intern FX ' + env['BF_PTHREADS_INC'] + ' ' + env['BF_BOOST_INC']
defs = []

if env['WITH_BF_FFMPEG']:
    sources += env.Glob('ffmpeg/*.cpp')
    incs += ' ffmpeg  #/intern/ffmpeg ' + env['BF_FFMPEG_INC']
    defs.append('WITH_FFMPEG')

if env['WITH_BF_SDL']:
    sources += env.Glob('SDL/*.cpp')
    incs += ' SDL ' + env['BF_SDL_INC']
    defs.append('WITH_SDL')

if env['WITH_BF_OPENAL']:
    sources += env.Glob('OpenAL/*.cpp')
    incs += ' OpenAL ' + env['BF_OPENAL_INC']
    defs.append('WITH_OPENAL')

if env['WITH_BF_JACK']:
    sources += env.Glob('jack/*.cpp')
    incs += ' jack ' + env['BF_JACK_INC']
    defs.append('WITH_JACK')

if env['WITH_BF_SNDFILE']:
    sources += env.Glob('sndfile/*.cpp')
    incs += ' sndfile ' + env['BF_SNDFILE_INC']
    defs.append('WITH_SNDFILE')

#if env['WITH_BF_FFTW3']:
#    sources += env.Glob('fftw/*.cpp')
#    incs += ' fftw ' + env['BF_FFTW3_INC']
#    defs.append('WITH_FFTW3')

if env['WITH_BF_PYTHON']:
    sources += env.Glob('Python/*.cpp')
    incs += ' Python ' + env['BF_PYTHON_INC']
    defs.append('WITH_PYTHON')

if env['OURPLATFORM'] in ('win32-vc', 'win32-mingw', 'linuxcross', 'win64-vc', 'win64-mingw'):
    incs += ' ' + env['BF_PTHREADS_INC']

env.BlenderLib ('bf_intern_audaspace', sources, Split(incs), defs, libtype=['intern','player'], priority = [25,215] )
