/*
 * Copyright 2011-2013 Blender Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */

#include "stdosl.h"

shader node_convert_from_vector(
	vector Vector = vector(0.0, 0.0, 0.0),
	output string String = "",
	output float Val = 0.0,
	output int ValInt = 0,
	output color Color = color(0.0, 0.0, 0.0),
	output point Point = point(0.0, 0.0, 0.0),
	output normal Normal = normal(0.0, 0.0, 0.0))
{
	Val = (Vector[0] + Vector[1] + Vector[2]) * (1.0 / 3.0);
	ValInt = (int)((Normal[0] + Normal[1] + Normal[2]) * (1.0 / 3.0));
	Color = color(Vector[0], Vector[1], Vector[2]);
	Point = point(Vector[0], Vector[1], Vector[2]);
	Normal = normal(Vector[0], Vector[1], Vector[2]);
}

