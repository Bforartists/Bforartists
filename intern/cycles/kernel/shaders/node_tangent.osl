/*
 * Copyright 2011, Blender Foundation.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

#include "stdosl.h"

shader node_tangent(
	normal NormalIn = N,
	string attr_name = "geom:tangent",
	string direction_type = "Radial",
	string axis = "Z",
	output normal Tangent = normalize(dPdu))
{
	vector T;

	if (direction_type == "UV Map") {
		getattribute(attr_name, T);
	}
	else if (direction_type == "Radial") {
		point generated;

		if (!getattribute("geom:generated", generated))
			generated = P;

		if (axis == "X")
			T = vector(0.0, -(generated[2] - 0.5), (generated[1] - 0.5));
		else if (axis == "Y")
			T = vector(-(generated[2] - 0.5), 0.0, (generated[0] - 0.5));
		else
			T = vector(-(generated[1] - 0.5), (generated[0] - 0.5), 0.0);
	}

	T = transform("object", "world", T);
	Tangent = cross(NormalIn, normalize(cross(T, NormalIn)));
}

