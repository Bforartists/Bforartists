/*
 * Copyright 2011, Blender Foundation.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

#include "stdosl.h"
#include "node_texture.h"

/* Noise */

float noise(point p, string basis, float distortion, float detail, float fac, color Color)
{
	point r;
	int hard = 0;

	if (distortion != 0.0) {
		r[0] = noise_basis(p + point(13.5), basis) * distortion;
		r[1] = noise_basis(p, basis) * distortion;
		r[2] = noise_basis(p - point(13.5), basis) * distortion;
		
		p += r;
	}

	fac = noise_turbulence(p, basis, detail, hard);
	
	Color = color(fac, noise_turbulence(point(p[1], p[0], p[2]), basis, detail, hard),
		noise_turbulence(point(p[1], p[2], p[0]), basis, detail, hard));

	return fac;
}

shader node_noise_texture(
	float Distortion = 0.0,
	float Scale = 5.0,
	float Detail = 2.0,
	point Vector = P,
	output float Fac = 0.0,
	output color Color = color(0.2, 0.2, 0.2))
{
	string Basis = "Perlin";
	Fac = noise(Vector * Scale, Basis, Distortion, Detail, Fac, Color);
}

