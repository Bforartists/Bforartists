/*
 * Copyright 2013, Blender Foundation.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

#include "stdosl.h"

shader node_vector_transform(
	string type = "Vector",
	string convert_from = "World",
	string convert_to = "Object",
	vector VectorIn = vector(0.0, 0.0, 0.0),
	output vector VectorOut = vector(0.0, 0.0, 0.0))
{
	/* OSL uses lower case variable names here */
	string from = "world";
	string to = "object";
	
	if (convert_from == "Object")
		from = "object";
	else if (convert_from == "Camera")
		from = "camera";
		
	if (convert_to == "World")
		to = "world";
	else if (convert_to == "Camera")
		to = "camera";
	
	if (type == "Vector") {
		VectorOut = transform(from, to, VectorIn);
	}
	else if (type == "Point") {
		point Point = point(VectorIn[0], VectorIn[1], VectorIn[2]);
		VectorOut = transform(from, to, Point);
	}
}

