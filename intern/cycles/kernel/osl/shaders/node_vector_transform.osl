/*
 * Copyright 2011-2013 Blender Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "stdcycles.h"

shader node_vector_transform(string transform_type = "vector",
                             string convert_from = "world",
                             string convert_to = "object",
                             vector VectorIn = vector(0.0, 0.0, 0.0),
                             output vector VectorOut = vector(0.0, 0.0, 0.0))
{
  if (transform_type == "vector" || transform_type == "normal") {
    VectorOut = transform(convert_from, convert_to, VectorIn);
    if (transform_type == "normal")
      VectorOut = normalize(VectorOut);
  }
  else if (transform_type == "point") {
    point Point = (point)VectorIn;
    VectorOut = transform(convert_from, convert_to, Point);
  }
}
