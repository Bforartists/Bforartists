/*
 * Copyright 2011-2015 Blender Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "stdcycles.h"

/* IES Light */

shader node_ies_light(int use_mapping = 0,
                      matrix mapping = matrix(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
                      string filename = "",
                      float Strength = 1.0,
                      point Vector = I,
                      output float Fac = 0.0)
{
  point p = Vector;

  if (use_mapping) {
    p = transform(mapping, p);
  }

  p = normalize((vector)p);

  float v_angle = acos(-p[2]);
  float h_angle = atan2(p[0], p[1]) + M_PI;

  Fac = Strength * texture(filename, h_angle, v_angle);
}
