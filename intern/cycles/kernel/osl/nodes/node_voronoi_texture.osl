/*
 * Copyright 2011, Blender Foundation.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

#include "stdosl.h"
#include "node_texture.h"

/* Voronoi */

shader node_voronoi_texture(
	string Coloring = "Intensity",
	float Scale = 5.0,
	point Vector = P,
	output float Fac = 0.0,
	output color Color = color(0.0, 0.0, 0.0))
{
	/* compute distance and point coordinate of 4 nearest neighbours */
	float da[4];
	point pa[4];

	voronoi(Vector * Scale, "Distance Squared", 1.0, da, pa);

	/* Colored output */
	if (Coloring == "Intensity") {
		Fac = fabs(da[0]);
		Color = color(Fac);
	}
	else {
		Color = cellnoise_color(pa[0]);
		Fac = (Color[0] + Color[1] + Color[2]) * (1.0 / 3.0);

	}
}

