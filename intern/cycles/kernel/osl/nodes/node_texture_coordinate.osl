/*
 * Copyright 2011, Blender Foundation.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

#include "stdosl.h"

shader node_texture_coordinate(
	normal Normal = N,
	int is_background = 0,
	string bump_offset = "center",

	output point Generated = point(0.0, 0.0, 0.0),
	output point UV = point(0.0, 0.0, 0.0),
	output point Object = point(0.0, 0.0, 0.0),
	output point Camera = point(0.0, 0.0, 0.0),
	output point Window = point(0.0, 0.0, 0.0),
	output point Reflection = point(0.0, 0.0, 0.0))
{
	if (is_background) {
		Generated = P;
		UV = point(0.0, 0.0, 0.0);
		Object = P;
		point Pcam = transform("camera", "world", point(0, 0, 0));
		Camera = transform("camera", P + Pcam);
		Window = transform("NDC", P + Pcam);
		Reflection = I;
	}
	else {
		getattribute("std::generated", Generated); 
		getattribute("std::uv", UV);
		Object = transform("object", P);
		Camera = transform("camera", P);
		Window = transform("NDC", P);
		Reflection = reflect(I, Normal);
	}

	if (bump_offset == "dx") {
		Generated += Dx(Generated);
		UV += Dx(UV);
		Object += Dx(Object);
		Camera += Dx(Camera);
		Window += Dx(Window);
	}
	else if (bump_offset == "dy") {
		Generated += Dy(Generated);
		UV += Dy(UV);
		Object += Dy(Object);
		Camera += Dy(Camera);
		Window += Dy(Window);
	}
}

