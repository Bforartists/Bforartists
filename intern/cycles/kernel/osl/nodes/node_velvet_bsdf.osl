/*
 * Copyright 2011, Blender Foundation.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

#include "stdosl.h"
#include "node_fresnel.h"

shader node_velvet_bsdf(
	color Color = color(0.8, 0.8, 0.8),
	float Sigma = 0.0,
	float Fresnel = 0.3,
	normal Normal = N,
	output closure color BSDF = diffuse(Normal))
{
	float Fr = 1.0;

	if(Fresnel < 1.0) {
		float eta = 1.0/clamp(1.0 - Fresnel, 1e-5, 1.0 - 1e-5);
		Fr = fresnel_dielectric(I, Normal, eta);
	}

	float sigma = clamp(Sigma, 0.0, 1.0);

	BSDF = (Fr*Color)*ashikhmin_velvet(Normal, sigma);
}

