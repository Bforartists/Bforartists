/*
 * Copyright 2011, Blender Foundation.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

#include "stdosl.h"
#include "node_texture.h"

/* Magic */

color magic(point p, int n, float turbulence)
{
	float turb = turbulence/5.0;

	float x = sin((p[0] + p[1] + p[2])*5.0);
	float y = cos((-p[0] + p[1] - p[2])*5.0);
	float z = -cos((-p[0] - p[1] + p[2])*5.0);

	if(n > 0) {
		x *= turb;
		y *= turb;
		z *= turb;
		y = -cos(x-y+z);
		y *= turb;

		if(n > 1) {
			x= cos(x-y-z);
			x *= turb;

			if(n > 2) {
				z= sin(-x-y-z);
				z *= turb;

				if(n > 3) {
					x= -cos(-x+y-z);
					x *= turb;

					if(n > 4) {
						y= -sin(-x+y+z);
						y *= turb;

						if(n > 5) {
							y= -cos(-x+y+z);
							y *= turb;

							if(n > 6) {
								x= cos(x+y+z);
								x *= turb;

								if(n > 7) {
									z= sin(x+y-z);
									z *= turb;

									if(n > 8) {
										x= -cos(-x-y+z);
										x *= turb;

										if(n > 9) {
											y= -sin(x-y+z);
											y *= turb;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	if(turb != 0.0) {
		turb *= 2.0;
		x /= turb;
		y /= turb;
		z /= turb;
	}

	return color(0.5 - x, 0.5 - y, 0.5 - z);
}

shader node_magic_texture(
	int Depth = 2,
	float Turbulence = 5.0,
	point Vector = P,
	output color Color = color(0.0, 0.0, 0.0))
{
	Color = magic(Vector, Depth, Turbulence);
}

