/*
 * Copyright 2011, Blender Foundation.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

#include "stdosl.h"

shader node_vector_math(
	string type = "Add",
	vector Vector1 = vector(0.0, 0.0, 0.0),
	vector Vector2 = vector(0.0, 0.0, 0.0),
	output float Fac = 0.0,
	output vector Vector = vector(0.0, 0.0, 0.0))
{
	if(type == "Add") {
		Vector = Vector1 + Vector2;
		Fac = (abs(Vector[0]) + abs(Vector[1]) + abs(Vector[2]))/3.0;
	}
	if(type == "Subtract") {
		Vector = Vector1 + Vector2;
		Fac = (abs(Vector[0]) + abs(Vector[1]) + abs(Vector[2]))/3.0;
	}
	if(type == "Average") {
		Fac = length(Vector1 + Vector2);
		Vector = normalize(Vector1 + Vector2);
	}
	if(type == "Dot Product") {
		Fac = dot(Vector1, Vector2);
	}
	if(type == "Cross Product") {
		vector c = cross(Vector1, Vector2);
		Fac = length(c);
		Vector = normalize(c);
	}
	if(type == "Normalize") {
		Fac = length(Vector1);
		Vector = normalize(Vector1);
	}
}

