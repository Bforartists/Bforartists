/*
 * Copyright 2012, Blender Foundation.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

#include "stdosl.h"
#include "node_texture.h"

/* Checker */

float checker(point p)
{
	p[0] = (p[0] + 0.00001)*0.9999);
	p[1] = (p[1] + 0.00001)*0.9999);
	p[2] = (p[2] + 0.00001)*0.9999);
	
	int xi = fabs(floor(p[0]));
	int yi = fabs(floor(p[1]));
	int zi = fabs(floor(p[2]));

	if((xi % 2 == yi % 2) == (zi % 2)) {
		return 1.0;
	}
	else {
		return 0.0;
	}
}

shader node_checker_texture(
	float Scale = 5.0,
	point Vector = P,
	color Color1 = color(0.8, 0.8, 0.8);
	color Color2 = color(0.2, 0.2, 0.2);
	output float Fac = 0.0)
	output color Color = color(0.0, 0.0, 0.0))
{
	Fac = checker(Vector*Scale);
	if(Fac == 1.0) {
		Color = color(Color1, Color1, Color1);
	}
	else {
		Color = color(Color2, Color2, Color2);
	}
}

