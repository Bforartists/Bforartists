diff --git a/libdevice/cmake/modules/SYCLLibdevice.cmake b/libdevice/cmake/modules/SYCLLibdevice.cmake
index 24401ce90..7b3831869 100644
--- a/libdevice/cmake/modules/SYCLLibdevice.cmake
+++ b/libdevice/cmake/modules/SYCLLibdevice.cmake
@@ -63,7 +63,7 @@ if (WIN32)
   list(APPEND compile_opts -D_ALLOW_ITERATOR_DEBUG_LEVEL_MISMATCH)
 endif()

-add_custom_target(libsycldevice)
+add_custom_target(libsycldevice ALL)

 set(filetypes obj obj-new-offload spv bc)

diff --git a/llvm/cmake/modules/HandleLLVMOptions.cmake b/llvm/cmake/modules/HandleLLVMOptions.cmake
index c7935f5c9..f7a8661d2 100644
--- a/llvm/cmake/modules/HandleLLVMOptions.cmake
+++ b/llvm/cmake/modules/HandleLLVMOptions.cmake
@@ -591,6 +591,9 @@ if( MSVC )

   append("/Zc:inline" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)

+  # Zc:lambda works around VS19 internal compiler errors.
+  append("/Zc:lambda" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
+
   if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
     # Enable standards-conforming preprocessor.
     # https://learn.microsoft.com/en-us/cpp/build/reference/zc-preprocessor
diff --git a/opencl/CMakeLists.txt b/opencl/CMakeLists.txt
index 808fc98c6..75becea99 100644
--- a/opencl/CMakeLists.txt
+++ b/opencl/CMakeLists.txt
@@ -11,6 +11,11 @@ if (MSVC)
   )
 endif()

+# Blender code below is determined to use FetchContent_Declare
+# temporarily allow it (but feed it our downloaded tarball
+# in the OpenCL_HEADERS variable
+set(FETCHCONTENT_FULLY_DISCONNECTED OFF)
+
 # Repo URLs

 set(OCL_HEADERS_REPO
@@ -77,5 +82,6 @@ endif()

 FetchContent_MakeAvailable(ocl-icd)
 add_library(OpenCL-ICD ALIAS OpenCL)
+set(FETCHCONTENT_FULLY_DISCONNECTED ON)

 add_subdirectory(opencl-aot)
diff --git a/sycl/cmake/modules/FetchUnifiedRuntime.cmake b/sycl/cmake/modules/FetchUnifiedRuntime.cmake
index 04602f22e..7bd7259d1 100644
--- a/sycl/cmake/modules/FetchUnifiedRuntime.cmake
+++ b/sycl/cmake/modules/FetchUnifiedRuntime.cmake
@@ -89,10 +89,9 @@ if(IS_DIRECTORY "${UR_INTREE_SOURCE_DIR}")
   # to link statically on windows
   if(WIN32)
     set(UMF_BUILD_SHARED_LIBRARY OFF CACHE INTERNAL "Build UMF shared library")
-    set(UMF_LINK_HWLOC_STATICALLY ON CACHE INTERNAL "static HWLOC")
-  else()
-    set(UMF_DISABLE_HWLOC ${SYCL_UMF_DISABLE_HWLOC} CACHE INTERNAL "Disable hwloc for UMF")
   endif()
+  set(UMF_LINK_HWLOC_STATICALLY OFF CACHE INTERNAL "static HWLOC")
+  set(UMF_DISABLE_HWLOC ${SYCL_UMF_DISABLE_HWLOC} CACHE INTERNAL "Disable hwloc for UMF")
   add_subdirectory(${UNIFIED_RUNTIME_SOURCE_DIR} ${UR_INTREE_BINARY_DIR})
 elseif(SYCL_UR_USE_FETCH_CONTENT)
   include(FetchContent)
@@ -148,10 +147,9 @@ elseif(SYCL_UR_USE_FETCH_CONTENT)
   # to link statically on windows
   if(WIN32)
     set(UMF_BUILD_SHARED_LIBRARY OFF CACHE INTERNAL "Build UMF shared library")
-    set(UMF_LINK_HWLOC_STATICALLY ON CACHE INTERNAL "static HWLOC")
-  else()
-    set(UMF_DISABLE_HWLOC ${SYCL_UMF_DISABLE_HWLOC} CACHE INTERNAL "Disable hwloc for UMF")
   endif()
+  set(UMF_LINK_HWLOC_STATICALLY OFF CACHE INTERNAL "static HWLOC")
+  set(UMF_DISABLE_HWLOC ${SYCL_UMF_DISABLE_HWLOC} CACHE INTERNAL "Disable hwloc for UMF")

   fetch_adapter_source(level_zero
     ${UNIFIED_RUNTIME_REPO}
@@ -363,6 +361,10 @@ if(CMAKE_SYSTEM_NAME STREQUAL Windows)
       -DUMF_LINK_HWLOC_STATICALLY:BOOL=${UMF_LINK_HWLOC_STATICALLY}
       -DUMF_DISABLE_HWLOC:BOOL=${UMF_DISABLE_HWLOC}
       -DSYCL_EMHASH_DIR:STRING=${SYCL_EMHASH_DIR}
+      -DXPTIFW_PARALLEL_HASHMAP_HEADERS:STRING=${XPTIFW_PARALLEL_HASHMAP_HEADERS}
+      -DPython3_ROOT_DIR:STRING=${Python3_ROOT_DIR}
+      -DPython3_EXECUTABLE:STRING=${Python3_EXECUTABLE}
+      -DPYTHON_EXECUTABLE:STRING=${PYTHON_EXECUTABLE}
       # Enable d suffix in UMF
       -DUMF_USE_DEBUG_POSTFIX:BOOL=ON
   )
diff --git a/sycl/source/detail/graph_impl.hpp b/sycl/source/detail/graph_impl.hpp
index 6045cc9ed..6ae24aade 100644
--- a/sycl/source/detail/graph_impl.hpp
+++ b/sycl/source/detail/graph_impl.hpp
@@ -29,6 +29,7 @@
 #include <list>
 #include <set>
 #include <shared_mutex>
+#include <sstream>

 namespace sycl {
 inline namespace _V1 {
diff --git a/sycl/source/detail/kernel_bundle_impl.hpp b/sycl/source/detail/kernel_bundle_impl.hpp
index eefea331d..9f08546be 100644
--- a/sycl/source/detail/kernel_bundle_impl.hpp
+++ b/sycl/source/detail/kernel_bundle_impl.hpp
@@ -23,6 +23,7 @@
 #include <cstdint>
 #include <cstring>
 #include <memory>
+#include <sstream>
 #include <unordered_set>
 #include <vector>

diff --git a/sycl/source/detail/unordered_multimap.hpp b/sycl/source/detail/unordered_multimap.hpp
index 4d495ed06..e96d71870 100644
--- a/sycl/source/detail/unordered_multimap.hpp
+++ b/sycl/source/detail/unordered_multimap.hpp
@@ -7,7 +7,7 @@
 //===--------------------------------------------------------------===//
 #pragma once
 #include <detail/hashers.hpp>
-#include <emhash/hash_table8.hpp>
+#include <hash_table8.hpp>

 #include <utility>
 #include <vector>
diff --git a/sycl/unittests/CMakeLists.txt b/sycl/unittests/CMakeLists.txt
index b2b6761b9..f9db10a86 100644
--- a/sycl/unittests/CMakeLists.txt
+++ b/sycl/unittests/CMakeLists.txt
@@ -1,6 +1,5 @@
 add_custom_target(SYCLUnitTests)
 set_target_properties(SYCLUnitTests PROPERTIES FOLDER "SYCL tests")
-include_directories(${BOOST_UNORDERED_INCLUDE_DIRS})

 foreach(flag_var
     CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE
diff --git a/xptifw/include/xpti_string_table.hpp b/xptifw/include/xpti_string_table.hpp
index c8678bdff..bd91468c9 100644
--- a/xptifw/include/xpti_string_table.hpp
+++ b/xptifw/include/xpti_string_table.hpp
@@ -6,7 +6,7 @@
 #pragma once

 #include "xpti/xpti_data_types.h"
-#include <emhash/hash_table7.hpp>
+#include <hash_table7.hpp>

 #include <atomic>
 #include <shared_mutex>
diff --git a/xptifw/src/CMakeLists.txt b/xptifw/src/CMakeLists.txt
index de2274129..adeca1d1d 100644
--- a/xptifw/src/CMakeLists.txt
+++ b/xptifw/src/CMakeLists.txt
@@ -18,8 +18,6 @@ FetchContent_Declare(parallel-hashmap
 FetchContent_GetProperties(parallel-hashmap)
 FetchContent_MakeAvailable(parallel-hashmap)

-set(XPTIFW_PARALLEL_HASHMAP_HEADERS "${parallel-hashmap_SOURCE_DIR}")
-
 file(GLOB SOURCES *.cpp)

 function(add_xpti_library LIB_NAME)
diff --git a/xptifw/src/xpti_trace_framework.cpp b/xptifw/src/xpti_trace_framework.cpp
index 223fe20aa..d9c8d8e46 100644
--- a/xptifw/src/xpti_trace_framework.cpp
+++ b/xptifw/src/xpti_trace_framework.cpp
@@ -19,7 +19,7 @@
 #include "xpti_int64_hash_table.hpp"
 #include "xpti_object_table.hpp"
 #include "xpti_string_table.hpp"
-#include <emhash/hash_table7.hpp>
+#include <hash_table7.hpp>

 #include <algorithm>
 #include <array>
