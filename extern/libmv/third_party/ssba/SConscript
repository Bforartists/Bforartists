#!/usr/bin/python

import sys
import os

Import('env')

defs = []

cflags_ssba = Split(env['CFLAGS'])
ccflags_ssba = Split(env['CCFLAGS'])
cxxflags_ssba = Split(env['CXXFLAGS'])

defs.append('V3DLIB_ENABLE_SUITESPARSE')

src = env.Glob('Geometry/*.cpp')
src += env.Glob('Math/*.cpp')

incs = '. ../ldl/Include ../../../colamd/Include'

if env['OURPLATFORM'] in ('win32-vc', 'win32-mingw', 'linuxcross', 'win64-vc', 'win64-mingw'):
    if env['OURPLATFORM'] in ('win32-vc', 'win64-vc'):
        cflags_ssba.append('/Od')
        ccflags_ssba.append('/Od')
        cxxflags_ssba.append('/Od')

        if not env['BF_DEBUG']:
            defs.append('NDEBUG')
    else:
        if not env['BF_DEBUG']:
            cflags_ssba += Split(env['REL_CFLAGS'])
            ccflags_ssba += Split(env['REL_CCFLAGS'])
            cxxflags_ssba += Split(env['REL_CXXFLAGS'])

env.BlenderLib ( libname = 'extern_ssba', sources=src, includes=Split(incs), defines=defs, libtype=['extern', 'player'], priority=[20,137], compileflags=cflags_ssba, cc_compileflags=ccflags_ssba, cxx_compileflags=cxxflags_ssba )
