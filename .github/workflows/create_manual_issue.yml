name: Create issue in manual when a PR is merged

on:
  pull_request:
    types: [closed]   # Runs just at closed pull requests (including Merge)

jobs:
  create_issue_on_merge:
    runs-on: ubuntu-latest
    # Only when an actual merge happened
    if: github.event.pull_request.merged == true

    permissions:
      contents: read          # For actions/checkout (In case you need code)
      issues: write           # So that we can create an issue

    steps:
      - name: Checkout source repo (bforartists/bforartists)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # optional, for the Git-History

      - name: Setup jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Create issue in manual repo
        env:
          GH_PAT_AUTO_ISSUE: ${{ secrets.GH_PAT_AUTO_ISSUE }}
        run: |
          PR_NUM="${{ github.event.pull_request.number }}" # the pull request number
          PR_TITLE=$(echo "${{ github.event.pull_request.title }}" | jq -R -s -r '.') # sanitized title
          PR_DESCRIPTION=$(echo "${{ github.event.pull_request.body }}" | jq -R -s -r '.') # sanitized description
          PR_URL="${{ github.event.pull_request.html_url }}" # the pull request url
          TARGET_REPO="bforartists/manual"

          TITLE="Merged PR #${PR_NUM} ${PR_TITLE}"
          
          # Create body content with proper formatting
          BODY="Pull request: #${PR_NUM} from the Bforartists repository.
          Title: ${PR_TITLE}
          Link: ${PR_URL}

          ## Description:
          ${PR_DESCRIPTION}

          Please review the changes and update the manual."

          # Use jq to create properly formatted JSON (handles all escaping automatically)
          BODY_JSON=$(jq -n \
            --arg title "$TITLE" \
            --arg body "$BODY" \
            '{title: $title, body: $body}')

          echo "Creating issue: ${TITLE}"

          # -v switch stands for verbose, and writes all errors
          curl -v \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GH_PAT_AUTO_ISSUE}" \
            -H "Content-Type: application/json" \
            -X POST \
            -d "$BODY_JSON" \
            "https://api.github.com/repos/${TARGET_REPO}/issues"
