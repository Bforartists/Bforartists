#usda 1.0
(
    defaultPrim = "root"
    doc = "HAND CRAFTED!"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root"(
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "NC62Custom"
    {
        float3 xformOp:rotateXYZ = (0, -0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def NurbsCurves "Curves"
        {
            int[] curveVertexCounts = [6]
            float3[] extent = [(-1.005, 0.45090014, -0.024999999), (0.62499994, 0.915, 0.024999999)]
            double[] knots = [0, 1, 2.1, 4.3, 8.7, 17.5, 35.1, 40]
            int[] order = [2]
            point3f[] points = [(-1, 0.7, 0), (-0.6001, 0, 0), (-0.19999999, 0.90000004, 0), (0.19999999, 0.8, 0), (0.59999996, 0.5, 0), (1, 0.1, 0)]
            double[] pointWeights = [1, 0.7071067690849304, 1, 0.7071067690849304, 1, 0.7071067690849304]
            float[] widths = [0.01, 0.02, 0.03, 0.04, 0.05, 0.06] (
                interpolation = "vertex"
            )
        }
    }

    def Xform "NC63Custom"
    {
        float3 xformOp:rotateXYZ = (0, -0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 1, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def NurbsCurves "Curves"
        {
            int[] curveVertexCounts = [6]
            float3[] extent = [(-1.005, 0.45090014, -0.024999999), (0.62499994, 0.915, 0.024999999)]
            double[] knots = [0, 1, 3, 9, 27, 28, 30, 31, 32]
            int[] order = [3]
            point3f[] points = [(-1, 0.7, 0), (-0.6001, 0, 0), (-0.19999999, 0.90000004, 0), (0.19999999, 0.8, 0), (0.59999996, 0.5, 0), (1, 0.1, 0)]
            double[] pointWeights = [1, 0.7071067690849304, 1, 0.7071067690849304, 1, 0.7071067690849304]
            float[] widths = [0.01, 0.02, 0.03, 0.04, 0.05, 0.06] (
                interpolation = "vertex"
            )
        }
    }

    def Xform "NC64Custom"
    {
        float3 xformOp:rotateXYZ = (0, -0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 2, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def NurbsCurves "Curves"
        {
            int[] curveVertexCounts = [6]
            float3[] extent = [(-1.005, 0.45090014, -0.024999999), (0.62499994, 0.915, 0.024999999)]
            double[] knots = [0, 0, 0, 1, 2, 6, 8, 10, 10, 10]
            int[] order = [4]
            point3f[] points = [(-1, 0.7, 0), (-0.6001, 0, 0), (-0.19999999, 0.90000004, 0), (0.19999999, 0.8, 0), (0.59999996, 0.5, 0), (1, 0.1, 0)]
            double[] pointWeights = [1, 0.7071067690849304, 1, 0.7071067690849304, 1, 0.7071067690849304]
            float[] widths = [0.01, 0.02, 0.03, 0.04, 0.05, 0.06] (
                interpolation = "vertex"
            )
        }
    }

    def Xform "C52Custom"
    {
        token visibility = "invisible"
        float3 xformOp:rotateXYZ = (0, -0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (4, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def NurbsCurves "Curves"
        {
            int[] curveVertexCounts = [6]
            float3[] extent = [(-1.005, -0.01, -0.024999999), (1.025, 0.915, 0.024999999)]
            double[] knots = [0, 1, 2, 8, 12, 13, 14, 15]
            int[] order = [2]
            point3f[] points = [(-1, 0.7, 0), (-0.5, 0, 0), (0, 0.90000004, 0), (0.5, 0.8, 0), (1, 0.5, 0), (-1, 0.7, 0)]
            double[] pointWeights = [1, 0.7071067690849304, 1, 0.7071067690849304, 1, 1]
            float[] widths = [0.01, 0.02, 0.03, 0.04, 0.049999997, 0.01] (
                interpolation = "vertex"
            )
        }
    }

    def Xform "C53Custom"
    {
        float3 xformOp:rotateXYZ = (0, -0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (4, 1, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def NurbsCurves "Curves"
        {
            int[] curveVertexCounts = [7]
            float3[] extent = [(-1.005, -0.01, -0.024999999), (1.025, 0.915, 0.024999999)]
            double[] knots = [0, 0, 1, 1, 2, 8, 8, 9, 9, 10]
            int[] order = [3]
            point3f[] points = [(-1, 0.7, 0), (-0.5, 0, 0), (0, 0.90000004, 0), (0.5, 0.8, 0), (1, 0.5, 0), (-1, 0.7, 0), (-0.5, 0, 0)]
            double[] pointWeights = [1, 0.7071067690849304, 1, 0.7071067690849304, 1, 1, 0.7071067690849304]
            float[] widths = [0.01, 0.02, 0.03, 0.04, 0.049999997, 0.01, 0.02] (
                interpolation = "vertex"
            )
        }
    }

    def Xform "C54Custom"
    {
        float3 xformOp:rotateXYZ = (0, -0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (4, 2, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def NurbsCurves "Curves"
        {
            int[] curveVertexCounts = [8]
            float3[] extent = [(-0.7463334, 0.31734136, -0.022387203), (0.76110774, 0.852151, 0.022387203)]
            double[] knots = [0, 1, 2, 3, 8, 9, 14, 15, 18, 19, 20, 21]
            int[] order = [4]
            point3f[] points = [(-1, 0.7, 0), (-0.5, 0, 0), (0, 0.90000004, 0), (0.5, 0.8, 0), (1, 0.5, 0), (-1, 0.7, 0), (-0.5, 0, 0), (0, 0.90000004, 0)]
            double[] pointWeights = [1, 0.7071067690849304, 1, 0.7071067690849304, 1, 1, 0.7071067690849304, 1]
            float[] widths = [0.01, 0.02, 0.03, 0.04, 0.049999997, 0.01, 0.02, 0.03] (
                interpolation = "vertex"
            )
        }
    }
}