#usda 1.0
(
    defaultPrim = "root"
    doc = "HAND CRAFTED!"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "main_inst1"
    {
        float3 xformOp:rotateXYZ = (0, -0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (-2.6795833110809326, -1.2492483854293823, -0.18081282079219818)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def Xform "point_instancer_0" (
            instanceable = true
            prepend references = </root/prototypes/point_instancer>
        )
        {
        }

        def Xform "A_0_0_0_0" (
            instanceable = true
            prepend references = </root/prototypes/A_0_0_0>
        )
        {
            float3 xformOp:rotateXYZ = (35.899998, 24.899998, 0.0000011150067)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }
    }

    class "prototypes"
    {
        def Xform "point_instancer"
        {
            def PointInstancer "point_instancer"
            {
                quath[] orientations = [(0.928711, 0.301025, 0.205078, -0.0664673)]
                point3f[] positions = [(0, 0, 0)]
                int[] protoIndices = [0]
                rel prototypes = </root/prototypes/point_instancer/point_instancer/Prototypes/Prototype_0>
                float3[] scales = [(1, 1, 1)]

                def "Prototypes"
                {
                    def "Prototype_0" (
                        prepend references = </root/prototypes/point_instancer/A_0_0_0>
                    )
                    {
                    }
                }
            }

            def "A_0_0_0" (
                instanceable = true
                prepend references = </root/prototypes/A_0_0_0>
            )
            {
            }
        }

        def "A_0_0_0"
        {
            def Mesh "A" (
                active = true
            )
            {
                float3[] extent = [(-0.5, -0.5, 0), (0.5, 0.5, 0)]
                int[] faceVertexCounts = [4]
                int[] faceVertexIndices = [0, 1, 3, 2]
                normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(-0.5, -0.5, 0), (0.5, -0.5, 0), (-0.5, 0.5, 0), (0.5, 0.5, 0)]
                texCoord2f[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
            }
        }
    }
}

