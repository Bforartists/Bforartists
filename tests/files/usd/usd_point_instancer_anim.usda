#usda 1.0
(
    defaultPrim = "horizontalpoints"
    endTimeCode = 4
    framesPerSecond = 24
    metersPerUnit = 1
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def PointInstancer "horizontalpoints" (
    kind = "group"
)
{
    int64[] invisibleIds = []
    quath[] orientations = [(1, 0, 0, 0), (1, 0, 0, 0)]
    point3f[] positions = [(-2, 0, 0), (4, 0, 0)]
    point3f[] positions.timeSamples = {
        1: [(-2, 0, 0), (4, 0, 0)],
        2: [(-1.75, 0, 0), (3.75, 0, 0)],
        3: [(-1.5, 0, 0), (3.5, 0, 0)],
        4: [(-1.25, 0, 0), (3.25, 0, 0)],
    }
    float3[] scales.timeSamples = {
        1: [(1, 1, 1), (1, 1, 1)],
        2: [(0.9, 0.9, 0.9), (0.8, 0.8, 0.8)],
        3: [(0.7, 0.7, 0.7), (0.6, 0.6, 0.6)],
        4: [(0.5, 0.5, 0.5), (0.4, 0.4, 0.4)],
    }
    int[] protoIndices = [0, 0]
    rel prototypes = </horizontalpoints/Prototypes/Root>

    def Scope "Prototypes" (
        kind = "group"
    )
    {
        def Xform "Root" (
            kind = "group"
        )
        {
            def PointInstancer "verticalpoints" (
                kind = "group"
            )
            {
                int64[] invisibleIds = []
                quath[] orientations = [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)]
                point3f[] positions = [(0, 0, 0), (0, 2, 0), (0, 4, 0)]
                point3f[] positions.timeSamples = {
                    1: [(0, 0, 0), (0, 2, 0), (0, 4, 0)],
                    2: [(0, 0, 0), (0, 2.1, 0), (0, 4.1, 0)],
                    3: [(0, 0, 0), (0, 2.2, 0), (0, 4.2, 0)],
                    4: [(0, 0, 0), (0, 2.3, 0), (0, 4.3, 0)],
                }
                quath[] orientations.timeSamples = {
                    1: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
                    2: [(1, 0.1, 0, 0), (1, 0, 0.1, 0), (1, 0, 0, 0.1)],
                    3: [(1, 0.2, 0, 0), (1, 0, 0.2, 0), (1, 0, 0, 0.2)],
                    4: [(1, 0.3, 0, 0), (1, 0, 0.3, 0), (1, 0, 0, 0.3)],
                }
                int[] protoIndices = [0, 0, 0]
                rel prototypes = </horizontalpoints/Prototypes/Root/verticalpoints/Prototypes/Root>

                def Scope "Prototypes" (
                    kind = "group"
                )
                {
                    def Xform "Root" (
                        kind = "group"
                    )
                    {
                        def Xform "grid1" (
                            kind = "component"
                        )
                        {
                            matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                            uniform token[] xformOpOrder = ["xformOp:transform:xform"]

                            def Mesh "mesh_0"
                            {
                                float3[] extent = [(-0.5, -0.5, 0), (0.5, 0.5, 0)]
                                int[] faceVertexCounts = [4]
                                int[] faceVertexIndices = [0, 1, 3, 2]
                                uniform token orientation = "leftHanded"
                                point3f[] points = [(-0.5, -0.5, 0), (0.5, -0.5, 0), (-0.5, 0.5, 0), (0.5, 0.5, 0)] (
                                    interpolation = "vertex"
                                )
                                uniform token subdivisionScheme = "none"
                            }
                        }
                    }
                }
            }
        }
    }
}

