import sys
Import ('user_options_dict')
Import ('library_env')

gp_ghost_env = library_env.Copy()

source_files = ['GPG_Application.cpp',
				'GPG_Canvas.cpp',
				'GPG_ghost.cpp',
				'GPG_KeyboardDevice.cpp',
				'GPG_System.cpp']

gp_ghost_env.Append( CPPPATH = ['.',
								'#intern/string',
								'#intern/ghost',
								'#intern/guardedalloc',
								'#intern/bmfont',
								'#intern/moto/include',
								'#intern/SoundSystem',
								'#source/gameengine/Rasterizer/RAS_OpenGLRasterizer',
								'#source/kernel/gen_system',
								'#source/kernel/gen_messaging',
								'#source/gameengine/Converter',
								'#source/blender/imbuf',
								'#source/gameengine/Ketsji',
								'#source/blender/blenlib',
								'#source/blender/blenkernel',
								'#source/blender',
								'#source/blender/include',
								'#source/blender/makesdna',
								'#source/gameengine/Rasterizer',
								'#source/gameengine/GameLogic',
								'#source/gameengine/Expressions',
								'#source/gameengine/Network',
								'#source/gameengine/SceneGraph',
								'#source/gameengine/Physics/common',
								'#source/gameengine/Physics/Sumo',
								'#source/gameengine/Physics/Sumo/Fuzzics/include',
								'#source/gameengine/Network/LoopBackNetwork',
								'#source/gameengine/GamePlayer/common',
								'#source/blender/misc',
								'#source/blender/blenloader'])

gp_ghost_env.Append (CPPPATH = user_options_dict['PYTHON_INCLUDE'])
gp_ghost_env.Append (CPPPATH = user_options_dict['SOLID_INCLUDE'])

if sys.platform=='win32':
    gp_ghost_env.Append (CXXFLAGS = ['/GR'])

gp_ghost_env.Library (target='#'+user_options_dict['BUILD_DIR']+'/lib/GPG_ghost', source=source_files)