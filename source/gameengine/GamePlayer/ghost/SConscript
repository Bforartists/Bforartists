#!/usr/bin/env python
#
# ***** BEGIN GPL LICENSE BLOCK *****
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# The Original Code is Copyright (C) 2006, Blender Foundation
# All rights reserved.
#
# The Original Code is: all of this file.
#
# Contributor(s): Nathan Letwory.
#
# ***** END GPL LICENSE BLOCK *****

import sys
Import ('env')

source_files = [
    'GPG_Application.cpp',
    'GPG_Canvas.cpp',
    'GPG_ghost.cpp',
    'GPG_KeyboardDevice.cpp',
    'GPG_System.cpp',
    ]

incs = [
    '.',
    '#intern/string',
    '#intern/ghost',
    '#intern/guardedalloc',
    '#intern/moto/include',
    '#intern/container',
    '#intern/audaspace/intern',
    '#source/gameengine/Rasterizer/RAS_OpenGLRasterizer',
    '#source/gameengine/BlenderRoutines',
    '#source/gameengine/Converter',
    '#source/blender/imbuf',
    '#source/gameengine/Ketsji',
    '#source/blender/blenfont',
    '#source/blender/blenlib',
    '#source/blender/blenkernel',
    '#source/blender',
    '#source/blender/include',
    '#source/blender/makesdna',
    '#source/blender/makesrna',
    '#source/gameengine/Rasterizer',
    '#source/gameengine/GameLogic',
    '#source/gameengine/Expressions',
    '#source/gameengine/Network',
    '#source/gameengine/SceneGraph',
    '#source/gameengine/Physics/common',
    '#source/gameengine/Network/LoopBackNetwork',
    '#source/gameengine/GamePlayer/common',
    '#source/blender/misc',
    '#source/blender/blenloader',
    '#source/blender/gpu',
    '#extern/glew/include',
    ]

incs.append(env['BF_PTHREADS_INC'])

defs = [
    'GLEW_STATIC',
    ]

if env['WITH_BF_PYTHON']:
    incs += Split(env['BF_PYTHON_INC'])
    defs.append('WITH_PYTHON')

if env['WITH_BF_FFMPEG']:
    defs.append('WITH_FFMPEG')

if env['WITH_BF_INTERNATIONAL']:
    defs.append('WITH_INTERNATIONAL')

env.BlenderLib (libname='ge_player_ghost', sources=source_files, includes = incs, defines = defs, libtype=['player'],priority=[0], cxx_compileflags=env['BGE_CXXFLAGS'])
