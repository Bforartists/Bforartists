
/* on Linux we exclude LLVM symbols, they conflict with Mesa llvmpipe
 * we also keep boost's symbols local, since some python modules could
 * be using boost as well (mainly that's for lux render)
 */

{
global:
  *;
  *_boost*;
local:
  __once_proxy;
  _ZSt11__once_call;
  _ZSt15__once_callable;
  al*;
  *Alembic*;
  av*;
  blosc*;
  *boost*;
  *ceres*;
  *cineon*;
  *clang*;
  *COLLADA*;
  cu*;
  *default_error_condition*;
  *dpx*;
  *embree*;
  ff_*;
  fftw*;
  FLAC*;
  FT_*;
  *GeneratedSaxParser*;
  *google*;
  gsm*;
  Gsm*;
  html*;
  id3tag*;
  *Iex*;
  *Ilm*;
  *Imath*;
  *Imf*;
  jack_*;
  jpeg_*;
  jsimd**;
  lame_*;
  *llvm*;
  *LLVM*;
  *MathML*;
  *mkldnn*;
  nvrtc*;
  oc_*;
  ogg*;
  *oidn*;
  *OpenColorIO*;
  *OpenImageIO*;
  *OpenSubdiv*;
  *openvdb*;
  opj_*;
  opus_*;
  *OSL*;
  *pathYy*;
  png_*;
  *SDL*;
  *squish*;
  *tbb*;
  *textFileFormatYy*;
  *TIFF*;
  *tinyformat*;
  *usdBlender*;
  vorbis*;
  vp8*;
  vp9*;
  vpx*;
  x264_*;
  xml*;
  xvid*;
  *YAML*;

  /* LLVM symbols not in the LLVM namespace that can conflict with LLVM usage
   * in OpenGL and OpenCL drivers.
   *
   * These are found by doing a Blender build with and without OSL, and
   * comparing the output of nm -gD ./bin/blender to find symbols. */
  AlwaysSpillBase;
  AsmMacroMaxNestingDepth;
  AttributorRun;
  CheckBFIUnknownBlockQueries;
  *cloneBitwiseIVUser*;
  *computeHostNumHardwareThread*;
  *computeHostNumPhysicalCores*;
  decodeInstruction;
  DisableBasicAA;
  DisablePreInliner;
  DisableWholeProgramVisibility;
  EnableCHR;
  EnableConstraintElimination;
  EnableGVNHoist;
  EnableGVNSink;
  EnableHotColdSplit;
  EnableIPRA;
  EnableIROutliner;
  EnableKnowledgeRetention;
  EnableLoopFlatten;
  EnableMatrix;
  EnableOrderFileInstrumentation;
  EnablePGSO;
  EnableUnrollAndJam;
  EnableVPlanNativePath;
  EnableVPlanPredication;
  ExtraVectorizerPasses;
  FlattenedProfileUsed;
  ForcePGSO;
  ForceStackAlign;
  ForceSummaryEdgesCold;
  FSEC;
  *getExtendedOperandRecurrence*;
  *getWideRecurrence*;
  InlinerFunctionImportStats;
  *IROutlinerLegacyPass*;
  __jit_debug_descriptor;
  __jit_debug_register_code;
  _Jv_RegisterClasses;
  *LiveDebugValues*;
  *LoopInterchangeLegacyPass*;
  MachineRegionInfoPassID;
  MaxDevirtIterations;
  MaxRegistersForGCPointers;
  MemOPOptMemcmpBcmp;
  MemOPSizeLarge;
  MemOPSizeRange;
  MISchedPostRA;
  ModuleSummaryDotFile;
  __morestack;
  Name;
  NumNamedVarArgParams;
  PGOViewCounts;
  PGSOColdCodeOnly;
  PGSOColdCodeOnlyForInstrPGO;
  PGSOColdCodeOnlyForPartialSamplePGO;
  PGSOColdCodeOnlyForSamplePGO;
  PgsoCutoffInstrProf;
  PgsoCutoffSampleProf;
  PGSOLargeWorkingSetSizeOnly;
  PreInlineThreshold;
  PrintBlockFreqFuncName;
  PrintBranchProbFuncName;
  ProfileLikelyProb;
  RunNewGVN;
  RunPartialInlining;
  RunSLPVectorization;
  ScalePartialSampleProfileWorkingSetSize;
  *ScopedAliasMetadataDeepCloner*;
  ShouldPreserveAllAttributes;
  SkipFunctionNames;
  StartAfterOptName;
  StartBeforeOptName;
  StaticLikelyProb;
  StopAfterOptName;
  StopBeforeOptName;
  UseContextLessSummary;
  UseDbgAddr;
  UseLEB128Directives;
  UseRegistersForDeoptValues;
  UseRegistersForGCPointersInLandingPad;
  ViewBlockFreqFuncName;
  ViewBlockLayoutWithBFI;
  ViewHotFreqPercent;
  WholeProgramVisibility;
  *widenLoopCompare*;
  *widenWithVariant*;
  WriteRelBFToSummary;
  X86CompilationCallback*;
};
