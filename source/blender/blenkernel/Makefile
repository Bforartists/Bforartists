# Makefile.in generated by automake 1.7.6 from Makefile.am.
# source/blender/blenkernel/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/blender
pkglibdir = $(libdir)/blender
pkgincludedir = $(includedir)/blender
top_builddir = ../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run autoconf
AUTOHEADER = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run autoheader
AUTOMAKE = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run automake-1.7
AWK = mawk
BLIB_JPEG = 
BLIB_PNG = 
BLIB_SDL = 
BlenderFMOD_FALSE = 
BlenderFMOD_TRUE = #
BlenderGAME_FALSE = 
BlenderGAME_TRUE = #
BlenderOPENAL_FALSE = 
BlenderOPENAL_TRUE = #
BlenderPLUGIN_FALSE = 
BlenderPLUGIN_TRUE = #
BlenderQUICKTIME_FALSE = 
BlenderQUICKTIME_TRUE = #
BlenderSTATIC_FALSE = 
BlenderSTATIC_TRUE = #
CARBON_FALSE = 
CARBON_TRUE = #
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -funsigned-char
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -funsigned-char
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBM = -lm
LIBOBJS = 

LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKE = /usr/bin/make
MAKEINFO = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run makeinfo
OBJEXT = o
PACKAGE = blender
PACKAGE_BUGREPORT = 
PACKAGE_NAME = blender
PACKAGE_STRING = blender 2.29
PACKAGE_TARNAME = blender
PACKAGE_VERSION = 2.29
PATH_SEPARATOR = :
PBBUILD = 
PYTHON = /usr/bin/python
PYTHONSYSPREFIX = /usr
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_LDFLAGS = -Xlinker -export-dynamic
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.2
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL -lpthread
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
USE_OPENAL_FALSE = 
USE_OPENAL_TRUE = #
VERSION = 2.29
WIN32_FALSE = 
WIN32_TRUE = #
X11_FALSE = #
X11_TRUE = 
X_CFLAGS =  -I/usr/X11R6/include
X_EXTRA_LIBS = 
X_LIBS =  -L/usr/X11R6/lib
X_PRE_LIBS =  -lSM -lICE
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
b_jpeg_FALSE = 
b_jpeg_TRUE = #
b_png_FALSE = 
b_png_TRUE = #
b_sdl_FALSE = 
b_sdl_TRUE = #
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/qword/nuevo/fuentes/trabajo/blender/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
pkgpyexecdir = ${pyexecdir}/blender
pkgpythondir = ${pythondir}/blender
prefix = /usr/local
program_transform_name = s,x,x,
pyexecdir = ${exec_prefix}/lib/python2.2/site-packages
pythondir = ${prefix}/lib/python2.2/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
noinst_LTLIBRARIES = libblender_blenkernel.la

libblender_blenkernel_la_SOURCES = \
	BKE_action.h \
	BKE_anim.h \
	BKE_armature.h \
	BKE_bad_level_calls.h \
	BKE_blender.h \
	BKE_bmfont.h \
	BKE_bmfont_types.h \
	BKE_booleanops.h \
	BKE_booleanops_mesh.h \
	BKE_constraint.h \
	BKE_curve.h \
	BKE_deform.h \
	BKE_displist.h \
	BKE_effect.h \
	BKE_endian.h \
	BKE_exotic.h \
	BKE_font.h \
	BKE_global.h \
	BKE_group.h \
	BKE_ika.h \
	BKE_image.h \
	BKE_ipo.h \
	BKE_key.h \
	BKE_lattice.h \
	BKE_library.h \
	BKE_main.h \
	BKE_material.h \
	BKE_mball.h \
	BKE_mesh.h \
	BKE_nla.h \
	BKE_object.h \
	BKE_osa_types.h \
	BKE_packedFile.h \
	BKE_plugin_types.h \
	BKE_property.h \
	BKE_sca.h \
	BKE_scene.h \
	BKE_screen.h \
	BKE_script.h \
	BKE_sound.h \
	BKE_subsurf.h \
	BKE_text.h \
	BKE_texture.h \
	BKE_utildefines.h \
	BKE_world.h \
	BKE_writeavi.h \
	intern/constraint.c \
	intern/group.c \
	intern/material.c \
	intern/sca.c \
	intern/world.c \
	intern/curve.c \
	intern/ika.c \
	intern/mball.c \
	intern/scene.c \
	intern/writeavi.c \
	intern/action.c \
	intern/deform.c \
	intern/image.c \
	intern/mesh.c \
	intern/screen.c \
	intern/anim.c \
	intern/displist.c \
	intern/ipo.c \
	intern/nla.c \
	intern/sound.c \
	intern/armature.c \
	intern/effect.c \
	intern/key.c \
	intern/object.c \
	intern/subsurf.c \
	intern/blender.c \
	intern/exotic.c \
	intern/lattice.c \
	intern/packedFile.c \
	intern/text.c \
	intern/script.c \
	intern/bmfont.c \
	intern/font.c \
	intern/library.c \
	intern/property.c \
	intern/texture.c


INCLUDES = -I$(top_srcdir)/intern/guardedalloc \
	-I$(top_srcdir)/source/blender/include \
	-I$(top_srcdir)/source/blender/blenlib \
	-I$(top_srcdir)/source/blender/makesdna \
	-I$(top_srcdir)/source/blender/python \
	-I$(top_srcdir)/source/blender/render/extern/include \
	-I$(top_srcdir)/source/blender/imbuf \
	-I$(top_srcdir)/source/blender/avi \
	-I$(top_srcdir)/intern/iksolver/extern \
	-I$(top_srcdir)/source/blender/blenloader


EXTRA_DIST = \
	Makefile \
	intern/Makefile

subdir = source/blender/blenkernel
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libblender_blenkernel_la_LDFLAGS =
libblender_blenkernel_la_LIBADD =
am_libblender_blenkernel_la_OBJECTS = constraint.lo group.lo material.lo \
	sca.lo world.lo curve.lo ika.lo mball.lo scene.lo writeavi.lo \
	action.lo deform.lo image.lo mesh.lo screen.lo anim.lo \
	displist.lo ipo.lo nla.lo sound.lo armature.lo effect.lo key.lo \
	object.lo subsurf.lo blender.lo exotic.lo lattice.lo \
	packedFile.lo text.lo script.lo bmfont.lo font.lo library.lo \
	property.lo texture.lo
libblender_blenkernel_la_OBJECTS = \
	$(am_libblender_blenkernel_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/action.Plo ./$(DEPDIR)/anim.Plo \
	./$(DEPDIR)/armature.Plo ./$(DEPDIR)/blender.Plo \
	./$(DEPDIR)/bmfont.Plo ./$(DEPDIR)/constraint.Plo \
	./$(DEPDIR)/curve.Plo ./$(DEPDIR)/deform.Plo \
	./$(DEPDIR)/displist.Plo ./$(DEPDIR)/effect.Plo \
	./$(DEPDIR)/exotic.Plo ./$(DEPDIR)/font.Plo \
	./$(DEPDIR)/group.Plo ./$(DEPDIR)/ika.Plo \
	./$(DEPDIR)/image.Plo ./$(DEPDIR)/ipo.Plo \
	./$(DEPDIR)/key.Plo ./$(DEPDIR)/lattice.Plo \
	./$(DEPDIR)/library.Plo ./$(DEPDIR)/material.Plo \
	./$(DEPDIR)/mball.Plo ./$(DEPDIR)/mesh.Plo \
	./$(DEPDIR)/nla.Plo ./$(DEPDIR)/object.Plo \
	./$(DEPDIR)/packedFile.Plo ./$(DEPDIR)/property.Plo \
	./$(DEPDIR)/sca.Plo ./$(DEPDIR)/scene.Plo \
	./$(DEPDIR)/screen.Plo ./$(DEPDIR)/script.Plo \
	./$(DEPDIR)/sound.Plo ./$(DEPDIR)/subsurf.Plo \
	./$(DEPDIR)/text.Plo ./$(DEPDIR)/texture.Plo \
	./$(DEPDIR)/world.Plo ./$(DEPDIR)/writeavi.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libblender_blenkernel_la_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libblender_blenkernel_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  source/blender/blenkernel/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libblender_blenkernel.la: $(libblender_blenkernel_la_OBJECTS) $(libblender_blenkernel_la_DEPENDENCIES) 
	$(LINK)  $(libblender_blenkernel_la_LDFLAGS) $(libblender_blenkernel_la_OBJECTS) $(libblender_blenkernel_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/action.Plo
include ./$(DEPDIR)/anim.Plo
include ./$(DEPDIR)/armature.Plo
include ./$(DEPDIR)/blender.Plo
include ./$(DEPDIR)/bmfont.Plo
include ./$(DEPDIR)/constraint.Plo
include ./$(DEPDIR)/curve.Plo
include ./$(DEPDIR)/deform.Plo
include ./$(DEPDIR)/displist.Plo
include ./$(DEPDIR)/effect.Plo
include ./$(DEPDIR)/exotic.Plo
include ./$(DEPDIR)/font.Plo
include ./$(DEPDIR)/group.Plo
include ./$(DEPDIR)/ika.Plo
include ./$(DEPDIR)/image.Plo
include ./$(DEPDIR)/ipo.Plo
include ./$(DEPDIR)/key.Plo
include ./$(DEPDIR)/lattice.Plo
include ./$(DEPDIR)/library.Plo
include ./$(DEPDIR)/material.Plo
include ./$(DEPDIR)/mball.Plo
include ./$(DEPDIR)/mesh.Plo
include ./$(DEPDIR)/nla.Plo
include ./$(DEPDIR)/object.Plo
include ./$(DEPDIR)/packedFile.Plo
include ./$(DEPDIR)/property.Plo
include ./$(DEPDIR)/sca.Plo
include ./$(DEPDIR)/scene.Plo
include ./$(DEPDIR)/screen.Plo
include ./$(DEPDIR)/script.Plo
include ./$(DEPDIR)/sound.Plo
include ./$(DEPDIR)/subsurf.Plo
include ./$(DEPDIR)/text.Plo
include ./$(DEPDIR)/texture.Plo
include ./$(DEPDIR)/world.Plo
include ./$(DEPDIR)/writeavi.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

constraint.o: intern/constraint.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT constraint.o -MD -MP -MF "$(DEPDIR)/constraint.Tpo" \
	  -c -o constraint.o `test -f 'intern/constraint.c' || echo '$(srcdir)/'`intern/constraint.c; \
	then mv -f "$(DEPDIR)/constraint.Tpo" "$(DEPDIR)/constraint.Po"; \
	else rm -f "$(DEPDIR)/constraint.Tpo"; exit 1; \
	fi
#	source='intern/constraint.c' object='constraint.o' libtool=no \
#	depfile='$(DEPDIR)/constraint.Po' tmpdepfile='$(DEPDIR)/constraint.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o constraint.o `test -f 'intern/constraint.c' || echo '$(srcdir)/'`intern/constraint.c

constraint.obj: intern/constraint.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT constraint.obj -MD -MP -MF "$(DEPDIR)/constraint.Tpo" \
	  -c -o constraint.obj `if test -f 'intern/constraint.c'; then $(CYGPATH_W) 'intern/constraint.c'; else $(CYGPATH_W) '$(srcdir)/intern/constraint.c'; fi`; \
	then mv -f "$(DEPDIR)/constraint.Tpo" "$(DEPDIR)/constraint.Po"; \
	else rm -f "$(DEPDIR)/constraint.Tpo"; exit 1; \
	fi
#	source='intern/constraint.c' object='constraint.obj' libtool=no \
#	depfile='$(DEPDIR)/constraint.Po' tmpdepfile='$(DEPDIR)/constraint.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o constraint.obj `if test -f 'intern/constraint.c'; then $(CYGPATH_W) 'intern/constraint.c'; else $(CYGPATH_W) '$(srcdir)/intern/constraint.c'; fi`

constraint.lo: intern/constraint.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT constraint.lo -MD -MP -MF "$(DEPDIR)/constraint.Tpo" \
	  -c -o constraint.lo `test -f 'intern/constraint.c' || echo '$(srcdir)/'`intern/constraint.c; \
	then mv -f "$(DEPDIR)/constraint.Tpo" "$(DEPDIR)/constraint.Plo"; \
	else rm -f "$(DEPDIR)/constraint.Tpo"; exit 1; \
	fi
#	source='intern/constraint.c' object='constraint.lo' libtool=yes \
#	depfile='$(DEPDIR)/constraint.Plo' tmpdepfile='$(DEPDIR)/constraint.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o constraint.lo `test -f 'intern/constraint.c' || echo '$(srcdir)/'`intern/constraint.c

group.o: intern/group.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT group.o -MD -MP -MF "$(DEPDIR)/group.Tpo" \
	  -c -o group.o `test -f 'intern/group.c' || echo '$(srcdir)/'`intern/group.c; \
	then mv -f "$(DEPDIR)/group.Tpo" "$(DEPDIR)/group.Po"; \
	else rm -f "$(DEPDIR)/group.Tpo"; exit 1; \
	fi
#	source='intern/group.c' object='group.o' libtool=no \
#	depfile='$(DEPDIR)/group.Po' tmpdepfile='$(DEPDIR)/group.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o group.o `test -f 'intern/group.c' || echo '$(srcdir)/'`intern/group.c

group.obj: intern/group.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT group.obj -MD -MP -MF "$(DEPDIR)/group.Tpo" \
	  -c -o group.obj `if test -f 'intern/group.c'; then $(CYGPATH_W) 'intern/group.c'; else $(CYGPATH_W) '$(srcdir)/intern/group.c'; fi`; \
	then mv -f "$(DEPDIR)/group.Tpo" "$(DEPDIR)/group.Po"; \
	else rm -f "$(DEPDIR)/group.Tpo"; exit 1; \
	fi
#	source='intern/group.c' object='group.obj' libtool=no \
#	depfile='$(DEPDIR)/group.Po' tmpdepfile='$(DEPDIR)/group.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o group.obj `if test -f 'intern/group.c'; then $(CYGPATH_W) 'intern/group.c'; else $(CYGPATH_W) '$(srcdir)/intern/group.c'; fi`

group.lo: intern/group.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT group.lo -MD -MP -MF "$(DEPDIR)/group.Tpo" \
	  -c -o group.lo `test -f 'intern/group.c' || echo '$(srcdir)/'`intern/group.c; \
	then mv -f "$(DEPDIR)/group.Tpo" "$(DEPDIR)/group.Plo"; \
	else rm -f "$(DEPDIR)/group.Tpo"; exit 1; \
	fi
#	source='intern/group.c' object='group.lo' libtool=yes \
#	depfile='$(DEPDIR)/group.Plo' tmpdepfile='$(DEPDIR)/group.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o group.lo `test -f 'intern/group.c' || echo '$(srcdir)/'`intern/group.c

material.o: intern/material.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT material.o -MD -MP -MF "$(DEPDIR)/material.Tpo" \
	  -c -o material.o `test -f 'intern/material.c' || echo '$(srcdir)/'`intern/material.c; \
	then mv -f "$(DEPDIR)/material.Tpo" "$(DEPDIR)/material.Po"; \
	else rm -f "$(DEPDIR)/material.Tpo"; exit 1; \
	fi
#	source='intern/material.c' object='material.o' libtool=no \
#	depfile='$(DEPDIR)/material.Po' tmpdepfile='$(DEPDIR)/material.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o material.o `test -f 'intern/material.c' || echo '$(srcdir)/'`intern/material.c

material.obj: intern/material.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT material.obj -MD -MP -MF "$(DEPDIR)/material.Tpo" \
	  -c -o material.obj `if test -f 'intern/material.c'; then $(CYGPATH_W) 'intern/material.c'; else $(CYGPATH_W) '$(srcdir)/intern/material.c'; fi`; \
	then mv -f "$(DEPDIR)/material.Tpo" "$(DEPDIR)/material.Po"; \
	else rm -f "$(DEPDIR)/material.Tpo"; exit 1; \
	fi
#	source='intern/material.c' object='material.obj' libtool=no \
#	depfile='$(DEPDIR)/material.Po' tmpdepfile='$(DEPDIR)/material.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o material.obj `if test -f 'intern/material.c'; then $(CYGPATH_W) 'intern/material.c'; else $(CYGPATH_W) '$(srcdir)/intern/material.c'; fi`

material.lo: intern/material.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT material.lo -MD -MP -MF "$(DEPDIR)/material.Tpo" \
	  -c -o material.lo `test -f 'intern/material.c' || echo '$(srcdir)/'`intern/material.c; \
	then mv -f "$(DEPDIR)/material.Tpo" "$(DEPDIR)/material.Plo"; \
	else rm -f "$(DEPDIR)/material.Tpo"; exit 1; \
	fi
#	source='intern/material.c' object='material.lo' libtool=yes \
#	depfile='$(DEPDIR)/material.Plo' tmpdepfile='$(DEPDIR)/material.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o material.lo `test -f 'intern/material.c' || echo '$(srcdir)/'`intern/material.c

sca.o: intern/sca.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sca.o -MD -MP -MF "$(DEPDIR)/sca.Tpo" \
	  -c -o sca.o `test -f 'intern/sca.c' || echo '$(srcdir)/'`intern/sca.c; \
	then mv -f "$(DEPDIR)/sca.Tpo" "$(DEPDIR)/sca.Po"; \
	else rm -f "$(DEPDIR)/sca.Tpo"; exit 1; \
	fi
#	source='intern/sca.c' object='sca.o' libtool=no \
#	depfile='$(DEPDIR)/sca.Po' tmpdepfile='$(DEPDIR)/sca.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sca.o `test -f 'intern/sca.c' || echo '$(srcdir)/'`intern/sca.c

sca.obj: intern/sca.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sca.obj -MD -MP -MF "$(DEPDIR)/sca.Tpo" \
	  -c -o sca.obj `if test -f 'intern/sca.c'; then $(CYGPATH_W) 'intern/sca.c'; else $(CYGPATH_W) '$(srcdir)/intern/sca.c'; fi`; \
	then mv -f "$(DEPDIR)/sca.Tpo" "$(DEPDIR)/sca.Po"; \
	else rm -f "$(DEPDIR)/sca.Tpo"; exit 1; \
	fi
#	source='intern/sca.c' object='sca.obj' libtool=no \
#	depfile='$(DEPDIR)/sca.Po' tmpdepfile='$(DEPDIR)/sca.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sca.obj `if test -f 'intern/sca.c'; then $(CYGPATH_W) 'intern/sca.c'; else $(CYGPATH_W) '$(srcdir)/intern/sca.c'; fi`

sca.lo: intern/sca.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sca.lo -MD -MP -MF "$(DEPDIR)/sca.Tpo" \
	  -c -o sca.lo `test -f 'intern/sca.c' || echo '$(srcdir)/'`intern/sca.c; \
	then mv -f "$(DEPDIR)/sca.Tpo" "$(DEPDIR)/sca.Plo"; \
	else rm -f "$(DEPDIR)/sca.Tpo"; exit 1; \
	fi
#	source='intern/sca.c' object='sca.lo' libtool=yes \
#	depfile='$(DEPDIR)/sca.Plo' tmpdepfile='$(DEPDIR)/sca.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sca.lo `test -f 'intern/sca.c' || echo '$(srcdir)/'`intern/sca.c

world.o: intern/world.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT world.o -MD -MP -MF "$(DEPDIR)/world.Tpo" \
	  -c -o world.o `test -f 'intern/world.c' || echo '$(srcdir)/'`intern/world.c; \
	then mv -f "$(DEPDIR)/world.Tpo" "$(DEPDIR)/world.Po"; \
	else rm -f "$(DEPDIR)/world.Tpo"; exit 1; \
	fi
#	source='intern/world.c' object='world.o' libtool=no \
#	depfile='$(DEPDIR)/world.Po' tmpdepfile='$(DEPDIR)/world.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o world.o `test -f 'intern/world.c' || echo '$(srcdir)/'`intern/world.c

world.obj: intern/world.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT world.obj -MD -MP -MF "$(DEPDIR)/world.Tpo" \
	  -c -o world.obj `if test -f 'intern/world.c'; then $(CYGPATH_W) 'intern/world.c'; else $(CYGPATH_W) '$(srcdir)/intern/world.c'; fi`; \
	then mv -f "$(DEPDIR)/world.Tpo" "$(DEPDIR)/world.Po"; \
	else rm -f "$(DEPDIR)/world.Tpo"; exit 1; \
	fi
#	source='intern/world.c' object='world.obj' libtool=no \
#	depfile='$(DEPDIR)/world.Po' tmpdepfile='$(DEPDIR)/world.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o world.obj `if test -f 'intern/world.c'; then $(CYGPATH_W) 'intern/world.c'; else $(CYGPATH_W) '$(srcdir)/intern/world.c'; fi`

world.lo: intern/world.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT world.lo -MD -MP -MF "$(DEPDIR)/world.Tpo" \
	  -c -o world.lo `test -f 'intern/world.c' || echo '$(srcdir)/'`intern/world.c; \
	then mv -f "$(DEPDIR)/world.Tpo" "$(DEPDIR)/world.Plo"; \
	else rm -f "$(DEPDIR)/world.Tpo"; exit 1; \
	fi
#	source='intern/world.c' object='world.lo' libtool=yes \
#	depfile='$(DEPDIR)/world.Plo' tmpdepfile='$(DEPDIR)/world.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o world.lo `test -f 'intern/world.c' || echo '$(srcdir)/'`intern/world.c

curve.o: intern/curve.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT curve.o -MD -MP -MF "$(DEPDIR)/curve.Tpo" \
	  -c -o curve.o `test -f 'intern/curve.c' || echo '$(srcdir)/'`intern/curve.c; \
	then mv -f "$(DEPDIR)/curve.Tpo" "$(DEPDIR)/curve.Po"; \
	else rm -f "$(DEPDIR)/curve.Tpo"; exit 1; \
	fi
#	source='intern/curve.c' object='curve.o' libtool=no \
#	depfile='$(DEPDIR)/curve.Po' tmpdepfile='$(DEPDIR)/curve.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o curve.o `test -f 'intern/curve.c' || echo '$(srcdir)/'`intern/curve.c

curve.obj: intern/curve.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT curve.obj -MD -MP -MF "$(DEPDIR)/curve.Tpo" \
	  -c -o curve.obj `if test -f 'intern/curve.c'; then $(CYGPATH_W) 'intern/curve.c'; else $(CYGPATH_W) '$(srcdir)/intern/curve.c'; fi`; \
	then mv -f "$(DEPDIR)/curve.Tpo" "$(DEPDIR)/curve.Po"; \
	else rm -f "$(DEPDIR)/curve.Tpo"; exit 1; \
	fi
#	source='intern/curve.c' object='curve.obj' libtool=no \
#	depfile='$(DEPDIR)/curve.Po' tmpdepfile='$(DEPDIR)/curve.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o curve.obj `if test -f 'intern/curve.c'; then $(CYGPATH_W) 'intern/curve.c'; else $(CYGPATH_W) '$(srcdir)/intern/curve.c'; fi`

curve.lo: intern/curve.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT curve.lo -MD -MP -MF "$(DEPDIR)/curve.Tpo" \
	  -c -o curve.lo `test -f 'intern/curve.c' || echo '$(srcdir)/'`intern/curve.c; \
	then mv -f "$(DEPDIR)/curve.Tpo" "$(DEPDIR)/curve.Plo"; \
	else rm -f "$(DEPDIR)/curve.Tpo"; exit 1; \
	fi
#	source='intern/curve.c' object='curve.lo' libtool=yes \
#	depfile='$(DEPDIR)/curve.Plo' tmpdepfile='$(DEPDIR)/curve.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o curve.lo `test -f 'intern/curve.c' || echo '$(srcdir)/'`intern/curve.c

ika.o: intern/ika.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ika.o -MD -MP -MF "$(DEPDIR)/ika.Tpo" \
	  -c -o ika.o `test -f 'intern/ika.c' || echo '$(srcdir)/'`intern/ika.c; \
	then mv -f "$(DEPDIR)/ika.Tpo" "$(DEPDIR)/ika.Po"; \
	else rm -f "$(DEPDIR)/ika.Tpo"; exit 1; \
	fi
#	source='intern/ika.c' object='ika.o' libtool=no \
#	depfile='$(DEPDIR)/ika.Po' tmpdepfile='$(DEPDIR)/ika.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ika.o `test -f 'intern/ika.c' || echo '$(srcdir)/'`intern/ika.c

ika.obj: intern/ika.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ika.obj -MD -MP -MF "$(DEPDIR)/ika.Tpo" \
	  -c -o ika.obj `if test -f 'intern/ika.c'; then $(CYGPATH_W) 'intern/ika.c'; else $(CYGPATH_W) '$(srcdir)/intern/ika.c'; fi`; \
	then mv -f "$(DEPDIR)/ika.Tpo" "$(DEPDIR)/ika.Po"; \
	else rm -f "$(DEPDIR)/ika.Tpo"; exit 1; \
	fi
#	source='intern/ika.c' object='ika.obj' libtool=no \
#	depfile='$(DEPDIR)/ika.Po' tmpdepfile='$(DEPDIR)/ika.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ika.obj `if test -f 'intern/ika.c'; then $(CYGPATH_W) 'intern/ika.c'; else $(CYGPATH_W) '$(srcdir)/intern/ika.c'; fi`

ika.lo: intern/ika.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ika.lo -MD -MP -MF "$(DEPDIR)/ika.Tpo" \
	  -c -o ika.lo `test -f 'intern/ika.c' || echo '$(srcdir)/'`intern/ika.c; \
	then mv -f "$(DEPDIR)/ika.Tpo" "$(DEPDIR)/ika.Plo"; \
	else rm -f "$(DEPDIR)/ika.Tpo"; exit 1; \
	fi
#	source='intern/ika.c' object='ika.lo' libtool=yes \
#	depfile='$(DEPDIR)/ika.Plo' tmpdepfile='$(DEPDIR)/ika.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ika.lo `test -f 'intern/ika.c' || echo '$(srcdir)/'`intern/ika.c

mball.o: intern/mball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mball.o -MD -MP -MF "$(DEPDIR)/mball.Tpo" \
	  -c -o mball.o `test -f 'intern/mball.c' || echo '$(srcdir)/'`intern/mball.c; \
	then mv -f "$(DEPDIR)/mball.Tpo" "$(DEPDIR)/mball.Po"; \
	else rm -f "$(DEPDIR)/mball.Tpo"; exit 1; \
	fi
#	source='intern/mball.c' object='mball.o' libtool=no \
#	depfile='$(DEPDIR)/mball.Po' tmpdepfile='$(DEPDIR)/mball.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mball.o `test -f 'intern/mball.c' || echo '$(srcdir)/'`intern/mball.c

mball.obj: intern/mball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mball.obj -MD -MP -MF "$(DEPDIR)/mball.Tpo" \
	  -c -o mball.obj `if test -f 'intern/mball.c'; then $(CYGPATH_W) 'intern/mball.c'; else $(CYGPATH_W) '$(srcdir)/intern/mball.c'; fi`; \
	then mv -f "$(DEPDIR)/mball.Tpo" "$(DEPDIR)/mball.Po"; \
	else rm -f "$(DEPDIR)/mball.Tpo"; exit 1; \
	fi
#	source='intern/mball.c' object='mball.obj' libtool=no \
#	depfile='$(DEPDIR)/mball.Po' tmpdepfile='$(DEPDIR)/mball.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mball.obj `if test -f 'intern/mball.c'; then $(CYGPATH_W) 'intern/mball.c'; else $(CYGPATH_W) '$(srcdir)/intern/mball.c'; fi`

mball.lo: intern/mball.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mball.lo -MD -MP -MF "$(DEPDIR)/mball.Tpo" \
	  -c -o mball.lo `test -f 'intern/mball.c' || echo '$(srcdir)/'`intern/mball.c; \
	then mv -f "$(DEPDIR)/mball.Tpo" "$(DEPDIR)/mball.Plo"; \
	else rm -f "$(DEPDIR)/mball.Tpo"; exit 1; \
	fi
#	source='intern/mball.c' object='mball.lo' libtool=yes \
#	depfile='$(DEPDIR)/mball.Plo' tmpdepfile='$(DEPDIR)/mball.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mball.lo `test -f 'intern/mball.c' || echo '$(srcdir)/'`intern/mball.c

scene.o: intern/scene.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scene.o -MD -MP -MF "$(DEPDIR)/scene.Tpo" \
	  -c -o scene.o `test -f 'intern/scene.c' || echo '$(srcdir)/'`intern/scene.c; \
	then mv -f "$(DEPDIR)/scene.Tpo" "$(DEPDIR)/scene.Po"; \
	else rm -f "$(DEPDIR)/scene.Tpo"; exit 1; \
	fi
#	source='intern/scene.c' object='scene.o' libtool=no \
#	depfile='$(DEPDIR)/scene.Po' tmpdepfile='$(DEPDIR)/scene.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scene.o `test -f 'intern/scene.c' || echo '$(srcdir)/'`intern/scene.c

scene.obj: intern/scene.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scene.obj -MD -MP -MF "$(DEPDIR)/scene.Tpo" \
	  -c -o scene.obj `if test -f 'intern/scene.c'; then $(CYGPATH_W) 'intern/scene.c'; else $(CYGPATH_W) '$(srcdir)/intern/scene.c'; fi`; \
	then mv -f "$(DEPDIR)/scene.Tpo" "$(DEPDIR)/scene.Po"; \
	else rm -f "$(DEPDIR)/scene.Tpo"; exit 1; \
	fi
#	source='intern/scene.c' object='scene.obj' libtool=no \
#	depfile='$(DEPDIR)/scene.Po' tmpdepfile='$(DEPDIR)/scene.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scene.obj `if test -f 'intern/scene.c'; then $(CYGPATH_W) 'intern/scene.c'; else $(CYGPATH_W) '$(srcdir)/intern/scene.c'; fi`

scene.lo: intern/scene.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scene.lo -MD -MP -MF "$(DEPDIR)/scene.Tpo" \
	  -c -o scene.lo `test -f 'intern/scene.c' || echo '$(srcdir)/'`intern/scene.c; \
	then mv -f "$(DEPDIR)/scene.Tpo" "$(DEPDIR)/scene.Plo"; \
	else rm -f "$(DEPDIR)/scene.Tpo"; exit 1; \
	fi
#	source='intern/scene.c' object='scene.lo' libtool=yes \
#	depfile='$(DEPDIR)/scene.Plo' tmpdepfile='$(DEPDIR)/scene.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scene.lo `test -f 'intern/scene.c' || echo '$(srcdir)/'`intern/scene.c

writeavi.o: intern/writeavi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT writeavi.o -MD -MP -MF "$(DEPDIR)/writeavi.Tpo" \
	  -c -o writeavi.o `test -f 'intern/writeavi.c' || echo '$(srcdir)/'`intern/writeavi.c; \
	then mv -f "$(DEPDIR)/writeavi.Tpo" "$(DEPDIR)/writeavi.Po"; \
	else rm -f "$(DEPDIR)/writeavi.Tpo"; exit 1; \
	fi
#	source='intern/writeavi.c' object='writeavi.o' libtool=no \
#	depfile='$(DEPDIR)/writeavi.Po' tmpdepfile='$(DEPDIR)/writeavi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o writeavi.o `test -f 'intern/writeavi.c' || echo '$(srcdir)/'`intern/writeavi.c

writeavi.obj: intern/writeavi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT writeavi.obj -MD -MP -MF "$(DEPDIR)/writeavi.Tpo" \
	  -c -o writeavi.obj `if test -f 'intern/writeavi.c'; then $(CYGPATH_W) 'intern/writeavi.c'; else $(CYGPATH_W) '$(srcdir)/intern/writeavi.c'; fi`; \
	then mv -f "$(DEPDIR)/writeavi.Tpo" "$(DEPDIR)/writeavi.Po"; \
	else rm -f "$(DEPDIR)/writeavi.Tpo"; exit 1; \
	fi
#	source='intern/writeavi.c' object='writeavi.obj' libtool=no \
#	depfile='$(DEPDIR)/writeavi.Po' tmpdepfile='$(DEPDIR)/writeavi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o writeavi.obj `if test -f 'intern/writeavi.c'; then $(CYGPATH_W) 'intern/writeavi.c'; else $(CYGPATH_W) '$(srcdir)/intern/writeavi.c'; fi`

writeavi.lo: intern/writeavi.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT writeavi.lo -MD -MP -MF "$(DEPDIR)/writeavi.Tpo" \
	  -c -o writeavi.lo `test -f 'intern/writeavi.c' || echo '$(srcdir)/'`intern/writeavi.c; \
	then mv -f "$(DEPDIR)/writeavi.Tpo" "$(DEPDIR)/writeavi.Plo"; \
	else rm -f "$(DEPDIR)/writeavi.Tpo"; exit 1; \
	fi
#	source='intern/writeavi.c' object='writeavi.lo' libtool=yes \
#	depfile='$(DEPDIR)/writeavi.Plo' tmpdepfile='$(DEPDIR)/writeavi.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o writeavi.lo `test -f 'intern/writeavi.c' || echo '$(srcdir)/'`intern/writeavi.c

action.o: intern/action.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT action.o -MD -MP -MF "$(DEPDIR)/action.Tpo" \
	  -c -o action.o `test -f 'intern/action.c' || echo '$(srcdir)/'`intern/action.c; \
	then mv -f "$(DEPDIR)/action.Tpo" "$(DEPDIR)/action.Po"; \
	else rm -f "$(DEPDIR)/action.Tpo"; exit 1; \
	fi
#	source='intern/action.c' object='action.o' libtool=no \
#	depfile='$(DEPDIR)/action.Po' tmpdepfile='$(DEPDIR)/action.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o action.o `test -f 'intern/action.c' || echo '$(srcdir)/'`intern/action.c

action.obj: intern/action.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT action.obj -MD -MP -MF "$(DEPDIR)/action.Tpo" \
	  -c -o action.obj `if test -f 'intern/action.c'; then $(CYGPATH_W) 'intern/action.c'; else $(CYGPATH_W) '$(srcdir)/intern/action.c'; fi`; \
	then mv -f "$(DEPDIR)/action.Tpo" "$(DEPDIR)/action.Po"; \
	else rm -f "$(DEPDIR)/action.Tpo"; exit 1; \
	fi
#	source='intern/action.c' object='action.obj' libtool=no \
#	depfile='$(DEPDIR)/action.Po' tmpdepfile='$(DEPDIR)/action.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o action.obj `if test -f 'intern/action.c'; then $(CYGPATH_W) 'intern/action.c'; else $(CYGPATH_W) '$(srcdir)/intern/action.c'; fi`

action.lo: intern/action.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT action.lo -MD -MP -MF "$(DEPDIR)/action.Tpo" \
	  -c -o action.lo `test -f 'intern/action.c' || echo '$(srcdir)/'`intern/action.c; \
	then mv -f "$(DEPDIR)/action.Tpo" "$(DEPDIR)/action.Plo"; \
	else rm -f "$(DEPDIR)/action.Tpo"; exit 1; \
	fi
#	source='intern/action.c' object='action.lo' libtool=yes \
#	depfile='$(DEPDIR)/action.Plo' tmpdepfile='$(DEPDIR)/action.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o action.lo `test -f 'intern/action.c' || echo '$(srcdir)/'`intern/action.c

deform.o: intern/deform.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deform.o -MD -MP -MF "$(DEPDIR)/deform.Tpo" \
	  -c -o deform.o `test -f 'intern/deform.c' || echo '$(srcdir)/'`intern/deform.c; \
	then mv -f "$(DEPDIR)/deform.Tpo" "$(DEPDIR)/deform.Po"; \
	else rm -f "$(DEPDIR)/deform.Tpo"; exit 1; \
	fi
#	source='intern/deform.c' object='deform.o' libtool=no \
#	depfile='$(DEPDIR)/deform.Po' tmpdepfile='$(DEPDIR)/deform.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deform.o `test -f 'intern/deform.c' || echo '$(srcdir)/'`intern/deform.c

deform.obj: intern/deform.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deform.obj -MD -MP -MF "$(DEPDIR)/deform.Tpo" \
	  -c -o deform.obj `if test -f 'intern/deform.c'; then $(CYGPATH_W) 'intern/deform.c'; else $(CYGPATH_W) '$(srcdir)/intern/deform.c'; fi`; \
	then mv -f "$(DEPDIR)/deform.Tpo" "$(DEPDIR)/deform.Po"; \
	else rm -f "$(DEPDIR)/deform.Tpo"; exit 1; \
	fi
#	source='intern/deform.c' object='deform.obj' libtool=no \
#	depfile='$(DEPDIR)/deform.Po' tmpdepfile='$(DEPDIR)/deform.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deform.obj `if test -f 'intern/deform.c'; then $(CYGPATH_W) 'intern/deform.c'; else $(CYGPATH_W) '$(srcdir)/intern/deform.c'; fi`

deform.lo: intern/deform.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deform.lo -MD -MP -MF "$(DEPDIR)/deform.Tpo" \
	  -c -o deform.lo `test -f 'intern/deform.c' || echo '$(srcdir)/'`intern/deform.c; \
	then mv -f "$(DEPDIR)/deform.Tpo" "$(DEPDIR)/deform.Plo"; \
	else rm -f "$(DEPDIR)/deform.Tpo"; exit 1; \
	fi
#	source='intern/deform.c' object='deform.lo' libtool=yes \
#	depfile='$(DEPDIR)/deform.Plo' tmpdepfile='$(DEPDIR)/deform.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deform.lo `test -f 'intern/deform.c' || echo '$(srcdir)/'`intern/deform.c

image.o: intern/image.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT image.o -MD -MP -MF "$(DEPDIR)/image.Tpo" \
	  -c -o image.o `test -f 'intern/image.c' || echo '$(srcdir)/'`intern/image.c; \
	then mv -f "$(DEPDIR)/image.Tpo" "$(DEPDIR)/image.Po"; \
	else rm -f "$(DEPDIR)/image.Tpo"; exit 1; \
	fi
#	source='intern/image.c' object='image.o' libtool=no \
#	depfile='$(DEPDIR)/image.Po' tmpdepfile='$(DEPDIR)/image.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o image.o `test -f 'intern/image.c' || echo '$(srcdir)/'`intern/image.c

image.obj: intern/image.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT image.obj -MD -MP -MF "$(DEPDIR)/image.Tpo" \
	  -c -o image.obj `if test -f 'intern/image.c'; then $(CYGPATH_W) 'intern/image.c'; else $(CYGPATH_W) '$(srcdir)/intern/image.c'; fi`; \
	then mv -f "$(DEPDIR)/image.Tpo" "$(DEPDIR)/image.Po"; \
	else rm -f "$(DEPDIR)/image.Tpo"; exit 1; \
	fi
#	source='intern/image.c' object='image.obj' libtool=no \
#	depfile='$(DEPDIR)/image.Po' tmpdepfile='$(DEPDIR)/image.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o image.obj `if test -f 'intern/image.c'; then $(CYGPATH_W) 'intern/image.c'; else $(CYGPATH_W) '$(srcdir)/intern/image.c'; fi`

image.lo: intern/image.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT image.lo -MD -MP -MF "$(DEPDIR)/image.Tpo" \
	  -c -o image.lo `test -f 'intern/image.c' || echo '$(srcdir)/'`intern/image.c; \
	then mv -f "$(DEPDIR)/image.Tpo" "$(DEPDIR)/image.Plo"; \
	else rm -f "$(DEPDIR)/image.Tpo"; exit 1; \
	fi
#	source='intern/image.c' object='image.lo' libtool=yes \
#	depfile='$(DEPDIR)/image.Plo' tmpdepfile='$(DEPDIR)/image.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o image.lo `test -f 'intern/image.c' || echo '$(srcdir)/'`intern/image.c

mesh.o: intern/mesh.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mesh.o -MD -MP -MF "$(DEPDIR)/mesh.Tpo" \
	  -c -o mesh.o `test -f 'intern/mesh.c' || echo '$(srcdir)/'`intern/mesh.c; \
	then mv -f "$(DEPDIR)/mesh.Tpo" "$(DEPDIR)/mesh.Po"; \
	else rm -f "$(DEPDIR)/mesh.Tpo"; exit 1; \
	fi
#	source='intern/mesh.c' object='mesh.o' libtool=no \
#	depfile='$(DEPDIR)/mesh.Po' tmpdepfile='$(DEPDIR)/mesh.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mesh.o `test -f 'intern/mesh.c' || echo '$(srcdir)/'`intern/mesh.c

mesh.obj: intern/mesh.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mesh.obj -MD -MP -MF "$(DEPDIR)/mesh.Tpo" \
	  -c -o mesh.obj `if test -f 'intern/mesh.c'; then $(CYGPATH_W) 'intern/mesh.c'; else $(CYGPATH_W) '$(srcdir)/intern/mesh.c'; fi`; \
	then mv -f "$(DEPDIR)/mesh.Tpo" "$(DEPDIR)/mesh.Po"; \
	else rm -f "$(DEPDIR)/mesh.Tpo"; exit 1; \
	fi
#	source='intern/mesh.c' object='mesh.obj' libtool=no \
#	depfile='$(DEPDIR)/mesh.Po' tmpdepfile='$(DEPDIR)/mesh.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mesh.obj `if test -f 'intern/mesh.c'; then $(CYGPATH_W) 'intern/mesh.c'; else $(CYGPATH_W) '$(srcdir)/intern/mesh.c'; fi`

mesh.lo: intern/mesh.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mesh.lo -MD -MP -MF "$(DEPDIR)/mesh.Tpo" \
	  -c -o mesh.lo `test -f 'intern/mesh.c' || echo '$(srcdir)/'`intern/mesh.c; \
	then mv -f "$(DEPDIR)/mesh.Tpo" "$(DEPDIR)/mesh.Plo"; \
	else rm -f "$(DEPDIR)/mesh.Tpo"; exit 1; \
	fi
#	source='intern/mesh.c' object='mesh.lo' libtool=yes \
#	depfile='$(DEPDIR)/mesh.Plo' tmpdepfile='$(DEPDIR)/mesh.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mesh.lo `test -f 'intern/mesh.c' || echo '$(srcdir)/'`intern/mesh.c

screen.o: intern/screen.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT screen.o -MD -MP -MF "$(DEPDIR)/screen.Tpo" \
	  -c -o screen.o `test -f 'intern/screen.c' || echo '$(srcdir)/'`intern/screen.c; \
	then mv -f "$(DEPDIR)/screen.Tpo" "$(DEPDIR)/screen.Po"; \
	else rm -f "$(DEPDIR)/screen.Tpo"; exit 1; \
	fi
#	source='intern/screen.c' object='screen.o' libtool=no \
#	depfile='$(DEPDIR)/screen.Po' tmpdepfile='$(DEPDIR)/screen.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o screen.o `test -f 'intern/screen.c' || echo '$(srcdir)/'`intern/screen.c

screen.obj: intern/screen.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT screen.obj -MD -MP -MF "$(DEPDIR)/screen.Tpo" \
	  -c -o screen.obj `if test -f 'intern/screen.c'; then $(CYGPATH_W) 'intern/screen.c'; else $(CYGPATH_W) '$(srcdir)/intern/screen.c'; fi`; \
	then mv -f "$(DEPDIR)/screen.Tpo" "$(DEPDIR)/screen.Po"; \
	else rm -f "$(DEPDIR)/screen.Tpo"; exit 1; \
	fi
#	source='intern/screen.c' object='screen.obj' libtool=no \
#	depfile='$(DEPDIR)/screen.Po' tmpdepfile='$(DEPDIR)/screen.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o screen.obj `if test -f 'intern/screen.c'; then $(CYGPATH_W) 'intern/screen.c'; else $(CYGPATH_W) '$(srcdir)/intern/screen.c'; fi`

screen.lo: intern/screen.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT screen.lo -MD -MP -MF "$(DEPDIR)/screen.Tpo" \
	  -c -o screen.lo `test -f 'intern/screen.c' || echo '$(srcdir)/'`intern/screen.c; \
	then mv -f "$(DEPDIR)/screen.Tpo" "$(DEPDIR)/screen.Plo"; \
	else rm -f "$(DEPDIR)/screen.Tpo"; exit 1; \
	fi
#	source='intern/screen.c' object='screen.lo' libtool=yes \
#	depfile='$(DEPDIR)/screen.Plo' tmpdepfile='$(DEPDIR)/screen.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o screen.lo `test -f 'intern/screen.c' || echo '$(srcdir)/'`intern/screen.c

anim.o: intern/anim.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT anim.o -MD -MP -MF "$(DEPDIR)/anim.Tpo" \
	  -c -o anim.o `test -f 'intern/anim.c' || echo '$(srcdir)/'`intern/anim.c; \
	then mv -f "$(DEPDIR)/anim.Tpo" "$(DEPDIR)/anim.Po"; \
	else rm -f "$(DEPDIR)/anim.Tpo"; exit 1; \
	fi
#	source='intern/anim.c' object='anim.o' libtool=no \
#	depfile='$(DEPDIR)/anim.Po' tmpdepfile='$(DEPDIR)/anim.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o anim.o `test -f 'intern/anim.c' || echo '$(srcdir)/'`intern/anim.c

anim.obj: intern/anim.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT anim.obj -MD -MP -MF "$(DEPDIR)/anim.Tpo" \
	  -c -o anim.obj `if test -f 'intern/anim.c'; then $(CYGPATH_W) 'intern/anim.c'; else $(CYGPATH_W) '$(srcdir)/intern/anim.c'; fi`; \
	then mv -f "$(DEPDIR)/anim.Tpo" "$(DEPDIR)/anim.Po"; \
	else rm -f "$(DEPDIR)/anim.Tpo"; exit 1; \
	fi
#	source='intern/anim.c' object='anim.obj' libtool=no \
#	depfile='$(DEPDIR)/anim.Po' tmpdepfile='$(DEPDIR)/anim.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o anim.obj `if test -f 'intern/anim.c'; then $(CYGPATH_W) 'intern/anim.c'; else $(CYGPATH_W) '$(srcdir)/intern/anim.c'; fi`

anim.lo: intern/anim.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT anim.lo -MD -MP -MF "$(DEPDIR)/anim.Tpo" \
	  -c -o anim.lo `test -f 'intern/anim.c' || echo '$(srcdir)/'`intern/anim.c; \
	then mv -f "$(DEPDIR)/anim.Tpo" "$(DEPDIR)/anim.Plo"; \
	else rm -f "$(DEPDIR)/anim.Tpo"; exit 1; \
	fi
#	source='intern/anim.c' object='anim.lo' libtool=yes \
#	depfile='$(DEPDIR)/anim.Plo' tmpdepfile='$(DEPDIR)/anim.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o anim.lo `test -f 'intern/anim.c' || echo '$(srcdir)/'`intern/anim.c

displist.o: intern/displist.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT displist.o -MD -MP -MF "$(DEPDIR)/displist.Tpo" \
	  -c -o displist.o `test -f 'intern/displist.c' || echo '$(srcdir)/'`intern/displist.c; \
	then mv -f "$(DEPDIR)/displist.Tpo" "$(DEPDIR)/displist.Po"; \
	else rm -f "$(DEPDIR)/displist.Tpo"; exit 1; \
	fi
#	source='intern/displist.c' object='displist.o' libtool=no \
#	depfile='$(DEPDIR)/displist.Po' tmpdepfile='$(DEPDIR)/displist.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o displist.o `test -f 'intern/displist.c' || echo '$(srcdir)/'`intern/displist.c

displist.obj: intern/displist.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT displist.obj -MD -MP -MF "$(DEPDIR)/displist.Tpo" \
	  -c -o displist.obj `if test -f 'intern/displist.c'; then $(CYGPATH_W) 'intern/displist.c'; else $(CYGPATH_W) '$(srcdir)/intern/displist.c'; fi`; \
	then mv -f "$(DEPDIR)/displist.Tpo" "$(DEPDIR)/displist.Po"; \
	else rm -f "$(DEPDIR)/displist.Tpo"; exit 1; \
	fi
#	source='intern/displist.c' object='displist.obj' libtool=no \
#	depfile='$(DEPDIR)/displist.Po' tmpdepfile='$(DEPDIR)/displist.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o displist.obj `if test -f 'intern/displist.c'; then $(CYGPATH_W) 'intern/displist.c'; else $(CYGPATH_W) '$(srcdir)/intern/displist.c'; fi`

displist.lo: intern/displist.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT displist.lo -MD -MP -MF "$(DEPDIR)/displist.Tpo" \
	  -c -o displist.lo `test -f 'intern/displist.c' || echo '$(srcdir)/'`intern/displist.c; \
	then mv -f "$(DEPDIR)/displist.Tpo" "$(DEPDIR)/displist.Plo"; \
	else rm -f "$(DEPDIR)/displist.Tpo"; exit 1; \
	fi
#	source='intern/displist.c' object='displist.lo' libtool=yes \
#	depfile='$(DEPDIR)/displist.Plo' tmpdepfile='$(DEPDIR)/displist.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o displist.lo `test -f 'intern/displist.c' || echo '$(srcdir)/'`intern/displist.c

ipo.o: intern/ipo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ipo.o -MD -MP -MF "$(DEPDIR)/ipo.Tpo" \
	  -c -o ipo.o `test -f 'intern/ipo.c' || echo '$(srcdir)/'`intern/ipo.c; \
	then mv -f "$(DEPDIR)/ipo.Tpo" "$(DEPDIR)/ipo.Po"; \
	else rm -f "$(DEPDIR)/ipo.Tpo"; exit 1; \
	fi
#	source='intern/ipo.c' object='ipo.o' libtool=no \
#	depfile='$(DEPDIR)/ipo.Po' tmpdepfile='$(DEPDIR)/ipo.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ipo.o `test -f 'intern/ipo.c' || echo '$(srcdir)/'`intern/ipo.c

ipo.obj: intern/ipo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ipo.obj -MD -MP -MF "$(DEPDIR)/ipo.Tpo" \
	  -c -o ipo.obj `if test -f 'intern/ipo.c'; then $(CYGPATH_W) 'intern/ipo.c'; else $(CYGPATH_W) '$(srcdir)/intern/ipo.c'; fi`; \
	then mv -f "$(DEPDIR)/ipo.Tpo" "$(DEPDIR)/ipo.Po"; \
	else rm -f "$(DEPDIR)/ipo.Tpo"; exit 1; \
	fi
#	source='intern/ipo.c' object='ipo.obj' libtool=no \
#	depfile='$(DEPDIR)/ipo.Po' tmpdepfile='$(DEPDIR)/ipo.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ipo.obj `if test -f 'intern/ipo.c'; then $(CYGPATH_W) 'intern/ipo.c'; else $(CYGPATH_W) '$(srcdir)/intern/ipo.c'; fi`

ipo.lo: intern/ipo.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ipo.lo -MD -MP -MF "$(DEPDIR)/ipo.Tpo" \
	  -c -o ipo.lo `test -f 'intern/ipo.c' || echo '$(srcdir)/'`intern/ipo.c; \
	then mv -f "$(DEPDIR)/ipo.Tpo" "$(DEPDIR)/ipo.Plo"; \
	else rm -f "$(DEPDIR)/ipo.Tpo"; exit 1; \
	fi
#	source='intern/ipo.c' object='ipo.lo' libtool=yes \
#	depfile='$(DEPDIR)/ipo.Plo' tmpdepfile='$(DEPDIR)/ipo.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ipo.lo `test -f 'intern/ipo.c' || echo '$(srcdir)/'`intern/ipo.c

nla.o: intern/nla.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nla.o -MD -MP -MF "$(DEPDIR)/nla.Tpo" \
	  -c -o nla.o `test -f 'intern/nla.c' || echo '$(srcdir)/'`intern/nla.c; \
	then mv -f "$(DEPDIR)/nla.Tpo" "$(DEPDIR)/nla.Po"; \
	else rm -f "$(DEPDIR)/nla.Tpo"; exit 1; \
	fi
#	source='intern/nla.c' object='nla.o' libtool=no \
#	depfile='$(DEPDIR)/nla.Po' tmpdepfile='$(DEPDIR)/nla.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nla.o `test -f 'intern/nla.c' || echo '$(srcdir)/'`intern/nla.c

nla.obj: intern/nla.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nla.obj -MD -MP -MF "$(DEPDIR)/nla.Tpo" \
	  -c -o nla.obj `if test -f 'intern/nla.c'; then $(CYGPATH_W) 'intern/nla.c'; else $(CYGPATH_W) '$(srcdir)/intern/nla.c'; fi`; \
	then mv -f "$(DEPDIR)/nla.Tpo" "$(DEPDIR)/nla.Po"; \
	else rm -f "$(DEPDIR)/nla.Tpo"; exit 1; \
	fi
#	source='intern/nla.c' object='nla.obj' libtool=no \
#	depfile='$(DEPDIR)/nla.Po' tmpdepfile='$(DEPDIR)/nla.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nla.obj `if test -f 'intern/nla.c'; then $(CYGPATH_W) 'intern/nla.c'; else $(CYGPATH_W) '$(srcdir)/intern/nla.c'; fi`

nla.lo: intern/nla.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nla.lo -MD -MP -MF "$(DEPDIR)/nla.Tpo" \
	  -c -o nla.lo `test -f 'intern/nla.c' || echo '$(srcdir)/'`intern/nla.c; \
	then mv -f "$(DEPDIR)/nla.Tpo" "$(DEPDIR)/nla.Plo"; \
	else rm -f "$(DEPDIR)/nla.Tpo"; exit 1; \
	fi
#	source='intern/nla.c' object='nla.lo' libtool=yes \
#	depfile='$(DEPDIR)/nla.Plo' tmpdepfile='$(DEPDIR)/nla.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nla.lo `test -f 'intern/nla.c' || echo '$(srcdir)/'`intern/nla.c

sound.o: intern/sound.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sound.o -MD -MP -MF "$(DEPDIR)/sound.Tpo" \
	  -c -o sound.o `test -f 'intern/sound.c' || echo '$(srcdir)/'`intern/sound.c; \
	then mv -f "$(DEPDIR)/sound.Tpo" "$(DEPDIR)/sound.Po"; \
	else rm -f "$(DEPDIR)/sound.Tpo"; exit 1; \
	fi
#	source='intern/sound.c' object='sound.o' libtool=no \
#	depfile='$(DEPDIR)/sound.Po' tmpdepfile='$(DEPDIR)/sound.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sound.o `test -f 'intern/sound.c' || echo '$(srcdir)/'`intern/sound.c

sound.obj: intern/sound.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sound.obj -MD -MP -MF "$(DEPDIR)/sound.Tpo" \
	  -c -o sound.obj `if test -f 'intern/sound.c'; then $(CYGPATH_W) 'intern/sound.c'; else $(CYGPATH_W) '$(srcdir)/intern/sound.c'; fi`; \
	then mv -f "$(DEPDIR)/sound.Tpo" "$(DEPDIR)/sound.Po"; \
	else rm -f "$(DEPDIR)/sound.Tpo"; exit 1; \
	fi
#	source='intern/sound.c' object='sound.obj' libtool=no \
#	depfile='$(DEPDIR)/sound.Po' tmpdepfile='$(DEPDIR)/sound.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sound.obj `if test -f 'intern/sound.c'; then $(CYGPATH_W) 'intern/sound.c'; else $(CYGPATH_W) '$(srcdir)/intern/sound.c'; fi`

sound.lo: intern/sound.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sound.lo -MD -MP -MF "$(DEPDIR)/sound.Tpo" \
	  -c -o sound.lo `test -f 'intern/sound.c' || echo '$(srcdir)/'`intern/sound.c; \
	then mv -f "$(DEPDIR)/sound.Tpo" "$(DEPDIR)/sound.Plo"; \
	else rm -f "$(DEPDIR)/sound.Tpo"; exit 1; \
	fi
#	source='intern/sound.c' object='sound.lo' libtool=yes \
#	depfile='$(DEPDIR)/sound.Plo' tmpdepfile='$(DEPDIR)/sound.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sound.lo `test -f 'intern/sound.c' || echo '$(srcdir)/'`intern/sound.c

armature.o: intern/armature.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT armature.o -MD -MP -MF "$(DEPDIR)/armature.Tpo" \
	  -c -o armature.o `test -f 'intern/armature.c' || echo '$(srcdir)/'`intern/armature.c; \
	then mv -f "$(DEPDIR)/armature.Tpo" "$(DEPDIR)/armature.Po"; \
	else rm -f "$(DEPDIR)/armature.Tpo"; exit 1; \
	fi
#	source='intern/armature.c' object='armature.o' libtool=no \
#	depfile='$(DEPDIR)/armature.Po' tmpdepfile='$(DEPDIR)/armature.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o armature.o `test -f 'intern/armature.c' || echo '$(srcdir)/'`intern/armature.c

armature.obj: intern/armature.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT armature.obj -MD -MP -MF "$(DEPDIR)/armature.Tpo" \
	  -c -o armature.obj `if test -f 'intern/armature.c'; then $(CYGPATH_W) 'intern/armature.c'; else $(CYGPATH_W) '$(srcdir)/intern/armature.c'; fi`; \
	then mv -f "$(DEPDIR)/armature.Tpo" "$(DEPDIR)/armature.Po"; \
	else rm -f "$(DEPDIR)/armature.Tpo"; exit 1; \
	fi
#	source='intern/armature.c' object='armature.obj' libtool=no \
#	depfile='$(DEPDIR)/armature.Po' tmpdepfile='$(DEPDIR)/armature.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o armature.obj `if test -f 'intern/armature.c'; then $(CYGPATH_W) 'intern/armature.c'; else $(CYGPATH_W) '$(srcdir)/intern/armature.c'; fi`

armature.lo: intern/armature.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT armature.lo -MD -MP -MF "$(DEPDIR)/armature.Tpo" \
	  -c -o armature.lo `test -f 'intern/armature.c' || echo '$(srcdir)/'`intern/armature.c; \
	then mv -f "$(DEPDIR)/armature.Tpo" "$(DEPDIR)/armature.Plo"; \
	else rm -f "$(DEPDIR)/armature.Tpo"; exit 1; \
	fi
#	source='intern/armature.c' object='armature.lo' libtool=yes \
#	depfile='$(DEPDIR)/armature.Plo' tmpdepfile='$(DEPDIR)/armature.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o armature.lo `test -f 'intern/armature.c' || echo '$(srcdir)/'`intern/armature.c

effect.o: intern/effect.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT effect.o -MD -MP -MF "$(DEPDIR)/effect.Tpo" \
	  -c -o effect.o `test -f 'intern/effect.c' || echo '$(srcdir)/'`intern/effect.c; \
	then mv -f "$(DEPDIR)/effect.Tpo" "$(DEPDIR)/effect.Po"; \
	else rm -f "$(DEPDIR)/effect.Tpo"; exit 1; \
	fi
#	source='intern/effect.c' object='effect.o' libtool=no \
#	depfile='$(DEPDIR)/effect.Po' tmpdepfile='$(DEPDIR)/effect.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o effect.o `test -f 'intern/effect.c' || echo '$(srcdir)/'`intern/effect.c

effect.obj: intern/effect.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT effect.obj -MD -MP -MF "$(DEPDIR)/effect.Tpo" \
	  -c -o effect.obj `if test -f 'intern/effect.c'; then $(CYGPATH_W) 'intern/effect.c'; else $(CYGPATH_W) '$(srcdir)/intern/effect.c'; fi`; \
	then mv -f "$(DEPDIR)/effect.Tpo" "$(DEPDIR)/effect.Po"; \
	else rm -f "$(DEPDIR)/effect.Tpo"; exit 1; \
	fi
#	source='intern/effect.c' object='effect.obj' libtool=no \
#	depfile='$(DEPDIR)/effect.Po' tmpdepfile='$(DEPDIR)/effect.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o effect.obj `if test -f 'intern/effect.c'; then $(CYGPATH_W) 'intern/effect.c'; else $(CYGPATH_W) '$(srcdir)/intern/effect.c'; fi`

effect.lo: intern/effect.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT effect.lo -MD -MP -MF "$(DEPDIR)/effect.Tpo" \
	  -c -o effect.lo `test -f 'intern/effect.c' || echo '$(srcdir)/'`intern/effect.c; \
	then mv -f "$(DEPDIR)/effect.Tpo" "$(DEPDIR)/effect.Plo"; \
	else rm -f "$(DEPDIR)/effect.Tpo"; exit 1; \
	fi
#	source='intern/effect.c' object='effect.lo' libtool=yes \
#	depfile='$(DEPDIR)/effect.Plo' tmpdepfile='$(DEPDIR)/effect.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o effect.lo `test -f 'intern/effect.c' || echo '$(srcdir)/'`intern/effect.c

key.o: intern/key.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT key.o -MD -MP -MF "$(DEPDIR)/key.Tpo" \
	  -c -o key.o `test -f 'intern/key.c' || echo '$(srcdir)/'`intern/key.c; \
	then mv -f "$(DEPDIR)/key.Tpo" "$(DEPDIR)/key.Po"; \
	else rm -f "$(DEPDIR)/key.Tpo"; exit 1; \
	fi
#	source='intern/key.c' object='key.o' libtool=no \
#	depfile='$(DEPDIR)/key.Po' tmpdepfile='$(DEPDIR)/key.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o key.o `test -f 'intern/key.c' || echo '$(srcdir)/'`intern/key.c

key.obj: intern/key.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT key.obj -MD -MP -MF "$(DEPDIR)/key.Tpo" \
	  -c -o key.obj `if test -f 'intern/key.c'; then $(CYGPATH_W) 'intern/key.c'; else $(CYGPATH_W) '$(srcdir)/intern/key.c'; fi`; \
	then mv -f "$(DEPDIR)/key.Tpo" "$(DEPDIR)/key.Po"; \
	else rm -f "$(DEPDIR)/key.Tpo"; exit 1; \
	fi
#	source='intern/key.c' object='key.obj' libtool=no \
#	depfile='$(DEPDIR)/key.Po' tmpdepfile='$(DEPDIR)/key.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o key.obj `if test -f 'intern/key.c'; then $(CYGPATH_W) 'intern/key.c'; else $(CYGPATH_W) '$(srcdir)/intern/key.c'; fi`

key.lo: intern/key.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT key.lo -MD -MP -MF "$(DEPDIR)/key.Tpo" \
	  -c -o key.lo `test -f 'intern/key.c' || echo '$(srcdir)/'`intern/key.c; \
	then mv -f "$(DEPDIR)/key.Tpo" "$(DEPDIR)/key.Plo"; \
	else rm -f "$(DEPDIR)/key.Tpo"; exit 1; \
	fi
#	source='intern/key.c' object='key.lo' libtool=yes \
#	depfile='$(DEPDIR)/key.Plo' tmpdepfile='$(DEPDIR)/key.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o key.lo `test -f 'intern/key.c' || echo '$(srcdir)/'`intern/key.c

object.o: intern/object.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT object.o -MD -MP -MF "$(DEPDIR)/object.Tpo" \
	  -c -o object.o `test -f 'intern/object.c' || echo '$(srcdir)/'`intern/object.c; \
	then mv -f "$(DEPDIR)/object.Tpo" "$(DEPDIR)/object.Po"; \
	else rm -f "$(DEPDIR)/object.Tpo"; exit 1; \
	fi
#	source='intern/object.c' object='object.o' libtool=no \
#	depfile='$(DEPDIR)/object.Po' tmpdepfile='$(DEPDIR)/object.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o object.o `test -f 'intern/object.c' || echo '$(srcdir)/'`intern/object.c

object.obj: intern/object.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT object.obj -MD -MP -MF "$(DEPDIR)/object.Tpo" \
	  -c -o object.obj `if test -f 'intern/object.c'; then $(CYGPATH_W) 'intern/object.c'; else $(CYGPATH_W) '$(srcdir)/intern/object.c'; fi`; \
	then mv -f "$(DEPDIR)/object.Tpo" "$(DEPDIR)/object.Po"; \
	else rm -f "$(DEPDIR)/object.Tpo"; exit 1; \
	fi
#	source='intern/object.c' object='object.obj' libtool=no \
#	depfile='$(DEPDIR)/object.Po' tmpdepfile='$(DEPDIR)/object.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o object.obj `if test -f 'intern/object.c'; then $(CYGPATH_W) 'intern/object.c'; else $(CYGPATH_W) '$(srcdir)/intern/object.c'; fi`

object.lo: intern/object.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT object.lo -MD -MP -MF "$(DEPDIR)/object.Tpo" \
	  -c -o object.lo `test -f 'intern/object.c' || echo '$(srcdir)/'`intern/object.c; \
	then mv -f "$(DEPDIR)/object.Tpo" "$(DEPDIR)/object.Plo"; \
	else rm -f "$(DEPDIR)/object.Tpo"; exit 1; \
	fi
#	source='intern/object.c' object='object.lo' libtool=yes \
#	depfile='$(DEPDIR)/object.Plo' tmpdepfile='$(DEPDIR)/object.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o object.lo `test -f 'intern/object.c' || echo '$(srcdir)/'`intern/object.c

subsurf.o: intern/subsurf.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subsurf.o -MD -MP -MF "$(DEPDIR)/subsurf.Tpo" \
	  -c -o subsurf.o `test -f 'intern/subsurf.c' || echo '$(srcdir)/'`intern/subsurf.c; \
	then mv -f "$(DEPDIR)/subsurf.Tpo" "$(DEPDIR)/subsurf.Po"; \
	else rm -f "$(DEPDIR)/subsurf.Tpo"; exit 1; \
	fi
#	source='intern/subsurf.c' object='subsurf.o' libtool=no \
#	depfile='$(DEPDIR)/subsurf.Po' tmpdepfile='$(DEPDIR)/subsurf.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subsurf.o `test -f 'intern/subsurf.c' || echo '$(srcdir)/'`intern/subsurf.c

subsurf.obj: intern/subsurf.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subsurf.obj -MD -MP -MF "$(DEPDIR)/subsurf.Tpo" \
	  -c -o subsurf.obj `if test -f 'intern/subsurf.c'; then $(CYGPATH_W) 'intern/subsurf.c'; else $(CYGPATH_W) '$(srcdir)/intern/subsurf.c'; fi`; \
	then mv -f "$(DEPDIR)/subsurf.Tpo" "$(DEPDIR)/subsurf.Po"; \
	else rm -f "$(DEPDIR)/subsurf.Tpo"; exit 1; \
	fi
#	source='intern/subsurf.c' object='subsurf.obj' libtool=no \
#	depfile='$(DEPDIR)/subsurf.Po' tmpdepfile='$(DEPDIR)/subsurf.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subsurf.obj `if test -f 'intern/subsurf.c'; then $(CYGPATH_W) 'intern/subsurf.c'; else $(CYGPATH_W) '$(srcdir)/intern/subsurf.c'; fi`

subsurf.lo: intern/subsurf.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subsurf.lo -MD -MP -MF "$(DEPDIR)/subsurf.Tpo" \
	  -c -o subsurf.lo `test -f 'intern/subsurf.c' || echo '$(srcdir)/'`intern/subsurf.c; \
	then mv -f "$(DEPDIR)/subsurf.Tpo" "$(DEPDIR)/subsurf.Plo"; \
	else rm -f "$(DEPDIR)/subsurf.Tpo"; exit 1; \
	fi
#	source='intern/subsurf.c' object='subsurf.lo' libtool=yes \
#	depfile='$(DEPDIR)/subsurf.Plo' tmpdepfile='$(DEPDIR)/subsurf.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subsurf.lo `test -f 'intern/subsurf.c' || echo '$(srcdir)/'`intern/subsurf.c

blender.o: intern/blender.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT blender.o -MD -MP -MF "$(DEPDIR)/blender.Tpo" \
	  -c -o blender.o `test -f 'intern/blender.c' || echo '$(srcdir)/'`intern/blender.c; \
	then mv -f "$(DEPDIR)/blender.Tpo" "$(DEPDIR)/blender.Po"; \
	else rm -f "$(DEPDIR)/blender.Tpo"; exit 1; \
	fi
#	source='intern/blender.c' object='blender.o' libtool=no \
#	depfile='$(DEPDIR)/blender.Po' tmpdepfile='$(DEPDIR)/blender.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o blender.o `test -f 'intern/blender.c' || echo '$(srcdir)/'`intern/blender.c

blender.obj: intern/blender.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT blender.obj -MD -MP -MF "$(DEPDIR)/blender.Tpo" \
	  -c -o blender.obj `if test -f 'intern/blender.c'; then $(CYGPATH_W) 'intern/blender.c'; else $(CYGPATH_W) '$(srcdir)/intern/blender.c'; fi`; \
	then mv -f "$(DEPDIR)/blender.Tpo" "$(DEPDIR)/blender.Po"; \
	else rm -f "$(DEPDIR)/blender.Tpo"; exit 1; \
	fi
#	source='intern/blender.c' object='blender.obj' libtool=no \
#	depfile='$(DEPDIR)/blender.Po' tmpdepfile='$(DEPDIR)/blender.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o blender.obj `if test -f 'intern/blender.c'; then $(CYGPATH_W) 'intern/blender.c'; else $(CYGPATH_W) '$(srcdir)/intern/blender.c'; fi`

blender.lo: intern/blender.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT blender.lo -MD -MP -MF "$(DEPDIR)/blender.Tpo" \
	  -c -o blender.lo `test -f 'intern/blender.c' || echo '$(srcdir)/'`intern/blender.c; \
	then mv -f "$(DEPDIR)/blender.Tpo" "$(DEPDIR)/blender.Plo"; \
	else rm -f "$(DEPDIR)/blender.Tpo"; exit 1; \
	fi
#	source='intern/blender.c' object='blender.lo' libtool=yes \
#	depfile='$(DEPDIR)/blender.Plo' tmpdepfile='$(DEPDIR)/blender.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o blender.lo `test -f 'intern/blender.c' || echo '$(srcdir)/'`intern/blender.c

exotic.o: intern/exotic.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exotic.o -MD -MP -MF "$(DEPDIR)/exotic.Tpo" \
	  -c -o exotic.o `test -f 'intern/exotic.c' || echo '$(srcdir)/'`intern/exotic.c; \
	then mv -f "$(DEPDIR)/exotic.Tpo" "$(DEPDIR)/exotic.Po"; \
	else rm -f "$(DEPDIR)/exotic.Tpo"; exit 1; \
	fi
#	source='intern/exotic.c' object='exotic.o' libtool=no \
#	depfile='$(DEPDIR)/exotic.Po' tmpdepfile='$(DEPDIR)/exotic.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exotic.o `test -f 'intern/exotic.c' || echo '$(srcdir)/'`intern/exotic.c

exotic.obj: intern/exotic.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exotic.obj -MD -MP -MF "$(DEPDIR)/exotic.Tpo" \
	  -c -o exotic.obj `if test -f 'intern/exotic.c'; then $(CYGPATH_W) 'intern/exotic.c'; else $(CYGPATH_W) '$(srcdir)/intern/exotic.c'; fi`; \
	then mv -f "$(DEPDIR)/exotic.Tpo" "$(DEPDIR)/exotic.Po"; \
	else rm -f "$(DEPDIR)/exotic.Tpo"; exit 1; \
	fi
#	source='intern/exotic.c' object='exotic.obj' libtool=no \
#	depfile='$(DEPDIR)/exotic.Po' tmpdepfile='$(DEPDIR)/exotic.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exotic.obj `if test -f 'intern/exotic.c'; then $(CYGPATH_W) 'intern/exotic.c'; else $(CYGPATH_W) '$(srcdir)/intern/exotic.c'; fi`

exotic.lo: intern/exotic.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exotic.lo -MD -MP -MF "$(DEPDIR)/exotic.Tpo" \
	  -c -o exotic.lo `test -f 'intern/exotic.c' || echo '$(srcdir)/'`intern/exotic.c; \
	then mv -f "$(DEPDIR)/exotic.Tpo" "$(DEPDIR)/exotic.Plo"; \
	else rm -f "$(DEPDIR)/exotic.Tpo"; exit 1; \
	fi
#	source='intern/exotic.c' object='exotic.lo' libtool=yes \
#	depfile='$(DEPDIR)/exotic.Plo' tmpdepfile='$(DEPDIR)/exotic.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exotic.lo `test -f 'intern/exotic.c' || echo '$(srcdir)/'`intern/exotic.c

lattice.o: intern/lattice.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lattice.o -MD -MP -MF "$(DEPDIR)/lattice.Tpo" \
	  -c -o lattice.o `test -f 'intern/lattice.c' || echo '$(srcdir)/'`intern/lattice.c; \
	then mv -f "$(DEPDIR)/lattice.Tpo" "$(DEPDIR)/lattice.Po"; \
	else rm -f "$(DEPDIR)/lattice.Tpo"; exit 1; \
	fi
#	source='intern/lattice.c' object='lattice.o' libtool=no \
#	depfile='$(DEPDIR)/lattice.Po' tmpdepfile='$(DEPDIR)/lattice.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lattice.o `test -f 'intern/lattice.c' || echo '$(srcdir)/'`intern/lattice.c

lattice.obj: intern/lattice.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lattice.obj -MD -MP -MF "$(DEPDIR)/lattice.Tpo" \
	  -c -o lattice.obj `if test -f 'intern/lattice.c'; then $(CYGPATH_W) 'intern/lattice.c'; else $(CYGPATH_W) '$(srcdir)/intern/lattice.c'; fi`; \
	then mv -f "$(DEPDIR)/lattice.Tpo" "$(DEPDIR)/lattice.Po"; \
	else rm -f "$(DEPDIR)/lattice.Tpo"; exit 1; \
	fi
#	source='intern/lattice.c' object='lattice.obj' libtool=no \
#	depfile='$(DEPDIR)/lattice.Po' tmpdepfile='$(DEPDIR)/lattice.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lattice.obj `if test -f 'intern/lattice.c'; then $(CYGPATH_W) 'intern/lattice.c'; else $(CYGPATH_W) '$(srcdir)/intern/lattice.c'; fi`

lattice.lo: intern/lattice.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lattice.lo -MD -MP -MF "$(DEPDIR)/lattice.Tpo" \
	  -c -o lattice.lo `test -f 'intern/lattice.c' || echo '$(srcdir)/'`intern/lattice.c; \
	then mv -f "$(DEPDIR)/lattice.Tpo" "$(DEPDIR)/lattice.Plo"; \
	else rm -f "$(DEPDIR)/lattice.Tpo"; exit 1; \
	fi
#	source='intern/lattice.c' object='lattice.lo' libtool=yes \
#	depfile='$(DEPDIR)/lattice.Plo' tmpdepfile='$(DEPDIR)/lattice.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lattice.lo `test -f 'intern/lattice.c' || echo '$(srcdir)/'`intern/lattice.c

packedFile.o: intern/packedFile.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT packedFile.o -MD -MP -MF "$(DEPDIR)/packedFile.Tpo" \
	  -c -o packedFile.o `test -f 'intern/packedFile.c' || echo '$(srcdir)/'`intern/packedFile.c; \
	then mv -f "$(DEPDIR)/packedFile.Tpo" "$(DEPDIR)/packedFile.Po"; \
	else rm -f "$(DEPDIR)/packedFile.Tpo"; exit 1; \
	fi
#	source='intern/packedFile.c' object='packedFile.o' libtool=no \
#	depfile='$(DEPDIR)/packedFile.Po' tmpdepfile='$(DEPDIR)/packedFile.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o packedFile.o `test -f 'intern/packedFile.c' || echo '$(srcdir)/'`intern/packedFile.c

packedFile.obj: intern/packedFile.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT packedFile.obj -MD -MP -MF "$(DEPDIR)/packedFile.Tpo" \
	  -c -o packedFile.obj `if test -f 'intern/packedFile.c'; then $(CYGPATH_W) 'intern/packedFile.c'; else $(CYGPATH_W) '$(srcdir)/intern/packedFile.c'; fi`; \
	then mv -f "$(DEPDIR)/packedFile.Tpo" "$(DEPDIR)/packedFile.Po"; \
	else rm -f "$(DEPDIR)/packedFile.Tpo"; exit 1; \
	fi
#	source='intern/packedFile.c' object='packedFile.obj' libtool=no \
#	depfile='$(DEPDIR)/packedFile.Po' tmpdepfile='$(DEPDIR)/packedFile.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o packedFile.obj `if test -f 'intern/packedFile.c'; then $(CYGPATH_W) 'intern/packedFile.c'; else $(CYGPATH_W) '$(srcdir)/intern/packedFile.c'; fi`

packedFile.lo: intern/packedFile.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT packedFile.lo -MD -MP -MF "$(DEPDIR)/packedFile.Tpo" \
	  -c -o packedFile.lo `test -f 'intern/packedFile.c' || echo '$(srcdir)/'`intern/packedFile.c; \
	then mv -f "$(DEPDIR)/packedFile.Tpo" "$(DEPDIR)/packedFile.Plo"; \
	else rm -f "$(DEPDIR)/packedFile.Tpo"; exit 1; \
	fi
#	source='intern/packedFile.c' object='packedFile.lo' libtool=yes \
#	depfile='$(DEPDIR)/packedFile.Plo' tmpdepfile='$(DEPDIR)/packedFile.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o packedFile.lo `test -f 'intern/packedFile.c' || echo '$(srcdir)/'`intern/packedFile.c

text.o: intern/text.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT text.o -MD -MP -MF "$(DEPDIR)/text.Tpo" \
	  -c -o text.o `test -f 'intern/text.c' || echo '$(srcdir)/'`intern/text.c; \
	then mv -f "$(DEPDIR)/text.Tpo" "$(DEPDIR)/text.Po"; \
	else rm -f "$(DEPDIR)/text.Tpo"; exit 1; \
	fi
#	source='intern/text.c' object='text.o' libtool=no \
#	depfile='$(DEPDIR)/text.Po' tmpdepfile='$(DEPDIR)/text.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o text.o `test -f 'intern/text.c' || echo '$(srcdir)/'`intern/text.c

text.obj: intern/text.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT text.obj -MD -MP -MF "$(DEPDIR)/text.Tpo" \
	  -c -o text.obj `if test -f 'intern/text.c'; then $(CYGPATH_W) 'intern/text.c'; else $(CYGPATH_W) '$(srcdir)/intern/text.c'; fi`; \
	then mv -f "$(DEPDIR)/text.Tpo" "$(DEPDIR)/text.Po"; \
	else rm -f "$(DEPDIR)/text.Tpo"; exit 1; \
	fi
#	source='intern/text.c' object='text.obj' libtool=no \
#	depfile='$(DEPDIR)/text.Po' tmpdepfile='$(DEPDIR)/text.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o text.obj `if test -f 'intern/text.c'; then $(CYGPATH_W) 'intern/text.c'; else $(CYGPATH_W) '$(srcdir)/intern/text.c'; fi`

text.lo: intern/text.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT text.lo -MD -MP -MF "$(DEPDIR)/text.Tpo" \
	  -c -o text.lo `test -f 'intern/text.c' || echo '$(srcdir)/'`intern/text.c; \
	then mv -f "$(DEPDIR)/text.Tpo" "$(DEPDIR)/text.Plo"; \
	else rm -f "$(DEPDIR)/text.Tpo"; exit 1; \
	fi
#	source='intern/text.c' object='text.lo' libtool=yes \
#	depfile='$(DEPDIR)/text.Plo' tmpdepfile='$(DEPDIR)/text.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o text.lo `test -f 'intern/text.c' || echo '$(srcdir)/'`intern/text.c

script.o: intern/script.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT script.o -MD -MP -MF "$(DEPDIR)/script.Tpo" \
	  -c -o script.o `test -f 'intern/script.c' || echo '$(srcdir)/'`intern/script.c; \
	then mv -f "$(DEPDIR)/script.Tpo" "$(DEPDIR)/script.Po"; \
	else rm -f "$(DEPDIR)/script.Tpo"; exit 1; \
	fi
#	source='intern/script.c' object='script.o' libtool=no \
#	depfile='$(DEPDIR)/script.Po' tmpdepfile='$(DEPDIR)/script.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o script.o `test -f 'intern/script.c' || echo '$(srcdir)/'`intern/script.c

script.obj: intern/script.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT script.obj -MD -MP -MF "$(DEPDIR)/script.Tpo" \
	  -c -o script.obj `if test -f 'intern/script.c'; then $(CYGPATH_W) 'intern/script.c'; else $(CYGPATH_W) '$(srcdir)/intern/script.c'; fi`; \
	then mv -f "$(DEPDIR)/script.Tpo" "$(DEPDIR)/script.Po"; \
	else rm -f "$(DEPDIR)/script.Tpo"; exit 1; \
	fi
#	source='intern/script.c' object='script.obj' libtool=no \
#	depfile='$(DEPDIR)/script.Po' tmpdepfile='$(DEPDIR)/script.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o script.obj `if test -f 'intern/script.c'; then $(CYGPATH_W) 'intern/script.c'; else $(CYGPATH_W) '$(srcdir)/intern/script.c'; fi`

script.lo: intern/script.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT script.lo -MD -MP -MF "$(DEPDIR)/script.Tpo" \
	  -c -o script.lo `test -f 'intern/script.c' || echo '$(srcdir)/'`intern/script.c; \
	then mv -f "$(DEPDIR)/script.Tpo" "$(DEPDIR)/script.Plo"; \
	else rm -f "$(DEPDIR)/script.Tpo"; exit 1; \
	fi
#	source='intern/script.c' object='script.lo' libtool=yes \
#	depfile='$(DEPDIR)/script.Plo' tmpdepfile='$(DEPDIR)/script.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o script.lo `test -f 'intern/script.c' || echo '$(srcdir)/'`intern/script.c

bmfont.o: intern/bmfont.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bmfont.o -MD -MP -MF "$(DEPDIR)/bmfont.Tpo" \
	  -c -o bmfont.o `test -f 'intern/bmfont.c' || echo '$(srcdir)/'`intern/bmfont.c; \
	then mv -f "$(DEPDIR)/bmfont.Tpo" "$(DEPDIR)/bmfont.Po"; \
	else rm -f "$(DEPDIR)/bmfont.Tpo"; exit 1; \
	fi
#	source='intern/bmfont.c' object='bmfont.o' libtool=no \
#	depfile='$(DEPDIR)/bmfont.Po' tmpdepfile='$(DEPDIR)/bmfont.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bmfont.o `test -f 'intern/bmfont.c' || echo '$(srcdir)/'`intern/bmfont.c

bmfont.obj: intern/bmfont.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bmfont.obj -MD -MP -MF "$(DEPDIR)/bmfont.Tpo" \
	  -c -o bmfont.obj `if test -f 'intern/bmfont.c'; then $(CYGPATH_W) 'intern/bmfont.c'; else $(CYGPATH_W) '$(srcdir)/intern/bmfont.c'; fi`; \
	then mv -f "$(DEPDIR)/bmfont.Tpo" "$(DEPDIR)/bmfont.Po"; \
	else rm -f "$(DEPDIR)/bmfont.Tpo"; exit 1; \
	fi
#	source='intern/bmfont.c' object='bmfont.obj' libtool=no \
#	depfile='$(DEPDIR)/bmfont.Po' tmpdepfile='$(DEPDIR)/bmfont.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bmfont.obj `if test -f 'intern/bmfont.c'; then $(CYGPATH_W) 'intern/bmfont.c'; else $(CYGPATH_W) '$(srcdir)/intern/bmfont.c'; fi`

bmfont.lo: intern/bmfont.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bmfont.lo -MD -MP -MF "$(DEPDIR)/bmfont.Tpo" \
	  -c -o bmfont.lo `test -f 'intern/bmfont.c' || echo '$(srcdir)/'`intern/bmfont.c; \
	then mv -f "$(DEPDIR)/bmfont.Tpo" "$(DEPDIR)/bmfont.Plo"; \
	else rm -f "$(DEPDIR)/bmfont.Tpo"; exit 1; \
	fi
#	source='intern/bmfont.c' object='bmfont.lo' libtool=yes \
#	depfile='$(DEPDIR)/bmfont.Plo' tmpdepfile='$(DEPDIR)/bmfont.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bmfont.lo `test -f 'intern/bmfont.c' || echo '$(srcdir)/'`intern/bmfont.c

font.o: intern/font.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT font.o -MD -MP -MF "$(DEPDIR)/font.Tpo" \
	  -c -o font.o `test -f 'intern/font.c' || echo '$(srcdir)/'`intern/font.c; \
	then mv -f "$(DEPDIR)/font.Tpo" "$(DEPDIR)/font.Po"; \
	else rm -f "$(DEPDIR)/font.Tpo"; exit 1; \
	fi
#	source='intern/font.c' object='font.o' libtool=no \
#	depfile='$(DEPDIR)/font.Po' tmpdepfile='$(DEPDIR)/font.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o font.o `test -f 'intern/font.c' || echo '$(srcdir)/'`intern/font.c

font.obj: intern/font.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT font.obj -MD -MP -MF "$(DEPDIR)/font.Tpo" \
	  -c -o font.obj `if test -f 'intern/font.c'; then $(CYGPATH_W) 'intern/font.c'; else $(CYGPATH_W) '$(srcdir)/intern/font.c'; fi`; \
	then mv -f "$(DEPDIR)/font.Tpo" "$(DEPDIR)/font.Po"; \
	else rm -f "$(DEPDIR)/font.Tpo"; exit 1; \
	fi
#	source='intern/font.c' object='font.obj' libtool=no \
#	depfile='$(DEPDIR)/font.Po' tmpdepfile='$(DEPDIR)/font.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o font.obj `if test -f 'intern/font.c'; then $(CYGPATH_W) 'intern/font.c'; else $(CYGPATH_W) '$(srcdir)/intern/font.c'; fi`

font.lo: intern/font.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT font.lo -MD -MP -MF "$(DEPDIR)/font.Tpo" \
	  -c -o font.lo `test -f 'intern/font.c' || echo '$(srcdir)/'`intern/font.c; \
	then mv -f "$(DEPDIR)/font.Tpo" "$(DEPDIR)/font.Plo"; \
	else rm -f "$(DEPDIR)/font.Tpo"; exit 1; \
	fi
#	source='intern/font.c' object='font.lo' libtool=yes \
#	depfile='$(DEPDIR)/font.Plo' tmpdepfile='$(DEPDIR)/font.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o font.lo `test -f 'intern/font.c' || echo '$(srcdir)/'`intern/font.c

library.o: intern/library.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT library.o -MD -MP -MF "$(DEPDIR)/library.Tpo" \
	  -c -o library.o `test -f 'intern/library.c' || echo '$(srcdir)/'`intern/library.c; \
	then mv -f "$(DEPDIR)/library.Tpo" "$(DEPDIR)/library.Po"; \
	else rm -f "$(DEPDIR)/library.Tpo"; exit 1; \
	fi
#	source='intern/library.c' object='library.o' libtool=no \
#	depfile='$(DEPDIR)/library.Po' tmpdepfile='$(DEPDIR)/library.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o library.o `test -f 'intern/library.c' || echo '$(srcdir)/'`intern/library.c

library.obj: intern/library.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT library.obj -MD -MP -MF "$(DEPDIR)/library.Tpo" \
	  -c -o library.obj `if test -f 'intern/library.c'; then $(CYGPATH_W) 'intern/library.c'; else $(CYGPATH_W) '$(srcdir)/intern/library.c'; fi`; \
	then mv -f "$(DEPDIR)/library.Tpo" "$(DEPDIR)/library.Po"; \
	else rm -f "$(DEPDIR)/library.Tpo"; exit 1; \
	fi
#	source='intern/library.c' object='library.obj' libtool=no \
#	depfile='$(DEPDIR)/library.Po' tmpdepfile='$(DEPDIR)/library.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o library.obj `if test -f 'intern/library.c'; then $(CYGPATH_W) 'intern/library.c'; else $(CYGPATH_W) '$(srcdir)/intern/library.c'; fi`

library.lo: intern/library.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT library.lo -MD -MP -MF "$(DEPDIR)/library.Tpo" \
	  -c -o library.lo `test -f 'intern/library.c' || echo '$(srcdir)/'`intern/library.c; \
	then mv -f "$(DEPDIR)/library.Tpo" "$(DEPDIR)/library.Plo"; \
	else rm -f "$(DEPDIR)/library.Tpo"; exit 1; \
	fi
#	source='intern/library.c' object='library.lo' libtool=yes \
#	depfile='$(DEPDIR)/library.Plo' tmpdepfile='$(DEPDIR)/library.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o library.lo `test -f 'intern/library.c' || echo '$(srcdir)/'`intern/library.c

property.o: intern/property.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT property.o -MD -MP -MF "$(DEPDIR)/property.Tpo" \
	  -c -o property.o `test -f 'intern/property.c' || echo '$(srcdir)/'`intern/property.c; \
	then mv -f "$(DEPDIR)/property.Tpo" "$(DEPDIR)/property.Po"; \
	else rm -f "$(DEPDIR)/property.Tpo"; exit 1; \
	fi
#	source='intern/property.c' object='property.o' libtool=no \
#	depfile='$(DEPDIR)/property.Po' tmpdepfile='$(DEPDIR)/property.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o property.o `test -f 'intern/property.c' || echo '$(srcdir)/'`intern/property.c

property.obj: intern/property.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT property.obj -MD -MP -MF "$(DEPDIR)/property.Tpo" \
	  -c -o property.obj `if test -f 'intern/property.c'; then $(CYGPATH_W) 'intern/property.c'; else $(CYGPATH_W) '$(srcdir)/intern/property.c'; fi`; \
	then mv -f "$(DEPDIR)/property.Tpo" "$(DEPDIR)/property.Po"; \
	else rm -f "$(DEPDIR)/property.Tpo"; exit 1; \
	fi
#	source='intern/property.c' object='property.obj' libtool=no \
#	depfile='$(DEPDIR)/property.Po' tmpdepfile='$(DEPDIR)/property.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o property.obj `if test -f 'intern/property.c'; then $(CYGPATH_W) 'intern/property.c'; else $(CYGPATH_W) '$(srcdir)/intern/property.c'; fi`

property.lo: intern/property.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT property.lo -MD -MP -MF "$(DEPDIR)/property.Tpo" \
	  -c -o property.lo `test -f 'intern/property.c' || echo '$(srcdir)/'`intern/property.c; \
	then mv -f "$(DEPDIR)/property.Tpo" "$(DEPDIR)/property.Plo"; \
	else rm -f "$(DEPDIR)/property.Tpo"; exit 1; \
	fi
#	source='intern/property.c' object='property.lo' libtool=yes \
#	depfile='$(DEPDIR)/property.Plo' tmpdepfile='$(DEPDIR)/property.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o property.lo `test -f 'intern/property.c' || echo '$(srcdir)/'`intern/property.c

texture.o: intern/texture.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT texture.o -MD -MP -MF "$(DEPDIR)/texture.Tpo" \
	  -c -o texture.o `test -f 'intern/texture.c' || echo '$(srcdir)/'`intern/texture.c; \
	then mv -f "$(DEPDIR)/texture.Tpo" "$(DEPDIR)/texture.Po"; \
	else rm -f "$(DEPDIR)/texture.Tpo"; exit 1; \
	fi
#	source='intern/texture.c' object='texture.o' libtool=no \
#	depfile='$(DEPDIR)/texture.Po' tmpdepfile='$(DEPDIR)/texture.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o texture.o `test -f 'intern/texture.c' || echo '$(srcdir)/'`intern/texture.c

texture.obj: intern/texture.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT texture.obj -MD -MP -MF "$(DEPDIR)/texture.Tpo" \
	  -c -o texture.obj `if test -f 'intern/texture.c'; then $(CYGPATH_W) 'intern/texture.c'; else $(CYGPATH_W) '$(srcdir)/intern/texture.c'; fi`; \
	then mv -f "$(DEPDIR)/texture.Tpo" "$(DEPDIR)/texture.Po"; \
	else rm -f "$(DEPDIR)/texture.Tpo"; exit 1; \
	fi
#	source='intern/texture.c' object='texture.obj' libtool=no \
#	depfile='$(DEPDIR)/texture.Po' tmpdepfile='$(DEPDIR)/texture.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o texture.obj `if test -f 'intern/texture.c'; then $(CYGPATH_W) 'intern/texture.c'; else $(CYGPATH_W) '$(srcdir)/intern/texture.c'; fi`

texture.lo: intern/texture.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT texture.lo -MD -MP -MF "$(DEPDIR)/texture.Tpo" \
	  -c -o texture.lo `test -f 'intern/texture.c' || echo '$(srcdir)/'`intern/texture.c; \
	then mv -f "$(DEPDIR)/texture.Tpo" "$(DEPDIR)/texture.Plo"; \
	else rm -f "$(DEPDIR)/texture.Tpo"; exit 1; \
	fi
#	source='intern/texture.c' object='texture.lo' libtool=yes \
#	depfile='$(DEPDIR)/texture.Plo' tmpdepfile='$(DEPDIR)/texture.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o texture.lo `test -f 'intern/texture.c' || echo '$(srcdir)/'`intern/texture.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/intern
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
