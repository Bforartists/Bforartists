#!/usr/bin/env python
#
# ***** BEGIN GPL LICENSE BLOCK *****
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# The Original Code is Copyright (C) 2013, Blender Foundation
# All rights reserved.
#
# The Original Code is: all of this file.
#
# Contributor(s): Nathan Letwory, Joshua Leung.
#
# ***** END GPL LICENSE BLOCK *****

Import('env')

sources = env.Glob('intern/*.cc') + env.Glob('util/*.cc')

incs = [
    '.',
    './intern',
    './util',
    '#/intern/atomic',
    '#/intern/guardedalloc',
    '../bmesh',
    '../blenlib',
    '../blenkernel',
    '../makesdna',
    '../makesrna',
    '../modifiers',
    '../windowmanager',
    ]

defs = []

if env['WITH_BF_BOOST']:
    incs.append(env['BF_BOOST_INC'])
    defs.append('HAVE_BOOST_FUNCTION_BINDINGS')

if env['OURPLATFORM'] in ('win32-vc', 'win32-mingw', 'linuxcross', 'win64-vc', 'win64-mingw'):
    incs.append(env['BF_PTHREADS_INC'])


if env['WITH_UNORDERED_MAP_SUPPORT']:
    if env['UNORDERED_MAP_HEADER'] == 'unordered_map':
        if env['UNORDERED_MAP_NAMESPACE'] == 'std':
            defs.append('DEG_STD_UNORDERED_MAP')
        elif env['UNORDERED_MAP_NAMESPACE'] == 'std::tr1':
            defs.append('DEG_STD_UNORDERED_MAP_IN_TR1_NAMESPACE')
    elif env['UNORDERED_MAP_NAMESPACE'] == 'std::tr1':
        defs.append('DEG_TR1_UNORDERED_MAP')
else:
    print("-- Replacing unordered_map/set with map/set (warning: slower!)")
    defs.append('DEG_NO_UNORDERED_MAP')

if env['WITH_BF_LEGACY_DEPSGRAPH']:
    defs.append('WITH_LEGACY_DEPSGRAPH')

env.BlenderLib(libname='bf_depsgraph', sources=sources,
               includes=incs, defines=defs,
               libtype=['core', 'player'], priority=[200, 40])
