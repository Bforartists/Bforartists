# Makefile.in generated by automake 1.7.6 from Makefile.am.
# source/blender/imbuf/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/blender
pkglibdir = $(libdir)/blender
pkgincludedir = $(includedir)/blender
top_builddir = ../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run autoconf
AUTOHEADER = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run autoheader
AUTOMAKE = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run automake-1.7
AWK = mawk
BLIB_JPEG = 
BLIB_PNG = 
BLIB_SDL = 
BlenderFMOD_FALSE = 
BlenderFMOD_TRUE = #
BlenderGAME_FALSE = 
BlenderGAME_TRUE = #
BlenderOPENAL_FALSE = 
BlenderOPENAL_TRUE = #
BlenderPLUGIN_FALSE = 
BlenderPLUGIN_TRUE = #
BlenderQUICKTIME_FALSE = 
BlenderQUICKTIME_TRUE = #
BlenderSTATIC_FALSE = 
BlenderSTATIC_TRUE = #
CARBON_FALSE = 
CARBON_TRUE = #
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -funsigned-char
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -funsigned-char
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBM = -lm
LIBOBJS = 

LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKE = /usr/bin/make
MAKEINFO = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run makeinfo
OBJEXT = o
PACKAGE = blender
PACKAGE_BUGREPORT = 
PACKAGE_NAME = blender
PACKAGE_STRING = blender 2.29
PACKAGE_TARNAME = blender
PACKAGE_VERSION = 2.29
PATH_SEPARATOR = :
PBBUILD = 
PYTHON = /usr/bin/python
PYTHONSYSPREFIX = /usr
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_LDFLAGS = -Xlinker -export-dynamic
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.2
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL -lpthread
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
USE_OPENAL_FALSE = 
USE_OPENAL_TRUE = #
VERSION = 2.29
WIN32_FALSE = 
WIN32_TRUE = #
X11_FALSE = #
X11_TRUE = 
X_CFLAGS =  -I/usr/X11R6/include
X_EXTRA_LIBS = 
X_LIBS =  -L/usr/X11R6/lib
X_PRE_LIBS =  -lSM -lICE
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
b_jpeg_FALSE = 
b_jpeg_TRUE = #
b_png_FALSE = 
b_png_TRUE = #
b_sdl_FALSE = 
b_sdl_TRUE = #
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/qword/nuevo/fuentes/trabajo/blender/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
pkgpyexecdir = ${pyexecdir}/blender
pkgpythondir = ${pythondir}/blender
prefix = /usr/local
program_transform_name = s,x,x,
pyexecdir = ${exec_prefix}/lib/python2.2/site-packages
pythondir = ${prefix}/lib/python2.2/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
noinst_LTLIBRARIES = libblender_imbuf.la

libblender_imbuf_la_SOURCES = \
	IMB_imbuf.h \
	IMB_imbuf_types.h \
	intern/IMB_allocimbuf.h \
	intern/IMB_amiga.h \
	intern/IMB_bitplanes.h \
	intern/IMB_bmp.h \
	intern/IMB_cmap.h \
	intern/IMB_divers.h \
	intern/IMB_filter.h \
	intern/IMB_ham.h \
	intern/IMB_hamx.h \
	intern/IMB_iff.h \
	intern/IMB_iris.h \
	intern/IMB_jpeg.h \
	intern/IMB_png.h \
	intern/IMB_targa.h \
	intern/allocimbuf.c \
	intern/amiga.c \
	intern/anim.c \
	intern/anim5.c \
	intern/antialias.c \
	intern/bitplanes.c \
	intern/bmp_decode.c \
	intern/cmap.c \
	intern/cspace.c \
	intern/data.c \
	intern/dither.c \
	intern/divers.c \
	intern/filter.c \
	intern/ham.c \
	intern/hamx.c \
	intern/iff.c \
	intern/imageprocess.c \
	intern/imbuf.h \
	intern/imbuf_patch.h \
	intern/iris.c \
	intern/jpeg.c \
	intern/matrix.h \
	intern/png.c \
	intern/readimage.c \
	intern/rectop.c \
	intern/rotate.c \
	intern/scaling.c \
	intern/targa.c \
	intern/util.c \
	intern/writeimage.c


INCLUDES = -I$(top_srcdir)/source/blender/makesdna \
	-I$(top_srcdir)/intern/guardedalloc \
	-I$(top_srcdir)/source/blender/blenlib \
	-I$(top_srcdir)/source/blender/avi \
	-I$(top_srcdir)/source/blender/quicktime \
	-I$(top_srcdir)/source/blender/blenkernel


EXTRA_DIST = \
	Makefile \
	intern/Makefile

subdir = source/blender/imbuf
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libblender_imbuf_la_LDFLAGS =
libblender_imbuf_la_LIBADD =
am_libblender_imbuf_la_OBJECTS = allocimbuf.lo amiga.lo anim.lo anim5.lo \
	antialias.lo bitplanes.lo bmp_decode.lo cmap.lo cspace.lo \
	data.lo dither.lo divers.lo filter.lo ham.lo hamx.lo iff.lo \
	imageprocess.lo iris.lo jpeg.lo png.lo readimage.lo rectop.lo \
	rotate.lo scaling.lo targa.lo util.lo writeimage.lo
libblender_imbuf_la_OBJECTS = $(am_libblender_imbuf_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/allocimbuf.Plo ./$(DEPDIR)/amiga.Plo \
	./$(DEPDIR)/anim.Plo ./$(DEPDIR)/anim5.Plo \
	./$(DEPDIR)/antialias.Plo ./$(DEPDIR)/bitplanes.Plo \
	./$(DEPDIR)/bmp_decode.Plo ./$(DEPDIR)/cmap.Plo \
	./$(DEPDIR)/cspace.Plo ./$(DEPDIR)/data.Plo \
	./$(DEPDIR)/dither.Plo ./$(DEPDIR)/divers.Plo \
	./$(DEPDIR)/filter.Plo ./$(DEPDIR)/ham.Plo \
	./$(DEPDIR)/hamx.Plo ./$(DEPDIR)/iff.Plo \
	./$(DEPDIR)/imageprocess.Plo ./$(DEPDIR)/iris.Plo \
	./$(DEPDIR)/jpeg.Plo ./$(DEPDIR)/png.Plo \
	./$(DEPDIR)/readimage.Plo ./$(DEPDIR)/rectop.Plo \
	./$(DEPDIR)/rotate.Plo ./$(DEPDIR)/scaling.Plo \
	./$(DEPDIR)/targa.Plo ./$(DEPDIR)/util.Plo \
	./$(DEPDIR)/writeimage.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libblender_imbuf_la_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libblender_imbuf_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  source/blender/imbuf/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libblender_imbuf.la: $(libblender_imbuf_la_OBJECTS) $(libblender_imbuf_la_DEPENDENCIES) 
	$(LINK)  $(libblender_imbuf_la_LDFLAGS) $(libblender_imbuf_la_OBJECTS) $(libblender_imbuf_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/allocimbuf.Plo
include ./$(DEPDIR)/amiga.Plo
include ./$(DEPDIR)/anim.Plo
include ./$(DEPDIR)/anim5.Plo
include ./$(DEPDIR)/antialias.Plo
include ./$(DEPDIR)/bitplanes.Plo
include ./$(DEPDIR)/bmp_decode.Plo
include ./$(DEPDIR)/cmap.Plo
include ./$(DEPDIR)/cspace.Plo
include ./$(DEPDIR)/data.Plo
include ./$(DEPDIR)/dither.Plo
include ./$(DEPDIR)/divers.Plo
include ./$(DEPDIR)/filter.Plo
include ./$(DEPDIR)/ham.Plo
include ./$(DEPDIR)/hamx.Plo
include ./$(DEPDIR)/iff.Plo
include ./$(DEPDIR)/imageprocess.Plo
include ./$(DEPDIR)/iris.Plo
include ./$(DEPDIR)/jpeg.Plo
include ./$(DEPDIR)/png.Plo
include ./$(DEPDIR)/readimage.Plo
include ./$(DEPDIR)/rectop.Plo
include ./$(DEPDIR)/rotate.Plo
include ./$(DEPDIR)/scaling.Plo
include ./$(DEPDIR)/targa.Plo
include ./$(DEPDIR)/util.Plo
include ./$(DEPDIR)/writeimage.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

allocimbuf.o: intern/allocimbuf.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT allocimbuf.o -MD -MP -MF "$(DEPDIR)/allocimbuf.Tpo" \
	  -c -o allocimbuf.o `test -f 'intern/allocimbuf.c' || echo '$(srcdir)/'`intern/allocimbuf.c; \
	then mv -f "$(DEPDIR)/allocimbuf.Tpo" "$(DEPDIR)/allocimbuf.Po"; \
	else rm -f "$(DEPDIR)/allocimbuf.Tpo"; exit 1; \
	fi
#	source='intern/allocimbuf.c' object='allocimbuf.o' libtool=no \
#	depfile='$(DEPDIR)/allocimbuf.Po' tmpdepfile='$(DEPDIR)/allocimbuf.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o allocimbuf.o `test -f 'intern/allocimbuf.c' || echo '$(srcdir)/'`intern/allocimbuf.c

allocimbuf.obj: intern/allocimbuf.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT allocimbuf.obj -MD -MP -MF "$(DEPDIR)/allocimbuf.Tpo" \
	  -c -o allocimbuf.obj `if test -f 'intern/allocimbuf.c'; then $(CYGPATH_W) 'intern/allocimbuf.c'; else $(CYGPATH_W) '$(srcdir)/intern/allocimbuf.c'; fi`; \
	then mv -f "$(DEPDIR)/allocimbuf.Tpo" "$(DEPDIR)/allocimbuf.Po"; \
	else rm -f "$(DEPDIR)/allocimbuf.Tpo"; exit 1; \
	fi
#	source='intern/allocimbuf.c' object='allocimbuf.obj' libtool=no \
#	depfile='$(DEPDIR)/allocimbuf.Po' tmpdepfile='$(DEPDIR)/allocimbuf.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o allocimbuf.obj `if test -f 'intern/allocimbuf.c'; then $(CYGPATH_W) 'intern/allocimbuf.c'; else $(CYGPATH_W) '$(srcdir)/intern/allocimbuf.c'; fi`

allocimbuf.lo: intern/allocimbuf.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT allocimbuf.lo -MD -MP -MF "$(DEPDIR)/allocimbuf.Tpo" \
	  -c -o allocimbuf.lo `test -f 'intern/allocimbuf.c' || echo '$(srcdir)/'`intern/allocimbuf.c; \
	then mv -f "$(DEPDIR)/allocimbuf.Tpo" "$(DEPDIR)/allocimbuf.Plo"; \
	else rm -f "$(DEPDIR)/allocimbuf.Tpo"; exit 1; \
	fi
#	source='intern/allocimbuf.c' object='allocimbuf.lo' libtool=yes \
#	depfile='$(DEPDIR)/allocimbuf.Plo' tmpdepfile='$(DEPDIR)/allocimbuf.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o allocimbuf.lo `test -f 'intern/allocimbuf.c' || echo '$(srcdir)/'`intern/allocimbuf.c

amiga.o: intern/amiga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT amiga.o -MD -MP -MF "$(DEPDIR)/amiga.Tpo" \
	  -c -o amiga.o `test -f 'intern/amiga.c' || echo '$(srcdir)/'`intern/amiga.c; \
	then mv -f "$(DEPDIR)/amiga.Tpo" "$(DEPDIR)/amiga.Po"; \
	else rm -f "$(DEPDIR)/amiga.Tpo"; exit 1; \
	fi
#	source='intern/amiga.c' object='amiga.o' libtool=no \
#	depfile='$(DEPDIR)/amiga.Po' tmpdepfile='$(DEPDIR)/amiga.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amiga.o `test -f 'intern/amiga.c' || echo '$(srcdir)/'`intern/amiga.c

amiga.obj: intern/amiga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT amiga.obj -MD -MP -MF "$(DEPDIR)/amiga.Tpo" \
	  -c -o amiga.obj `if test -f 'intern/amiga.c'; then $(CYGPATH_W) 'intern/amiga.c'; else $(CYGPATH_W) '$(srcdir)/intern/amiga.c'; fi`; \
	then mv -f "$(DEPDIR)/amiga.Tpo" "$(DEPDIR)/amiga.Po"; \
	else rm -f "$(DEPDIR)/amiga.Tpo"; exit 1; \
	fi
#	source='intern/amiga.c' object='amiga.obj' libtool=no \
#	depfile='$(DEPDIR)/amiga.Po' tmpdepfile='$(DEPDIR)/amiga.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amiga.obj `if test -f 'intern/amiga.c'; then $(CYGPATH_W) 'intern/amiga.c'; else $(CYGPATH_W) '$(srcdir)/intern/amiga.c'; fi`

amiga.lo: intern/amiga.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT amiga.lo -MD -MP -MF "$(DEPDIR)/amiga.Tpo" \
	  -c -o amiga.lo `test -f 'intern/amiga.c' || echo '$(srcdir)/'`intern/amiga.c; \
	then mv -f "$(DEPDIR)/amiga.Tpo" "$(DEPDIR)/amiga.Plo"; \
	else rm -f "$(DEPDIR)/amiga.Tpo"; exit 1; \
	fi
#	source='intern/amiga.c' object='amiga.lo' libtool=yes \
#	depfile='$(DEPDIR)/amiga.Plo' tmpdepfile='$(DEPDIR)/amiga.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amiga.lo `test -f 'intern/amiga.c' || echo '$(srcdir)/'`intern/amiga.c

anim.o: intern/anim.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT anim.o -MD -MP -MF "$(DEPDIR)/anim.Tpo" \
	  -c -o anim.o `test -f 'intern/anim.c' || echo '$(srcdir)/'`intern/anim.c; \
	then mv -f "$(DEPDIR)/anim.Tpo" "$(DEPDIR)/anim.Po"; \
	else rm -f "$(DEPDIR)/anim.Tpo"; exit 1; \
	fi
#	source='intern/anim.c' object='anim.o' libtool=no \
#	depfile='$(DEPDIR)/anim.Po' tmpdepfile='$(DEPDIR)/anim.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o anim.o `test -f 'intern/anim.c' || echo '$(srcdir)/'`intern/anim.c

anim.obj: intern/anim.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT anim.obj -MD -MP -MF "$(DEPDIR)/anim.Tpo" \
	  -c -o anim.obj `if test -f 'intern/anim.c'; then $(CYGPATH_W) 'intern/anim.c'; else $(CYGPATH_W) '$(srcdir)/intern/anim.c'; fi`; \
	then mv -f "$(DEPDIR)/anim.Tpo" "$(DEPDIR)/anim.Po"; \
	else rm -f "$(DEPDIR)/anim.Tpo"; exit 1; \
	fi
#	source='intern/anim.c' object='anim.obj' libtool=no \
#	depfile='$(DEPDIR)/anim.Po' tmpdepfile='$(DEPDIR)/anim.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o anim.obj `if test -f 'intern/anim.c'; then $(CYGPATH_W) 'intern/anim.c'; else $(CYGPATH_W) '$(srcdir)/intern/anim.c'; fi`

anim.lo: intern/anim.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT anim.lo -MD -MP -MF "$(DEPDIR)/anim.Tpo" \
	  -c -o anim.lo `test -f 'intern/anim.c' || echo '$(srcdir)/'`intern/anim.c; \
	then mv -f "$(DEPDIR)/anim.Tpo" "$(DEPDIR)/anim.Plo"; \
	else rm -f "$(DEPDIR)/anim.Tpo"; exit 1; \
	fi
#	source='intern/anim.c' object='anim.lo' libtool=yes \
#	depfile='$(DEPDIR)/anim.Plo' tmpdepfile='$(DEPDIR)/anim.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o anim.lo `test -f 'intern/anim.c' || echo '$(srcdir)/'`intern/anim.c

anim5.o: intern/anim5.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT anim5.o -MD -MP -MF "$(DEPDIR)/anim5.Tpo" \
	  -c -o anim5.o `test -f 'intern/anim5.c' || echo '$(srcdir)/'`intern/anim5.c; \
	then mv -f "$(DEPDIR)/anim5.Tpo" "$(DEPDIR)/anim5.Po"; \
	else rm -f "$(DEPDIR)/anim5.Tpo"; exit 1; \
	fi
#	source='intern/anim5.c' object='anim5.o' libtool=no \
#	depfile='$(DEPDIR)/anim5.Po' tmpdepfile='$(DEPDIR)/anim5.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o anim5.o `test -f 'intern/anim5.c' || echo '$(srcdir)/'`intern/anim5.c

anim5.obj: intern/anim5.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT anim5.obj -MD -MP -MF "$(DEPDIR)/anim5.Tpo" \
	  -c -o anim5.obj `if test -f 'intern/anim5.c'; then $(CYGPATH_W) 'intern/anim5.c'; else $(CYGPATH_W) '$(srcdir)/intern/anim5.c'; fi`; \
	then mv -f "$(DEPDIR)/anim5.Tpo" "$(DEPDIR)/anim5.Po"; \
	else rm -f "$(DEPDIR)/anim5.Tpo"; exit 1; \
	fi
#	source='intern/anim5.c' object='anim5.obj' libtool=no \
#	depfile='$(DEPDIR)/anim5.Po' tmpdepfile='$(DEPDIR)/anim5.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o anim5.obj `if test -f 'intern/anim5.c'; then $(CYGPATH_W) 'intern/anim5.c'; else $(CYGPATH_W) '$(srcdir)/intern/anim5.c'; fi`

anim5.lo: intern/anim5.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT anim5.lo -MD -MP -MF "$(DEPDIR)/anim5.Tpo" \
	  -c -o anim5.lo `test -f 'intern/anim5.c' || echo '$(srcdir)/'`intern/anim5.c; \
	then mv -f "$(DEPDIR)/anim5.Tpo" "$(DEPDIR)/anim5.Plo"; \
	else rm -f "$(DEPDIR)/anim5.Tpo"; exit 1; \
	fi
#	source='intern/anim5.c' object='anim5.lo' libtool=yes \
#	depfile='$(DEPDIR)/anim5.Plo' tmpdepfile='$(DEPDIR)/anim5.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o anim5.lo `test -f 'intern/anim5.c' || echo '$(srcdir)/'`intern/anim5.c

antialias.o: intern/antialias.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT antialias.o -MD -MP -MF "$(DEPDIR)/antialias.Tpo" \
	  -c -o antialias.o `test -f 'intern/antialias.c' || echo '$(srcdir)/'`intern/antialias.c; \
	then mv -f "$(DEPDIR)/antialias.Tpo" "$(DEPDIR)/antialias.Po"; \
	else rm -f "$(DEPDIR)/antialias.Tpo"; exit 1; \
	fi
#	source='intern/antialias.c' object='antialias.o' libtool=no \
#	depfile='$(DEPDIR)/antialias.Po' tmpdepfile='$(DEPDIR)/antialias.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o antialias.o `test -f 'intern/antialias.c' || echo '$(srcdir)/'`intern/antialias.c

antialias.obj: intern/antialias.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT antialias.obj -MD -MP -MF "$(DEPDIR)/antialias.Tpo" \
	  -c -o antialias.obj `if test -f 'intern/antialias.c'; then $(CYGPATH_W) 'intern/antialias.c'; else $(CYGPATH_W) '$(srcdir)/intern/antialias.c'; fi`; \
	then mv -f "$(DEPDIR)/antialias.Tpo" "$(DEPDIR)/antialias.Po"; \
	else rm -f "$(DEPDIR)/antialias.Tpo"; exit 1; \
	fi
#	source='intern/antialias.c' object='antialias.obj' libtool=no \
#	depfile='$(DEPDIR)/antialias.Po' tmpdepfile='$(DEPDIR)/antialias.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o antialias.obj `if test -f 'intern/antialias.c'; then $(CYGPATH_W) 'intern/antialias.c'; else $(CYGPATH_W) '$(srcdir)/intern/antialias.c'; fi`

antialias.lo: intern/antialias.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT antialias.lo -MD -MP -MF "$(DEPDIR)/antialias.Tpo" \
	  -c -o antialias.lo `test -f 'intern/antialias.c' || echo '$(srcdir)/'`intern/antialias.c; \
	then mv -f "$(DEPDIR)/antialias.Tpo" "$(DEPDIR)/antialias.Plo"; \
	else rm -f "$(DEPDIR)/antialias.Tpo"; exit 1; \
	fi
#	source='intern/antialias.c' object='antialias.lo' libtool=yes \
#	depfile='$(DEPDIR)/antialias.Plo' tmpdepfile='$(DEPDIR)/antialias.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o antialias.lo `test -f 'intern/antialias.c' || echo '$(srcdir)/'`intern/antialias.c

bitplanes.o: intern/bitplanes.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bitplanes.o -MD -MP -MF "$(DEPDIR)/bitplanes.Tpo" \
	  -c -o bitplanes.o `test -f 'intern/bitplanes.c' || echo '$(srcdir)/'`intern/bitplanes.c; \
	then mv -f "$(DEPDIR)/bitplanes.Tpo" "$(DEPDIR)/bitplanes.Po"; \
	else rm -f "$(DEPDIR)/bitplanes.Tpo"; exit 1; \
	fi
#	source='intern/bitplanes.c' object='bitplanes.o' libtool=no \
#	depfile='$(DEPDIR)/bitplanes.Po' tmpdepfile='$(DEPDIR)/bitplanes.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bitplanes.o `test -f 'intern/bitplanes.c' || echo '$(srcdir)/'`intern/bitplanes.c

bitplanes.obj: intern/bitplanes.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bitplanes.obj -MD -MP -MF "$(DEPDIR)/bitplanes.Tpo" \
	  -c -o bitplanes.obj `if test -f 'intern/bitplanes.c'; then $(CYGPATH_W) 'intern/bitplanes.c'; else $(CYGPATH_W) '$(srcdir)/intern/bitplanes.c'; fi`; \
	then mv -f "$(DEPDIR)/bitplanes.Tpo" "$(DEPDIR)/bitplanes.Po"; \
	else rm -f "$(DEPDIR)/bitplanes.Tpo"; exit 1; \
	fi
#	source='intern/bitplanes.c' object='bitplanes.obj' libtool=no \
#	depfile='$(DEPDIR)/bitplanes.Po' tmpdepfile='$(DEPDIR)/bitplanes.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bitplanes.obj `if test -f 'intern/bitplanes.c'; then $(CYGPATH_W) 'intern/bitplanes.c'; else $(CYGPATH_W) '$(srcdir)/intern/bitplanes.c'; fi`

bitplanes.lo: intern/bitplanes.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bitplanes.lo -MD -MP -MF "$(DEPDIR)/bitplanes.Tpo" \
	  -c -o bitplanes.lo `test -f 'intern/bitplanes.c' || echo '$(srcdir)/'`intern/bitplanes.c; \
	then mv -f "$(DEPDIR)/bitplanes.Tpo" "$(DEPDIR)/bitplanes.Plo"; \
	else rm -f "$(DEPDIR)/bitplanes.Tpo"; exit 1; \
	fi
#	source='intern/bitplanes.c' object='bitplanes.lo' libtool=yes \
#	depfile='$(DEPDIR)/bitplanes.Plo' tmpdepfile='$(DEPDIR)/bitplanes.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bitplanes.lo `test -f 'intern/bitplanes.c' || echo '$(srcdir)/'`intern/bitplanes.c

bmp_decode.o: intern/bmp_decode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bmp_decode.o -MD -MP -MF "$(DEPDIR)/bmp_decode.Tpo" \
	  -c -o bmp_decode.o `test -f 'intern/bmp_decode.c' || echo '$(srcdir)/'`intern/bmp_decode.c; \
	then mv -f "$(DEPDIR)/bmp_decode.Tpo" "$(DEPDIR)/bmp_decode.Po"; \
	else rm -f "$(DEPDIR)/bmp_decode.Tpo"; exit 1; \
	fi
#	source='intern/bmp_decode.c' object='bmp_decode.o' libtool=no \
#	depfile='$(DEPDIR)/bmp_decode.Po' tmpdepfile='$(DEPDIR)/bmp_decode.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bmp_decode.o `test -f 'intern/bmp_decode.c' || echo '$(srcdir)/'`intern/bmp_decode.c

bmp_decode.obj: intern/bmp_decode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bmp_decode.obj -MD -MP -MF "$(DEPDIR)/bmp_decode.Tpo" \
	  -c -o bmp_decode.obj `if test -f 'intern/bmp_decode.c'; then $(CYGPATH_W) 'intern/bmp_decode.c'; else $(CYGPATH_W) '$(srcdir)/intern/bmp_decode.c'; fi`; \
	then mv -f "$(DEPDIR)/bmp_decode.Tpo" "$(DEPDIR)/bmp_decode.Po"; \
	else rm -f "$(DEPDIR)/bmp_decode.Tpo"; exit 1; \
	fi
#	source='intern/bmp_decode.c' object='bmp_decode.obj' libtool=no \
#	depfile='$(DEPDIR)/bmp_decode.Po' tmpdepfile='$(DEPDIR)/bmp_decode.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bmp_decode.obj `if test -f 'intern/bmp_decode.c'; then $(CYGPATH_W) 'intern/bmp_decode.c'; else $(CYGPATH_W) '$(srcdir)/intern/bmp_decode.c'; fi`

bmp_decode.lo: intern/bmp_decode.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bmp_decode.lo -MD -MP -MF "$(DEPDIR)/bmp_decode.Tpo" \
	  -c -o bmp_decode.lo `test -f 'intern/bmp_decode.c' || echo '$(srcdir)/'`intern/bmp_decode.c; \
	then mv -f "$(DEPDIR)/bmp_decode.Tpo" "$(DEPDIR)/bmp_decode.Plo"; \
	else rm -f "$(DEPDIR)/bmp_decode.Tpo"; exit 1; \
	fi
#	source='intern/bmp_decode.c' object='bmp_decode.lo' libtool=yes \
#	depfile='$(DEPDIR)/bmp_decode.Plo' tmpdepfile='$(DEPDIR)/bmp_decode.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bmp_decode.lo `test -f 'intern/bmp_decode.c' || echo '$(srcdir)/'`intern/bmp_decode.c

cmap.o: intern/cmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cmap.o -MD -MP -MF "$(DEPDIR)/cmap.Tpo" \
	  -c -o cmap.o `test -f 'intern/cmap.c' || echo '$(srcdir)/'`intern/cmap.c; \
	then mv -f "$(DEPDIR)/cmap.Tpo" "$(DEPDIR)/cmap.Po"; \
	else rm -f "$(DEPDIR)/cmap.Tpo"; exit 1; \
	fi
#	source='intern/cmap.c' object='cmap.o' libtool=no \
#	depfile='$(DEPDIR)/cmap.Po' tmpdepfile='$(DEPDIR)/cmap.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cmap.o `test -f 'intern/cmap.c' || echo '$(srcdir)/'`intern/cmap.c

cmap.obj: intern/cmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cmap.obj -MD -MP -MF "$(DEPDIR)/cmap.Tpo" \
	  -c -o cmap.obj `if test -f 'intern/cmap.c'; then $(CYGPATH_W) 'intern/cmap.c'; else $(CYGPATH_W) '$(srcdir)/intern/cmap.c'; fi`; \
	then mv -f "$(DEPDIR)/cmap.Tpo" "$(DEPDIR)/cmap.Po"; \
	else rm -f "$(DEPDIR)/cmap.Tpo"; exit 1; \
	fi
#	source='intern/cmap.c' object='cmap.obj' libtool=no \
#	depfile='$(DEPDIR)/cmap.Po' tmpdepfile='$(DEPDIR)/cmap.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cmap.obj `if test -f 'intern/cmap.c'; then $(CYGPATH_W) 'intern/cmap.c'; else $(CYGPATH_W) '$(srcdir)/intern/cmap.c'; fi`

cmap.lo: intern/cmap.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cmap.lo -MD -MP -MF "$(DEPDIR)/cmap.Tpo" \
	  -c -o cmap.lo `test -f 'intern/cmap.c' || echo '$(srcdir)/'`intern/cmap.c; \
	then mv -f "$(DEPDIR)/cmap.Tpo" "$(DEPDIR)/cmap.Plo"; \
	else rm -f "$(DEPDIR)/cmap.Tpo"; exit 1; \
	fi
#	source='intern/cmap.c' object='cmap.lo' libtool=yes \
#	depfile='$(DEPDIR)/cmap.Plo' tmpdepfile='$(DEPDIR)/cmap.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cmap.lo `test -f 'intern/cmap.c' || echo '$(srcdir)/'`intern/cmap.c

cspace.o: intern/cspace.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cspace.o -MD -MP -MF "$(DEPDIR)/cspace.Tpo" \
	  -c -o cspace.o `test -f 'intern/cspace.c' || echo '$(srcdir)/'`intern/cspace.c; \
	then mv -f "$(DEPDIR)/cspace.Tpo" "$(DEPDIR)/cspace.Po"; \
	else rm -f "$(DEPDIR)/cspace.Tpo"; exit 1; \
	fi
#	source='intern/cspace.c' object='cspace.o' libtool=no \
#	depfile='$(DEPDIR)/cspace.Po' tmpdepfile='$(DEPDIR)/cspace.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cspace.o `test -f 'intern/cspace.c' || echo '$(srcdir)/'`intern/cspace.c

cspace.obj: intern/cspace.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cspace.obj -MD -MP -MF "$(DEPDIR)/cspace.Tpo" \
	  -c -o cspace.obj `if test -f 'intern/cspace.c'; then $(CYGPATH_W) 'intern/cspace.c'; else $(CYGPATH_W) '$(srcdir)/intern/cspace.c'; fi`; \
	then mv -f "$(DEPDIR)/cspace.Tpo" "$(DEPDIR)/cspace.Po"; \
	else rm -f "$(DEPDIR)/cspace.Tpo"; exit 1; \
	fi
#	source='intern/cspace.c' object='cspace.obj' libtool=no \
#	depfile='$(DEPDIR)/cspace.Po' tmpdepfile='$(DEPDIR)/cspace.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cspace.obj `if test -f 'intern/cspace.c'; then $(CYGPATH_W) 'intern/cspace.c'; else $(CYGPATH_W) '$(srcdir)/intern/cspace.c'; fi`

cspace.lo: intern/cspace.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cspace.lo -MD -MP -MF "$(DEPDIR)/cspace.Tpo" \
	  -c -o cspace.lo `test -f 'intern/cspace.c' || echo '$(srcdir)/'`intern/cspace.c; \
	then mv -f "$(DEPDIR)/cspace.Tpo" "$(DEPDIR)/cspace.Plo"; \
	else rm -f "$(DEPDIR)/cspace.Tpo"; exit 1; \
	fi
#	source='intern/cspace.c' object='cspace.lo' libtool=yes \
#	depfile='$(DEPDIR)/cspace.Plo' tmpdepfile='$(DEPDIR)/cspace.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cspace.lo `test -f 'intern/cspace.c' || echo '$(srcdir)/'`intern/cspace.c

data.o: intern/data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data.o -MD -MP -MF "$(DEPDIR)/data.Tpo" \
	  -c -o data.o `test -f 'intern/data.c' || echo '$(srcdir)/'`intern/data.c; \
	then mv -f "$(DEPDIR)/data.Tpo" "$(DEPDIR)/data.Po"; \
	else rm -f "$(DEPDIR)/data.Tpo"; exit 1; \
	fi
#	source='intern/data.c' object='data.o' libtool=no \
#	depfile='$(DEPDIR)/data.Po' tmpdepfile='$(DEPDIR)/data.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data.o `test -f 'intern/data.c' || echo '$(srcdir)/'`intern/data.c

data.obj: intern/data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data.obj -MD -MP -MF "$(DEPDIR)/data.Tpo" \
	  -c -o data.obj `if test -f 'intern/data.c'; then $(CYGPATH_W) 'intern/data.c'; else $(CYGPATH_W) '$(srcdir)/intern/data.c'; fi`; \
	then mv -f "$(DEPDIR)/data.Tpo" "$(DEPDIR)/data.Po"; \
	else rm -f "$(DEPDIR)/data.Tpo"; exit 1; \
	fi
#	source='intern/data.c' object='data.obj' libtool=no \
#	depfile='$(DEPDIR)/data.Po' tmpdepfile='$(DEPDIR)/data.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data.obj `if test -f 'intern/data.c'; then $(CYGPATH_W) 'intern/data.c'; else $(CYGPATH_W) '$(srcdir)/intern/data.c'; fi`

data.lo: intern/data.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data.lo -MD -MP -MF "$(DEPDIR)/data.Tpo" \
	  -c -o data.lo `test -f 'intern/data.c' || echo '$(srcdir)/'`intern/data.c; \
	then mv -f "$(DEPDIR)/data.Tpo" "$(DEPDIR)/data.Plo"; \
	else rm -f "$(DEPDIR)/data.Tpo"; exit 1; \
	fi
#	source='intern/data.c' object='data.lo' libtool=yes \
#	depfile='$(DEPDIR)/data.Plo' tmpdepfile='$(DEPDIR)/data.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data.lo `test -f 'intern/data.c' || echo '$(srcdir)/'`intern/data.c

dither.o: intern/dither.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dither.o -MD -MP -MF "$(DEPDIR)/dither.Tpo" \
	  -c -o dither.o `test -f 'intern/dither.c' || echo '$(srcdir)/'`intern/dither.c; \
	then mv -f "$(DEPDIR)/dither.Tpo" "$(DEPDIR)/dither.Po"; \
	else rm -f "$(DEPDIR)/dither.Tpo"; exit 1; \
	fi
#	source='intern/dither.c' object='dither.o' libtool=no \
#	depfile='$(DEPDIR)/dither.Po' tmpdepfile='$(DEPDIR)/dither.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dither.o `test -f 'intern/dither.c' || echo '$(srcdir)/'`intern/dither.c

dither.obj: intern/dither.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dither.obj -MD -MP -MF "$(DEPDIR)/dither.Tpo" \
	  -c -o dither.obj `if test -f 'intern/dither.c'; then $(CYGPATH_W) 'intern/dither.c'; else $(CYGPATH_W) '$(srcdir)/intern/dither.c'; fi`; \
	then mv -f "$(DEPDIR)/dither.Tpo" "$(DEPDIR)/dither.Po"; \
	else rm -f "$(DEPDIR)/dither.Tpo"; exit 1; \
	fi
#	source='intern/dither.c' object='dither.obj' libtool=no \
#	depfile='$(DEPDIR)/dither.Po' tmpdepfile='$(DEPDIR)/dither.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dither.obj `if test -f 'intern/dither.c'; then $(CYGPATH_W) 'intern/dither.c'; else $(CYGPATH_W) '$(srcdir)/intern/dither.c'; fi`

dither.lo: intern/dither.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dither.lo -MD -MP -MF "$(DEPDIR)/dither.Tpo" \
	  -c -o dither.lo `test -f 'intern/dither.c' || echo '$(srcdir)/'`intern/dither.c; \
	then mv -f "$(DEPDIR)/dither.Tpo" "$(DEPDIR)/dither.Plo"; \
	else rm -f "$(DEPDIR)/dither.Tpo"; exit 1; \
	fi
#	source='intern/dither.c' object='dither.lo' libtool=yes \
#	depfile='$(DEPDIR)/dither.Plo' tmpdepfile='$(DEPDIR)/dither.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dither.lo `test -f 'intern/dither.c' || echo '$(srcdir)/'`intern/dither.c

divers.o: intern/divers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT divers.o -MD -MP -MF "$(DEPDIR)/divers.Tpo" \
	  -c -o divers.o `test -f 'intern/divers.c' || echo '$(srcdir)/'`intern/divers.c; \
	then mv -f "$(DEPDIR)/divers.Tpo" "$(DEPDIR)/divers.Po"; \
	else rm -f "$(DEPDIR)/divers.Tpo"; exit 1; \
	fi
#	source='intern/divers.c' object='divers.o' libtool=no \
#	depfile='$(DEPDIR)/divers.Po' tmpdepfile='$(DEPDIR)/divers.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o divers.o `test -f 'intern/divers.c' || echo '$(srcdir)/'`intern/divers.c

divers.obj: intern/divers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT divers.obj -MD -MP -MF "$(DEPDIR)/divers.Tpo" \
	  -c -o divers.obj `if test -f 'intern/divers.c'; then $(CYGPATH_W) 'intern/divers.c'; else $(CYGPATH_W) '$(srcdir)/intern/divers.c'; fi`; \
	then mv -f "$(DEPDIR)/divers.Tpo" "$(DEPDIR)/divers.Po"; \
	else rm -f "$(DEPDIR)/divers.Tpo"; exit 1; \
	fi
#	source='intern/divers.c' object='divers.obj' libtool=no \
#	depfile='$(DEPDIR)/divers.Po' tmpdepfile='$(DEPDIR)/divers.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o divers.obj `if test -f 'intern/divers.c'; then $(CYGPATH_W) 'intern/divers.c'; else $(CYGPATH_W) '$(srcdir)/intern/divers.c'; fi`

divers.lo: intern/divers.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT divers.lo -MD -MP -MF "$(DEPDIR)/divers.Tpo" \
	  -c -o divers.lo `test -f 'intern/divers.c' || echo '$(srcdir)/'`intern/divers.c; \
	then mv -f "$(DEPDIR)/divers.Tpo" "$(DEPDIR)/divers.Plo"; \
	else rm -f "$(DEPDIR)/divers.Tpo"; exit 1; \
	fi
#	source='intern/divers.c' object='divers.lo' libtool=yes \
#	depfile='$(DEPDIR)/divers.Plo' tmpdepfile='$(DEPDIR)/divers.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o divers.lo `test -f 'intern/divers.c' || echo '$(srcdir)/'`intern/divers.c

filter.o: intern/filter.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter.o -MD -MP -MF "$(DEPDIR)/filter.Tpo" \
	  -c -o filter.o `test -f 'intern/filter.c' || echo '$(srcdir)/'`intern/filter.c; \
	then mv -f "$(DEPDIR)/filter.Tpo" "$(DEPDIR)/filter.Po"; \
	else rm -f "$(DEPDIR)/filter.Tpo"; exit 1; \
	fi
#	source='intern/filter.c' object='filter.o' libtool=no \
#	depfile='$(DEPDIR)/filter.Po' tmpdepfile='$(DEPDIR)/filter.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter.o `test -f 'intern/filter.c' || echo '$(srcdir)/'`intern/filter.c

filter.obj: intern/filter.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter.obj -MD -MP -MF "$(DEPDIR)/filter.Tpo" \
	  -c -o filter.obj `if test -f 'intern/filter.c'; then $(CYGPATH_W) 'intern/filter.c'; else $(CYGPATH_W) '$(srcdir)/intern/filter.c'; fi`; \
	then mv -f "$(DEPDIR)/filter.Tpo" "$(DEPDIR)/filter.Po"; \
	else rm -f "$(DEPDIR)/filter.Tpo"; exit 1; \
	fi
#	source='intern/filter.c' object='filter.obj' libtool=no \
#	depfile='$(DEPDIR)/filter.Po' tmpdepfile='$(DEPDIR)/filter.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter.obj `if test -f 'intern/filter.c'; then $(CYGPATH_W) 'intern/filter.c'; else $(CYGPATH_W) '$(srcdir)/intern/filter.c'; fi`

filter.lo: intern/filter.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter.lo -MD -MP -MF "$(DEPDIR)/filter.Tpo" \
	  -c -o filter.lo `test -f 'intern/filter.c' || echo '$(srcdir)/'`intern/filter.c; \
	then mv -f "$(DEPDIR)/filter.Tpo" "$(DEPDIR)/filter.Plo"; \
	else rm -f "$(DEPDIR)/filter.Tpo"; exit 1; \
	fi
#	source='intern/filter.c' object='filter.lo' libtool=yes \
#	depfile='$(DEPDIR)/filter.Plo' tmpdepfile='$(DEPDIR)/filter.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter.lo `test -f 'intern/filter.c' || echo '$(srcdir)/'`intern/filter.c

ham.o: intern/ham.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ham.o -MD -MP -MF "$(DEPDIR)/ham.Tpo" \
	  -c -o ham.o `test -f 'intern/ham.c' || echo '$(srcdir)/'`intern/ham.c; \
	then mv -f "$(DEPDIR)/ham.Tpo" "$(DEPDIR)/ham.Po"; \
	else rm -f "$(DEPDIR)/ham.Tpo"; exit 1; \
	fi
#	source='intern/ham.c' object='ham.o' libtool=no \
#	depfile='$(DEPDIR)/ham.Po' tmpdepfile='$(DEPDIR)/ham.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ham.o `test -f 'intern/ham.c' || echo '$(srcdir)/'`intern/ham.c

ham.obj: intern/ham.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ham.obj -MD -MP -MF "$(DEPDIR)/ham.Tpo" \
	  -c -o ham.obj `if test -f 'intern/ham.c'; then $(CYGPATH_W) 'intern/ham.c'; else $(CYGPATH_W) '$(srcdir)/intern/ham.c'; fi`; \
	then mv -f "$(DEPDIR)/ham.Tpo" "$(DEPDIR)/ham.Po"; \
	else rm -f "$(DEPDIR)/ham.Tpo"; exit 1; \
	fi
#	source='intern/ham.c' object='ham.obj' libtool=no \
#	depfile='$(DEPDIR)/ham.Po' tmpdepfile='$(DEPDIR)/ham.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ham.obj `if test -f 'intern/ham.c'; then $(CYGPATH_W) 'intern/ham.c'; else $(CYGPATH_W) '$(srcdir)/intern/ham.c'; fi`

ham.lo: intern/ham.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ham.lo -MD -MP -MF "$(DEPDIR)/ham.Tpo" \
	  -c -o ham.lo `test -f 'intern/ham.c' || echo '$(srcdir)/'`intern/ham.c; \
	then mv -f "$(DEPDIR)/ham.Tpo" "$(DEPDIR)/ham.Plo"; \
	else rm -f "$(DEPDIR)/ham.Tpo"; exit 1; \
	fi
#	source='intern/ham.c' object='ham.lo' libtool=yes \
#	depfile='$(DEPDIR)/ham.Plo' tmpdepfile='$(DEPDIR)/ham.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ham.lo `test -f 'intern/ham.c' || echo '$(srcdir)/'`intern/ham.c

hamx.o: intern/hamx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hamx.o -MD -MP -MF "$(DEPDIR)/hamx.Tpo" \
	  -c -o hamx.o `test -f 'intern/hamx.c' || echo '$(srcdir)/'`intern/hamx.c; \
	then mv -f "$(DEPDIR)/hamx.Tpo" "$(DEPDIR)/hamx.Po"; \
	else rm -f "$(DEPDIR)/hamx.Tpo"; exit 1; \
	fi
#	source='intern/hamx.c' object='hamx.o' libtool=no \
#	depfile='$(DEPDIR)/hamx.Po' tmpdepfile='$(DEPDIR)/hamx.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hamx.o `test -f 'intern/hamx.c' || echo '$(srcdir)/'`intern/hamx.c

hamx.obj: intern/hamx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hamx.obj -MD -MP -MF "$(DEPDIR)/hamx.Tpo" \
	  -c -o hamx.obj `if test -f 'intern/hamx.c'; then $(CYGPATH_W) 'intern/hamx.c'; else $(CYGPATH_W) '$(srcdir)/intern/hamx.c'; fi`; \
	then mv -f "$(DEPDIR)/hamx.Tpo" "$(DEPDIR)/hamx.Po"; \
	else rm -f "$(DEPDIR)/hamx.Tpo"; exit 1; \
	fi
#	source='intern/hamx.c' object='hamx.obj' libtool=no \
#	depfile='$(DEPDIR)/hamx.Po' tmpdepfile='$(DEPDIR)/hamx.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hamx.obj `if test -f 'intern/hamx.c'; then $(CYGPATH_W) 'intern/hamx.c'; else $(CYGPATH_W) '$(srcdir)/intern/hamx.c'; fi`

hamx.lo: intern/hamx.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hamx.lo -MD -MP -MF "$(DEPDIR)/hamx.Tpo" \
	  -c -o hamx.lo `test -f 'intern/hamx.c' || echo '$(srcdir)/'`intern/hamx.c; \
	then mv -f "$(DEPDIR)/hamx.Tpo" "$(DEPDIR)/hamx.Plo"; \
	else rm -f "$(DEPDIR)/hamx.Tpo"; exit 1; \
	fi
#	source='intern/hamx.c' object='hamx.lo' libtool=yes \
#	depfile='$(DEPDIR)/hamx.Plo' tmpdepfile='$(DEPDIR)/hamx.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hamx.lo `test -f 'intern/hamx.c' || echo '$(srcdir)/'`intern/hamx.c

iff.o: intern/iff.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iff.o -MD -MP -MF "$(DEPDIR)/iff.Tpo" \
	  -c -o iff.o `test -f 'intern/iff.c' || echo '$(srcdir)/'`intern/iff.c; \
	then mv -f "$(DEPDIR)/iff.Tpo" "$(DEPDIR)/iff.Po"; \
	else rm -f "$(DEPDIR)/iff.Tpo"; exit 1; \
	fi
#	source='intern/iff.c' object='iff.o' libtool=no \
#	depfile='$(DEPDIR)/iff.Po' tmpdepfile='$(DEPDIR)/iff.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iff.o `test -f 'intern/iff.c' || echo '$(srcdir)/'`intern/iff.c

iff.obj: intern/iff.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iff.obj -MD -MP -MF "$(DEPDIR)/iff.Tpo" \
	  -c -o iff.obj `if test -f 'intern/iff.c'; then $(CYGPATH_W) 'intern/iff.c'; else $(CYGPATH_W) '$(srcdir)/intern/iff.c'; fi`; \
	then mv -f "$(DEPDIR)/iff.Tpo" "$(DEPDIR)/iff.Po"; \
	else rm -f "$(DEPDIR)/iff.Tpo"; exit 1; \
	fi
#	source='intern/iff.c' object='iff.obj' libtool=no \
#	depfile='$(DEPDIR)/iff.Po' tmpdepfile='$(DEPDIR)/iff.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iff.obj `if test -f 'intern/iff.c'; then $(CYGPATH_W) 'intern/iff.c'; else $(CYGPATH_W) '$(srcdir)/intern/iff.c'; fi`

iff.lo: intern/iff.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iff.lo -MD -MP -MF "$(DEPDIR)/iff.Tpo" \
	  -c -o iff.lo `test -f 'intern/iff.c' || echo '$(srcdir)/'`intern/iff.c; \
	then mv -f "$(DEPDIR)/iff.Tpo" "$(DEPDIR)/iff.Plo"; \
	else rm -f "$(DEPDIR)/iff.Tpo"; exit 1; \
	fi
#	source='intern/iff.c' object='iff.lo' libtool=yes \
#	depfile='$(DEPDIR)/iff.Plo' tmpdepfile='$(DEPDIR)/iff.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iff.lo `test -f 'intern/iff.c' || echo '$(srcdir)/'`intern/iff.c

imageprocess.o: intern/imageprocess.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT imageprocess.o -MD -MP -MF "$(DEPDIR)/imageprocess.Tpo" \
	  -c -o imageprocess.o `test -f 'intern/imageprocess.c' || echo '$(srcdir)/'`intern/imageprocess.c; \
	then mv -f "$(DEPDIR)/imageprocess.Tpo" "$(DEPDIR)/imageprocess.Po"; \
	else rm -f "$(DEPDIR)/imageprocess.Tpo"; exit 1; \
	fi
#	source='intern/imageprocess.c' object='imageprocess.o' libtool=no \
#	depfile='$(DEPDIR)/imageprocess.Po' tmpdepfile='$(DEPDIR)/imageprocess.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o imageprocess.o `test -f 'intern/imageprocess.c' || echo '$(srcdir)/'`intern/imageprocess.c

imageprocess.obj: intern/imageprocess.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT imageprocess.obj -MD -MP -MF "$(DEPDIR)/imageprocess.Tpo" \
	  -c -o imageprocess.obj `if test -f 'intern/imageprocess.c'; then $(CYGPATH_W) 'intern/imageprocess.c'; else $(CYGPATH_W) '$(srcdir)/intern/imageprocess.c'; fi`; \
	then mv -f "$(DEPDIR)/imageprocess.Tpo" "$(DEPDIR)/imageprocess.Po"; \
	else rm -f "$(DEPDIR)/imageprocess.Tpo"; exit 1; \
	fi
#	source='intern/imageprocess.c' object='imageprocess.obj' libtool=no \
#	depfile='$(DEPDIR)/imageprocess.Po' tmpdepfile='$(DEPDIR)/imageprocess.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o imageprocess.obj `if test -f 'intern/imageprocess.c'; then $(CYGPATH_W) 'intern/imageprocess.c'; else $(CYGPATH_W) '$(srcdir)/intern/imageprocess.c'; fi`

imageprocess.lo: intern/imageprocess.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT imageprocess.lo -MD -MP -MF "$(DEPDIR)/imageprocess.Tpo" \
	  -c -o imageprocess.lo `test -f 'intern/imageprocess.c' || echo '$(srcdir)/'`intern/imageprocess.c; \
	then mv -f "$(DEPDIR)/imageprocess.Tpo" "$(DEPDIR)/imageprocess.Plo"; \
	else rm -f "$(DEPDIR)/imageprocess.Tpo"; exit 1; \
	fi
#	source='intern/imageprocess.c' object='imageprocess.lo' libtool=yes \
#	depfile='$(DEPDIR)/imageprocess.Plo' tmpdepfile='$(DEPDIR)/imageprocess.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o imageprocess.lo `test -f 'intern/imageprocess.c' || echo '$(srcdir)/'`intern/imageprocess.c

iris.o: intern/iris.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iris.o -MD -MP -MF "$(DEPDIR)/iris.Tpo" \
	  -c -o iris.o `test -f 'intern/iris.c' || echo '$(srcdir)/'`intern/iris.c; \
	then mv -f "$(DEPDIR)/iris.Tpo" "$(DEPDIR)/iris.Po"; \
	else rm -f "$(DEPDIR)/iris.Tpo"; exit 1; \
	fi
#	source='intern/iris.c' object='iris.o' libtool=no \
#	depfile='$(DEPDIR)/iris.Po' tmpdepfile='$(DEPDIR)/iris.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iris.o `test -f 'intern/iris.c' || echo '$(srcdir)/'`intern/iris.c

iris.obj: intern/iris.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iris.obj -MD -MP -MF "$(DEPDIR)/iris.Tpo" \
	  -c -o iris.obj `if test -f 'intern/iris.c'; then $(CYGPATH_W) 'intern/iris.c'; else $(CYGPATH_W) '$(srcdir)/intern/iris.c'; fi`; \
	then mv -f "$(DEPDIR)/iris.Tpo" "$(DEPDIR)/iris.Po"; \
	else rm -f "$(DEPDIR)/iris.Tpo"; exit 1; \
	fi
#	source='intern/iris.c' object='iris.obj' libtool=no \
#	depfile='$(DEPDIR)/iris.Po' tmpdepfile='$(DEPDIR)/iris.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iris.obj `if test -f 'intern/iris.c'; then $(CYGPATH_W) 'intern/iris.c'; else $(CYGPATH_W) '$(srcdir)/intern/iris.c'; fi`

iris.lo: intern/iris.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iris.lo -MD -MP -MF "$(DEPDIR)/iris.Tpo" \
	  -c -o iris.lo `test -f 'intern/iris.c' || echo '$(srcdir)/'`intern/iris.c; \
	then mv -f "$(DEPDIR)/iris.Tpo" "$(DEPDIR)/iris.Plo"; \
	else rm -f "$(DEPDIR)/iris.Tpo"; exit 1; \
	fi
#	source='intern/iris.c' object='iris.lo' libtool=yes \
#	depfile='$(DEPDIR)/iris.Plo' tmpdepfile='$(DEPDIR)/iris.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iris.lo `test -f 'intern/iris.c' || echo '$(srcdir)/'`intern/iris.c

jpeg.o: intern/jpeg.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jpeg.o -MD -MP -MF "$(DEPDIR)/jpeg.Tpo" \
	  -c -o jpeg.o `test -f 'intern/jpeg.c' || echo '$(srcdir)/'`intern/jpeg.c; \
	then mv -f "$(DEPDIR)/jpeg.Tpo" "$(DEPDIR)/jpeg.Po"; \
	else rm -f "$(DEPDIR)/jpeg.Tpo"; exit 1; \
	fi
#	source='intern/jpeg.c' object='jpeg.o' libtool=no \
#	depfile='$(DEPDIR)/jpeg.Po' tmpdepfile='$(DEPDIR)/jpeg.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jpeg.o `test -f 'intern/jpeg.c' || echo '$(srcdir)/'`intern/jpeg.c

jpeg.obj: intern/jpeg.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jpeg.obj -MD -MP -MF "$(DEPDIR)/jpeg.Tpo" \
	  -c -o jpeg.obj `if test -f 'intern/jpeg.c'; then $(CYGPATH_W) 'intern/jpeg.c'; else $(CYGPATH_W) '$(srcdir)/intern/jpeg.c'; fi`; \
	then mv -f "$(DEPDIR)/jpeg.Tpo" "$(DEPDIR)/jpeg.Po"; \
	else rm -f "$(DEPDIR)/jpeg.Tpo"; exit 1; \
	fi
#	source='intern/jpeg.c' object='jpeg.obj' libtool=no \
#	depfile='$(DEPDIR)/jpeg.Po' tmpdepfile='$(DEPDIR)/jpeg.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jpeg.obj `if test -f 'intern/jpeg.c'; then $(CYGPATH_W) 'intern/jpeg.c'; else $(CYGPATH_W) '$(srcdir)/intern/jpeg.c'; fi`

jpeg.lo: intern/jpeg.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jpeg.lo -MD -MP -MF "$(DEPDIR)/jpeg.Tpo" \
	  -c -o jpeg.lo `test -f 'intern/jpeg.c' || echo '$(srcdir)/'`intern/jpeg.c; \
	then mv -f "$(DEPDIR)/jpeg.Tpo" "$(DEPDIR)/jpeg.Plo"; \
	else rm -f "$(DEPDIR)/jpeg.Tpo"; exit 1; \
	fi
#	source='intern/jpeg.c' object='jpeg.lo' libtool=yes \
#	depfile='$(DEPDIR)/jpeg.Plo' tmpdepfile='$(DEPDIR)/jpeg.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jpeg.lo `test -f 'intern/jpeg.c' || echo '$(srcdir)/'`intern/jpeg.c

png.o: intern/png.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT png.o -MD -MP -MF "$(DEPDIR)/png.Tpo" \
	  -c -o png.o `test -f 'intern/png.c' || echo '$(srcdir)/'`intern/png.c; \
	then mv -f "$(DEPDIR)/png.Tpo" "$(DEPDIR)/png.Po"; \
	else rm -f "$(DEPDIR)/png.Tpo"; exit 1; \
	fi
#	source='intern/png.c' object='png.o' libtool=no \
#	depfile='$(DEPDIR)/png.Po' tmpdepfile='$(DEPDIR)/png.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o png.o `test -f 'intern/png.c' || echo '$(srcdir)/'`intern/png.c

png.obj: intern/png.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT png.obj -MD -MP -MF "$(DEPDIR)/png.Tpo" \
	  -c -o png.obj `if test -f 'intern/png.c'; then $(CYGPATH_W) 'intern/png.c'; else $(CYGPATH_W) '$(srcdir)/intern/png.c'; fi`; \
	then mv -f "$(DEPDIR)/png.Tpo" "$(DEPDIR)/png.Po"; \
	else rm -f "$(DEPDIR)/png.Tpo"; exit 1; \
	fi
#	source='intern/png.c' object='png.obj' libtool=no \
#	depfile='$(DEPDIR)/png.Po' tmpdepfile='$(DEPDIR)/png.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o png.obj `if test -f 'intern/png.c'; then $(CYGPATH_W) 'intern/png.c'; else $(CYGPATH_W) '$(srcdir)/intern/png.c'; fi`

png.lo: intern/png.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT png.lo -MD -MP -MF "$(DEPDIR)/png.Tpo" \
	  -c -o png.lo `test -f 'intern/png.c' || echo '$(srcdir)/'`intern/png.c; \
	then mv -f "$(DEPDIR)/png.Tpo" "$(DEPDIR)/png.Plo"; \
	else rm -f "$(DEPDIR)/png.Tpo"; exit 1; \
	fi
#	source='intern/png.c' object='png.lo' libtool=yes \
#	depfile='$(DEPDIR)/png.Plo' tmpdepfile='$(DEPDIR)/png.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o png.lo `test -f 'intern/png.c' || echo '$(srcdir)/'`intern/png.c

readimage.o: intern/readimage.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT readimage.o -MD -MP -MF "$(DEPDIR)/readimage.Tpo" \
	  -c -o readimage.o `test -f 'intern/readimage.c' || echo '$(srcdir)/'`intern/readimage.c; \
	then mv -f "$(DEPDIR)/readimage.Tpo" "$(DEPDIR)/readimage.Po"; \
	else rm -f "$(DEPDIR)/readimage.Tpo"; exit 1; \
	fi
#	source='intern/readimage.c' object='readimage.o' libtool=no \
#	depfile='$(DEPDIR)/readimage.Po' tmpdepfile='$(DEPDIR)/readimage.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o readimage.o `test -f 'intern/readimage.c' || echo '$(srcdir)/'`intern/readimage.c

readimage.obj: intern/readimage.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT readimage.obj -MD -MP -MF "$(DEPDIR)/readimage.Tpo" \
	  -c -o readimage.obj `if test -f 'intern/readimage.c'; then $(CYGPATH_W) 'intern/readimage.c'; else $(CYGPATH_W) '$(srcdir)/intern/readimage.c'; fi`; \
	then mv -f "$(DEPDIR)/readimage.Tpo" "$(DEPDIR)/readimage.Po"; \
	else rm -f "$(DEPDIR)/readimage.Tpo"; exit 1; \
	fi
#	source='intern/readimage.c' object='readimage.obj' libtool=no \
#	depfile='$(DEPDIR)/readimage.Po' tmpdepfile='$(DEPDIR)/readimage.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o readimage.obj `if test -f 'intern/readimage.c'; then $(CYGPATH_W) 'intern/readimage.c'; else $(CYGPATH_W) '$(srcdir)/intern/readimage.c'; fi`

readimage.lo: intern/readimage.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT readimage.lo -MD -MP -MF "$(DEPDIR)/readimage.Tpo" \
	  -c -o readimage.lo `test -f 'intern/readimage.c' || echo '$(srcdir)/'`intern/readimage.c; \
	then mv -f "$(DEPDIR)/readimage.Tpo" "$(DEPDIR)/readimage.Plo"; \
	else rm -f "$(DEPDIR)/readimage.Tpo"; exit 1; \
	fi
#	source='intern/readimage.c' object='readimage.lo' libtool=yes \
#	depfile='$(DEPDIR)/readimage.Plo' tmpdepfile='$(DEPDIR)/readimage.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o readimage.lo `test -f 'intern/readimage.c' || echo '$(srcdir)/'`intern/readimage.c

rectop.o: intern/rectop.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rectop.o -MD -MP -MF "$(DEPDIR)/rectop.Tpo" \
	  -c -o rectop.o `test -f 'intern/rectop.c' || echo '$(srcdir)/'`intern/rectop.c; \
	then mv -f "$(DEPDIR)/rectop.Tpo" "$(DEPDIR)/rectop.Po"; \
	else rm -f "$(DEPDIR)/rectop.Tpo"; exit 1; \
	fi
#	source='intern/rectop.c' object='rectop.o' libtool=no \
#	depfile='$(DEPDIR)/rectop.Po' tmpdepfile='$(DEPDIR)/rectop.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rectop.o `test -f 'intern/rectop.c' || echo '$(srcdir)/'`intern/rectop.c

rectop.obj: intern/rectop.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rectop.obj -MD -MP -MF "$(DEPDIR)/rectop.Tpo" \
	  -c -o rectop.obj `if test -f 'intern/rectop.c'; then $(CYGPATH_W) 'intern/rectop.c'; else $(CYGPATH_W) '$(srcdir)/intern/rectop.c'; fi`; \
	then mv -f "$(DEPDIR)/rectop.Tpo" "$(DEPDIR)/rectop.Po"; \
	else rm -f "$(DEPDIR)/rectop.Tpo"; exit 1; \
	fi
#	source='intern/rectop.c' object='rectop.obj' libtool=no \
#	depfile='$(DEPDIR)/rectop.Po' tmpdepfile='$(DEPDIR)/rectop.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rectop.obj `if test -f 'intern/rectop.c'; then $(CYGPATH_W) 'intern/rectop.c'; else $(CYGPATH_W) '$(srcdir)/intern/rectop.c'; fi`

rectop.lo: intern/rectop.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rectop.lo -MD -MP -MF "$(DEPDIR)/rectop.Tpo" \
	  -c -o rectop.lo `test -f 'intern/rectop.c' || echo '$(srcdir)/'`intern/rectop.c; \
	then mv -f "$(DEPDIR)/rectop.Tpo" "$(DEPDIR)/rectop.Plo"; \
	else rm -f "$(DEPDIR)/rectop.Tpo"; exit 1; \
	fi
#	source='intern/rectop.c' object='rectop.lo' libtool=yes \
#	depfile='$(DEPDIR)/rectop.Plo' tmpdepfile='$(DEPDIR)/rectop.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rectop.lo `test -f 'intern/rectop.c' || echo '$(srcdir)/'`intern/rectop.c

rotate.o: intern/rotate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rotate.o -MD -MP -MF "$(DEPDIR)/rotate.Tpo" \
	  -c -o rotate.o `test -f 'intern/rotate.c' || echo '$(srcdir)/'`intern/rotate.c; \
	then mv -f "$(DEPDIR)/rotate.Tpo" "$(DEPDIR)/rotate.Po"; \
	else rm -f "$(DEPDIR)/rotate.Tpo"; exit 1; \
	fi
#	source='intern/rotate.c' object='rotate.o' libtool=no \
#	depfile='$(DEPDIR)/rotate.Po' tmpdepfile='$(DEPDIR)/rotate.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rotate.o `test -f 'intern/rotate.c' || echo '$(srcdir)/'`intern/rotate.c

rotate.obj: intern/rotate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rotate.obj -MD -MP -MF "$(DEPDIR)/rotate.Tpo" \
	  -c -o rotate.obj `if test -f 'intern/rotate.c'; then $(CYGPATH_W) 'intern/rotate.c'; else $(CYGPATH_W) '$(srcdir)/intern/rotate.c'; fi`; \
	then mv -f "$(DEPDIR)/rotate.Tpo" "$(DEPDIR)/rotate.Po"; \
	else rm -f "$(DEPDIR)/rotate.Tpo"; exit 1; \
	fi
#	source='intern/rotate.c' object='rotate.obj' libtool=no \
#	depfile='$(DEPDIR)/rotate.Po' tmpdepfile='$(DEPDIR)/rotate.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rotate.obj `if test -f 'intern/rotate.c'; then $(CYGPATH_W) 'intern/rotate.c'; else $(CYGPATH_W) '$(srcdir)/intern/rotate.c'; fi`

rotate.lo: intern/rotate.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rotate.lo -MD -MP -MF "$(DEPDIR)/rotate.Tpo" \
	  -c -o rotate.lo `test -f 'intern/rotate.c' || echo '$(srcdir)/'`intern/rotate.c; \
	then mv -f "$(DEPDIR)/rotate.Tpo" "$(DEPDIR)/rotate.Plo"; \
	else rm -f "$(DEPDIR)/rotate.Tpo"; exit 1; \
	fi
#	source='intern/rotate.c' object='rotate.lo' libtool=yes \
#	depfile='$(DEPDIR)/rotate.Plo' tmpdepfile='$(DEPDIR)/rotate.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rotate.lo `test -f 'intern/rotate.c' || echo '$(srcdir)/'`intern/rotate.c

scaling.o: intern/scaling.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scaling.o -MD -MP -MF "$(DEPDIR)/scaling.Tpo" \
	  -c -o scaling.o `test -f 'intern/scaling.c' || echo '$(srcdir)/'`intern/scaling.c; \
	then mv -f "$(DEPDIR)/scaling.Tpo" "$(DEPDIR)/scaling.Po"; \
	else rm -f "$(DEPDIR)/scaling.Tpo"; exit 1; \
	fi
#	source='intern/scaling.c' object='scaling.o' libtool=no \
#	depfile='$(DEPDIR)/scaling.Po' tmpdepfile='$(DEPDIR)/scaling.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scaling.o `test -f 'intern/scaling.c' || echo '$(srcdir)/'`intern/scaling.c

scaling.obj: intern/scaling.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scaling.obj -MD -MP -MF "$(DEPDIR)/scaling.Tpo" \
	  -c -o scaling.obj `if test -f 'intern/scaling.c'; then $(CYGPATH_W) 'intern/scaling.c'; else $(CYGPATH_W) '$(srcdir)/intern/scaling.c'; fi`; \
	then mv -f "$(DEPDIR)/scaling.Tpo" "$(DEPDIR)/scaling.Po"; \
	else rm -f "$(DEPDIR)/scaling.Tpo"; exit 1; \
	fi
#	source='intern/scaling.c' object='scaling.obj' libtool=no \
#	depfile='$(DEPDIR)/scaling.Po' tmpdepfile='$(DEPDIR)/scaling.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scaling.obj `if test -f 'intern/scaling.c'; then $(CYGPATH_W) 'intern/scaling.c'; else $(CYGPATH_W) '$(srcdir)/intern/scaling.c'; fi`

scaling.lo: intern/scaling.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scaling.lo -MD -MP -MF "$(DEPDIR)/scaling.Tpo" \
	  -c -o scaling.lo `test -f 'intern/scaling.c' || echo '$(srcdir)/'`intern/scaling.c; \
	then mv -f "$(DEPDIR)/scaling.Tpo" "$(DEPDIR)/scaling.Plo"; \
	else rm -f "$(DEPDIR)/scaling.Tpo"; exit 1; \
	fi
#	source='intern/scaling.c' object='scaling.lo' libtool=yes \
#	depfile='$(DEPDIR)/scaling.Plo' tmpdepfile='$(DEPDIR)/scaling.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scaling.lo `test -f 'intern/scaling.c' || echo '$(srcdir)/'`intern/scaling.c

targa.o: intern/targa.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT targa.o -MD -MP -MF "$(DEPDIR)/targa.Tpo" \
	  -c -o targa.o `test -f 'intern/targa.c' || echo '$(srcdir)/'`intern/targa.c; \
	then mv -f "$(DEPDIR)/targa.Tpo" "$(DEPDIR)/targa.Po"; \
	else rm -f "$(DEPDIR)/targa.Tpo"; exit 1; \
	fi
#	source='intern/targa.c' object='targa.o' libtool=no \
#	depfile='$(DEPDIR)/targa.Po' tmpdepfile='$(DEPDIR)/targa.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o targa.o `test -f 'intern/targa.c' || echo '$(srcdir)/'`intern/targa.c

targa.obj: intern/targa.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT targa.obj -MD -MP -MF "$(DEPDIR)/targa.Tpo" \
	  -c -o targa.obj `if test -f 'intern/targa.c'; then $(CYGPATH_W) 'intern/targa.c'; else $(CYGPATH_W) '$(srcdir)/intern/targa.c'; fi`; \
	then mv -f "$(DEPDIR)/targa.Tpo" "$(DEPDIR)/targa.Po"; \
	else rm -f "$(DEPDIR)/targa.Tpo"; exit 1; \
	fi
#	source='intern/targa.c' object='targa.obj' libtool=no \
#	depfile='$(DEPDIR)/targa.Po' tmpdepfile='$(DEPDIR)/targa.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o targa.obj `if test -f 'intern/targa.c'; then $(CYGPATH_W) 'intern/targa.c'; else $(CYGPATH_W) '$(srcdir)/intern/targa.c'; fi`

targa.lo: intern/targa.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT targa.lo -MD -MP -MF "$(DEPDIR)/targa.Tpo" \
	  -c -o targa.lo `test -f 'intern/targa.c' || echo '$(srcdir)/'`intern/targa.c; \
	then mv -f "$(DEPDIR)/targa.Tpo" "$(DEPDIR)/targa.Plo"; \
	else rm -f "$(DEPDIR)/targa.Tpo"; exit 1; \
	fi
#	source='intern/targa.c' object='targa.lo' libtool=yes \
#	depfile='$(DEPDIR)/targa.Plo' tmpdepfile='$(DEPDIR)/targa.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o targa.lo `test -f 'intern/targa.c' || echo '$(srcdir)/'`intern/targa.c

util.o: intern/util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT util.o -MD -MP -MF "$(DEPDIR)/util.Tpo" \
	  -c -o util.o `test -f 'intern/util.c' || echo '$(srcdir)/'`intern/util.c; \
	then mv -f "$(DEPDIR)/util.Tpo" "$(DEPDIR)/util.Po"; \
	else rm -f "$(DEPDIR)/util.Tpo"; exit 1; \
	fi
#	source='intern/util.c' object='util.o' libtool=no \
#	depfile='$(DEPDIR)/util.Po' tmpdepfile='$(DEPDIR)/util.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o util.o `test -f 'intern/util.c' || echo '$(srcdir)/'`intern/util.c

util.obj: intern/util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT util.obj -MD -MP -MF "$(DEPDIR)/util.Tpo" \
	  -c -o util.obj `if test -f 'intern/util.c'; then $(CYGPATH_W) 'intern/util.c'; else $(CYGPATH_W) '$(srcdir)/intern/util.c'; fi`; \
	then mv -f "$(DEPDIR)/util.Tpo" "$(DEPDIR)/util.Po"; \
	else rm -f "$(DEPDIR)/util.Tpo"; exit 1; \
	fi
#	source='intern/util.c' object='util.obj' libtool=no \
#	depfile='$(DEPDIR)/util.Po' tmpdepfile='$(DEPDIR)/util.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o util.obj `if test -f 'intern/util.c'; then $(CYGPATH_W) 'intern/util.c'; else $(CYGPATH_W) '$(srcdir)/intern/util.c'; fi`

util.lo: intern/util.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT util.lo -MD -MP -MF "$(DEPDIR)/util.Tpo" \
	  -c -o util.lo `test -f 'intern/util.c' || echo '$(srcdir)/'`intern/util.c; \
	then mv -f "$(DEPDIR)/util.Tpo" "$(DEPDIR)/util.Plo"; \
	else rm -f "$(DEPDIR)/util.Tpo"; exit 1; \
	fi
#	source='intern/util.c' object='util.lo' libtool=yes \
#	depfile='$(DEPDIR)/util.Plo' tmpdepfile='$(DEPDIR)/util.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o util.lo `test -f 'intern/util.c' || echo '$(srcdir)/'`intern/util.c

writeimage.o: intern/writeimage.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT writeimage.o -MD -MP -MF "$(DEPDIR)/writeimage.Tpo" \
	  -c -o writeimage.o `test -f 'intern/writeimage.c' || echo '$(srcdir)/'`intern/writeimage.c; \
	then mv -f "$(DEPDIR)/writeimage.Tpo" "$(DEPDIR)/writeimage.Po"; \
	else rm -f "$(DEPDIR)/writeimage.Tpo"; exit 1; \
	fi
#	source='intern/writeimage.c' object='writeimage.o' libtool=no \
#	depfile='$(DEPDIR)/writeimage.Po' tmpdepfile='$(DEPDIR)/writeimage.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o writeimage.o `test -f 'intern/writeimage.c' || echo '$(srcdir)/'`intern/writeimage.c

writeimage.obj: intern/writeimage.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT writeimage.obj -MD -MP -MF "$(DEPDIR)/writeimage.Tpo" \
	  -c -o writeimage.obj `if test -f 'intern/writeimage.c'; then $(CYGPATH_W) 'intern/writeimage.c'; else $(CYGPATH_W) '$(srcdir)/intern/writeimage.c'; fi`; \
	then mv -f "$(DEPDIR)/writeimage.Tpo" "$(DEPDIR)/writeimage.Po"; \
	else rm -f "$(DEPDIR)/writeimage.Tpo"; exit 1; \
	fi
#	source='intern/writeimage.c' object='writeimage.obj' libtool=no \
#	depfile='$(DEPDIR)/writeimage.Po' tmpdepfile='$(DEPDIR)/writeimage.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o writeimage.obj `if test -f 'intern/writeimage.c'; then $(CYGPATH_W) 'intern/writeimage.c'; else $(CYGPATH_W) '$(srcdir)/intern/writeimage.c'; fi`

writeimage.lo: intern/writeimage.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT writeimage.lo -MD -MP -MF "$(DEPDIR)/writeimage.Tpo" \
	  -c -o writeimage.lo `test -f 'intern/writeimage.c' || echo '$(srcdir)/'`intern/writeimage.c; \
	then mv -f "$(DEPDIR)/writeimage.Tpo" "$(DEPDIR)/writeimage.Plo"; \
	else rm -f "$(DEPDIR)/writeimage.Tpo"; exit 1; \
	fi
#	source='intern/writeimage.c' object='writeimage.lo' libtool=yes \
#	depfile='$(DEPDIR)/writeimage.Plo' tmpdepfile='$(DEPDIR)/writeimage.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o writeimage.lo `test -f 'intern/writeimage.c' || echo '$(srcdir)/'`intern/writeimage.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/intern
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
