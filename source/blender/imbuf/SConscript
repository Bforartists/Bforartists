#!/usr/bin/python
import os
Import ('env')

sources = env.Glob('intern/*.c')

incs = '. ../makesdna ../makesrna #/intern/guardedalloc #/intern/memutil ../blenlib'
incs += ' ../avi ../blenkernel ../blenloader'
incs += ' #/intern/ffmpeg'

incs += ' ' + env['BF_JPEG_INC']
incs += ' ' + env['BF_PNG_INC']
incs += ' ' + env['BF_TIFF_INC']
incs += ' ' + env['BF_ZLIB_INC']

defs = []

if env['OURPLATFORM'] in ('win32-vc', 'win32-mingw', 'linuxcross', 'win64-vc', 'win64-mingw'):
    incs += ' ' + env['BF_PTHREADS_INC']
    incs += ' ../../../intern/utfconv'

if env['WITH_BF_OPENEXR']:
    defs.append('WITH_OPENEXR')
else:
    sources.append(os.path.join('intern', 'openexr', 'openexr_stub.cpp'))

if env['WITH_BF_TIFF']:
    defs.append('WITH_TIFF')
else:
	sources.remove(os.path.join('intern', 'tiff.c'))

if env['WITH_BF_DDS']:
    defs.append('WITH_DDS')

if env['WITH_BF_CINEON']:
    defs.append('WITH_CINEON')

if env['WITH_BF_HDR']:
    defs.append('WITH_HDR')
else:
	sources.remove(os.path.join('intern', 'radiance_hdr.c'))

if env['WITH_BF_FFMPEG']:
    defs.append('WITH_FFMPEG')
    incs += ' ' + env['BF_FFMPEG_INC']

if env['WITH_BF_OPENJPEG']:
    defs.append('WITH_OPENJPEG')
    incs += ' ' + env['BF_OPENJPEG_INC']
else:
	sources.remove(os.path.join('intern', 'jp2.c'))

if env['WITH_BF_REDCODE']:
    defs.append('WITH_REDCODE')
    incs += ' ' + env['BF_REDCODE_INC']

if env['WITH_BF_QUICKTIME']:
    incs += ' ../quicktime ' + env['BF_QUICKTIME_INC']
    defs.append('WITH_QUICKTIME')

if env['WITH_BF_OCIO']:
    defs.append('WITH_OCIO')
    incs += ' #intern/opencolorio'

env.BlenderLib ( libname = 'bf_imbuf', sources = sources, includes = Split(incs), defines = defs, libtype=['core','player'], priority = [185,115] )
