#!/usr/bin/python
Import ('env')

sources = env.Glob('intern/*.c')
cmpsources = env.Glob('composite/*.c') + env.Glob('composite/nodes/*.c')
shdsources = env.Glob('shader/*.c') + env.Glob('shader/nodes/*.c')
texsources = env.Glob('texture/*.c') + env.Glob('texture/nodes/*.c')
incs = '. ./intern '
incs += './composite ./shader ./texture '
incs += '#/intern/guardedalloc ../editors/include ../blenlib ../makesdna'
incs += ' ../render/extern/include ../makesrna '
incs += ' ../imbuf ../avi '
incs += ' ../blenloader'
incs += ' ../blenfont ../blenkernel ../renderconverter '
incs += ' ../gpu #/extern/glew/include '

incs += ' ' + env['BF_OPENGL_INC']
incs += ' ' + env['BF_ZLIB_INC']

defs = [] 

if env['WITH_BF_PYTHON']:
    incs += ' ' + env['BF_PYTHON_INC']
    incs += ' ../python'
    defs.append('WITH_PYTHON')
    if env['BF_DEBUG']:
        defs.append('_DEBUG')

if env['WITH_BF_INTERNATIONAL']:
    defs.append('WITH_INTERNATIONAL')

if env['OURPLATFORM'] == 'linux':
    cflags='-pthread'
    incs += ' ../../../extern/binreloc/include'

if env['OURPLATFORM'] in ('win32-vc', 'win32-mingw', 'linuxcross', 'win64-vc', 'win64-mingw'):
    incs += ' ' + env['BF_PTHREADS_INC']
    
if env['WITH_BF_COMPOSITOR']:
    incs += ' ../compositor '
    defs.append("WITH_COMPOSITOR")

# TODO, make optional
defs.append("WITH_COMPOSITOR_LEGACY")

env.BlenderLib ( libname = 'bf_nodes', sources = sources, includes = Split(incs), defines = defs, libtype=['core','player'], priority = [190,105] )
env.BlenderLib ( libname = 'bf_cmpnodes', sources = cmpsources, includes = Split(incs), defines = defs, libtype=['core','player'], priority = [175,101] )
env.BlenderLib ( libname = 'bf_shdnodes', sources = shdsources, includes = Split(incs), defines = defs, libtype=['core','player'], priority = [175,101] )
env.BlenderLib ( libname = 'bf_texnodes', sources = texsources, includes = Split(incs), defines = defs, libtype=['core','player'], priority = [175,101] )
