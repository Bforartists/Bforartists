#!/usr/bin/env python
#
# ***** BEGIN GPL LICENSE BLOCK *****
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# The Original Code is Copyright (C) 2006, Blender Foundation
# All rights reserved.
#
# The Original Code is: all of this file.
#
# Contributor(s): Nathan Letwory.
#
# ***** END GPL LICENSE BLOCK *****

Import ('env')

sources = env.Glob('intern/*.c')
cmpsources = env.Glob('composite/*.c') + env.Glob('composite/nodes/*.c')
shdsources = env.Glob('shader/*.c') + env.Glob('shader/nodes/*.c')
texsources = env.Glob('texture/*.c') + env.Glob('texture/nodes/*.c')

incs = [
    '.',
    './composite',
    './intern',
    './shader',
    './texture',
    '#/intern/guardedalloc',
    '#/extern/glew/include',
    '../avi',
    '../blenfont',
    '../blenkernel',
    '../blenlib',
    '../blenloader',
    '../editors/include',
    '../gpu',
    '../imbuf',
    '../makesdna',
    '../makesrna',
    '../render/extern/include',
    '../renderconverter',
    env['BF_OPENGL_INC'],
    env['BF_ZLIB_INC'],
    ]
incs = ' '.join(incs)

defs = [] 

if env['WITH_BF_PYTHON']:
    incs += ' ' + env['BF_PYTHON_INC']
    incs += ' ../python'
    defs.append('WITH_PYTHON')
    if env['BF_DEBUG']:
        defs.append('_DEBUG')

if env['WITH_BF_INTERNATIONAL']:
    defs.append('WITH_INTERNATIONAL')

if env['OURPLATFORM'] == 'linux':
    cflags='-pthread'
    incs += ' ../../../extern/binreloc/include'

if env['OURPLATFORM'] in ('win32-vc', 'win32-mingw', 'linuxcross', 'win64-vc', 'win64-mingw'):
    incs += ' ' + env['BF_PTHREADS_INC']
    
if env['WITH_BF_COMPOSITOR']:
    incs += ' ../compositor '
    defs.append("WITH_COMPOSITOR")

env.BlenderLib ( libname = 'bf_nodes', sources = sources, includes = Split(incs), defines = defs, libtype=['core','player'], priority = [190,105] )
env.BlenderLib ( libname = 'bf_cmpnodes', sources = cmpsources, includes = Split(incs), defines = defs, libtype=['core','player'], priority = [175,101] )
env.BlenderLib ( libname = 'bf_shdnodes', sources = shdsources, includes = Split(incs), defines = defs, libtype=['core','player'], priority = [175,101] )
env.BlenderLib ( libname = 'bf_texnodes', sources = texsources, includes = Split(incs), defines = defs, libtype=['core','player'], priority = [175,101] )
