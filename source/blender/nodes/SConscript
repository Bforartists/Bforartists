#!/usr/bin/python
Import ('env')

sources = env.Glob('intern/*.c')
cmpsources = env.Glob('intern/CMP_nodes/*.c')
shdsources = env.Glob('intern/SHD_nodes/*.c')
texsources = env.Glob('intern/TEX_nodes/*.c')

incs = '. ./intern '
incs += '#/intern/guardedalloc ../editors/include ../blenlib ../makesdna'
incs += ' ../render/extern/include ../makesrna '
incs += ' ../imbuf ../avi '
incs += ' ../blenloader'
incs += ' ../blenkernel ../renderconverter '
incs += ' ../gpu #/extern/glew/include '

incs += ' ' + env['BF_OPENGL_INC']
incs += ' ' + env['BF_ZLIB_INC']

defs = [] 

if env['WITH_BF_PYTHON']:
	incs += ' ' + env['BF_PYTHON_INC']
	incs += ' ../python'
	if env['BF_DEBUG']:
		defs.append('_DEBUG')
else:
	defs.append('DISABLE_PYTHON')

if env['WITH_BF_OPENEXR']:
	defs.append('WITH_OPENEXR')

if env['WITH_BF_FFMPEG']:
	defs.append('WITH_FFMPEG')
	incs += ' ' + env['BF_FFMPEG_INC']

if env['WITH_BF_QUICKTIME']:
	defs.append('WITH_QUICKTIME')
	incs += ' ' + env['BF_QUICKTIME_INC']

env.BlenderLib ( libname = 'bf_nodes', sources = sources, includes = Split(incs), defines = defs, libtype=['core'], priority = [190] )
env.BlenderLib ( libname = 'bf_cmpnodes', sources = cmpsources, includes = Split(incs), defines = defs, libtype=['core'], priority = [175] )
env.BlenderLib ( libname = 'bf_shdnodes', sources = shdsources, includes = Split(incs), defines = defs, libtype=['core'], priority = [175] )
env.BlenderLib ( libname = 'bf_texnodes', sources = texsources, includes = Split(incs), defines = defs, libtype=['core'], priority = [175] )
