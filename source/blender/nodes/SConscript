#!/usr/bin/python
Import ('env')

sources = env.Glob('intern/*.c')
cmpsources = env.Glob('intern/CMP_nodes/*.c')
shdsources = env.Glob('intern/SHD_nodes/*.c')
texsources = env.Glob('intern/TEX_nodes/*.c')

incs = '. ./intern '
incs += '#/intern/guardedalloc ../include ../blenlib ../makesdna'
incs += ' ../render/extern/include '
incs += ' ../imbuf ../avi '
incs += ' ../blenloader'
incs += ' ../blenkernel ../renderconverter '
incs += ' ../gpu #/extern/glew/include '

incs += ' ' + env['BF_OPENGL_INC']
incs += ' ' + env['BF_ZLIB_INC']

defs = ''

if env['WITH_BF_PYTHON']:
    incs += ' ' + env['BF_PYTHON_INC']
    incs += ' ../python'
else:
    defs += 'DISABLE_PYTHON'

if env['WITH_BF_INTERNATIONAL']:
    defs += ' WITH_FREETYPE2'

if env['WITH_BF_OPENEXR']:
    defs += ' WITH_OPENEXR'

if env['WITH_BF_FFMPEG']:
    defs += ' WITH_FFMPEG'
    incs += ' ' + env['BF_FFMPEG_INC']

if env['WITH_BF_QUICKTIME']:
    defs += ' WITH_QUICKTIME'
    incs += ' ' + env['BF_QUICKTIME_INC']

env.BlenderLib ( libname = 'bf_nodes', sources = sources, includes = Split(incs), defines = Split(defs), libtype=['intern', 'core', 'player'], priority = [200, 200, 400] )
env.BlenderLib ( libname = 'bf_cmpnodes', sources = cmpsources, includes = Split(incs), defines = Split(defs), libtype=['intern', 'core', 'player'], priority = [200, 175, 300] )
env.BlenderLib ( libname = 'bf_shdnodes', sources = shdsources, includes = Split(incs), defines = Split(defs), libtype=['intern', 'core', 'player'], priority = [200, 175, 300] )
env.BlenderLib ( libname = 'bf_texnodes', sources = texsources, includes = Split(incs), defines = Split(defs), libtype=['intern', 'core', 'player'], priority = [200, 175, 300] )
