/* SPDX-FileCopyrightText: 2023 Blender Authors
 *
 * SPDX-License-Identifier: GPL-2.0-or-later */

/** \file
 * \ingroup nodes
 */

/* intentionally no include guard */

/* Keep aligned args for readability. */
/* clang-format off */

/* Empty definitions for undefined macros to avoid warnings */
#ifndef DefNode
#define DefNode(Category, ID, DefFunc, EnumName, StructName, UIName, UIDesc)
#endif

/* WARNING! If you edit those strings, please do the same in relevant nodes files (under blender/nodes/...)! */

/*       Tree type       Node ID                  RNA def function        Enum name         Struct name       UI Name              UI Description */
DefNode(Node,            NODE_FRAME,               def_frame,              "FRAME",           Frame,             "Frame",              "Add a frame\nA frame allows to collect nodes together.\nUseful for organization when the re-usability of a node group is not required")
DefNode(Node,            NODE_GROUP,               def_group,              "GROUP",           Group,             "Group",              "Create a node group from the selected nodes")
DefNode(Node,            NODE_GROUP_INPUT,         def_group_input,        "GROUP_INPUT",     GroupInput,        "Group Input",        "Add a Group Input node\nExpose connected data from inside a node group as inputs to its interface")
DefNode(Node,            NODE_GROUP_OUTPUT,        def_group_output,       "GROUP_OUTPUT",    GroupOutput,       "Group Output",       "Add a Group Output node\nOutput data from inside of a node group")
DefNode(Node,            NODE_REROUTE,             0,                      "REROUTE",         Reroute,           "Reroute",            "Add a reroute point\nReroute points can be used to reroute connections\nSupports one input and multiple outputs")

DefNode(ShaderNode,     SH_NODE_RGB,             0,                      "RGB",            RGB,              "RGB",               "Add a RGB Shader node\nSet a color with a color picker")
DefNode(ShaderNode,     SH_NODE_VALUE,           0,                      "VALUE",          Value,            "Value",             "Add a Value Shader node\nUsed to Input numerical values to other nodes in the tree")
DefNode(ShaderNode,     SH_NODE_MIX_RGB_LEGACY,  def_mix_rgb,            "MIX_RGB",        MixRGB,           "MixRGB",            "Add a Mix RGB Shader node\nMixes images by working on the individual and corresponding pixels of the two input images")
DefNode(ShaderNode,     SH_NODE_VALTORGB,        def_colorramp,          "VALTORGB",       ValToRGB,         "Color Ramp",        "Add a Color Ramp Shader node\nMap values to colors with the use of a gradient")
DefNode(ShaderNode,     SH_NODE_RGBTOBW,         0,                      "RGBTOBW",        RGBToBW,          "RGB to BW",         "Add a RGB to BW Shader node\nConverts an RGB color image to a gray-scale image based at its luminance")
DefNode(ShaderNode,     SH_NODE_SHADERTORGB,     0,                      "SHADERTORGB",    ShaderToRGB,      "Shader to RGB",     "Add a Shader to RGB Shader node\nConvert PBR rendering effect (such as light and shadow) to RGBA color. Typically used for non-photorealistic rendering to apply additional effects on the output of BSDFs.\nNote: only supported for Eevee\n Warning, this may break the PBR workflow")
DefNode(ShaderNode,     SH_NODE_NORMAL,          0,                      "NORMAL",         Normal,           "Normal",            "Add a Normal Shader node\nGenerate a normal vector and a dot product")
DefNode(ShaderNode,     SH_NODE_GAMMA,           0,                      "GAMMA",          Gamma,            "Gamma",             "Add a Gamma Shader node\nApply a gamma correction")
DefNode(ShaderNode,     SH_NODE_BRIGHTCONTRAST,  0,                      "BRIGHTCONTRAST", BrightContrast,   "Brightness/Contrast","Add a Bright/Contrast Shader node\nControl the brightness and contrast of the input color")
DefNode(ShaderNode,     SH_NODE_MAPPING,         def_sh_mapping,         "MAPPING",        Mapping,          "Mapping",           "Add a Mapping Shader node\nTransform the input vector by applying translation, rotation, and scale")
DefNode(ShaderNode,     SH_NODE_CURVE_VEC,       def_vector_curve,       "CURVE_VEC",      VectorCurve,      "Vector Curves",     "Map input vector components with curves")
DefNode(ShaderNode,     SH_NODE_CURVE_RGB,       def_rgb_curve,          "CURVE_RGB",      RGBCurve,         "RGB Curves",        "Add a RGB Curves Shader node\nApply color corrections for each color channel and levels adjustments in the compositing context")
DefNode(ShaderNode,     SH_NODE_CAMERA,          0,                      "CAMERA",         CameraData,       "Camera Data",       "Add a Camera Data Shader node\nGet information about the position of the object relative to the camera")
DefNode(ShaderNode,     SH_NODE_MAP_RANGE,       def_map_range,          "MAP_RANGE",      MapRange,         "Map Range",         "Add a Map Range Shader node\nRemaps a value from a source range to a target range")
DefNode(ShaderNode,     SH_NODE_CLAMP,           def_clamp,              "CLAMP",          Clamp,            "Clamp",             "Add a Clamp Shader node\nClamps a value between a minimum and a maximum")
DefNode(ShaderNode,     SH_NODE_MATH,            def_math,               "MATH",           Math,             "Math",              "Add a Math Shader node\nPerforms math operations")
DefNode(ShaderNode,     SH_NODE_VECTOR_MATH,     def_vector_math,        "VECT_MATH",      VectorMath,       "Vector Math",       "Add a Vector Math Shader node\nPerforms a selected math operation on the input vectors")
DefNode(ShaderNode,     SH_NODE_SQUEEZE,         0,                      "SQUEEZE",        Squeeze,          "Squeeze Value",     "Add a Squeeze Value Shader node\nScale down high values of the camera data node")
DefNode(ShaderNode,     SH_NODE_INVERT,          0,                      "INVERT",         Invert,           "Invert Color",      "Add an Invert Color Shader node\nInverts the colors in the input image, producing a negative")
DefNode(ShaderNode,     SH_NODE_SEPRGB_LEGACY,   0,                      "SEPRGB",         SeparateRGB,      "Separate RGB",      "Add a Separate RGB Shader node\nSeparates the single RGB channels from a single image (Deprecated)")
DefNode(ShaderNode,     SH_NODE_COMBRGB_LEGACY,  0,                      "COMBRGB",        CombineRGB,       "Combine RGB",       "Add a Combine RGB Shader node\nCombine the single RGB channels into a single image (Deprecated)")
DefNode(ShaderNode,     SH_NODE_HUE_SAT,         0,                      "HUE_SAT",        HueSaturation,    "Hue/Saturation/Value","Add a Hue/Saturation/Value Shader node\nColor transformation in the HSV color space")

DefNode(ShaderNode,     SH_NODE_OUTPUT_MATERIAL,     def_sh_output,           "OUTPUT_MATERIAL",     OutputMaterial,    "Material Output",    "Add a Material Output Shader node\nOutput surface material information to a surface object"       )
DefNode(ShaderNode,     SH_NODE_EEVEE_SPECULAR,      0,                       "EEVEE_SPECULAR",      EeveeSpecular,     "Specular BSDF",      "Add a Specular BSDF Shader node\nCombines multiple shader layers in a single node"       )
DefNode(ShaderNode,     SH_NODE_OUTPUT_LIGHT,        def_sh_output,           "OUTPUT_LIGHT",        OutputLight,       "Light Output",       "Add a Light Output Shader node\nOutputs light information to a light object"       )
DefNode(ShaderNode,     SH_NODE_OUTPUT_WORLD,        def_sh_output,           "OUTPUT_WORLD",        OutputWorld,       "World Output",       "Add a World Output Shader node\nOutputs light and color information to the scene’s World"       )
DefNode(ShaderNode,     SH_NODE_OUTPUT_LINESTYLE,    def_sh_output_linestyle, "OUTPUT_LINESTYLE",    OutputLineStyle,   "Line Style Output",  "Add a Line Style Output Shader node\nA Line Style shader"       )
DefNode(ShaderNode,     SH_NODE_FRESNEL,             0,                       "FRESNEL",             Fresnel,           "Fresnel",            "Add a Fresnel Shader node\nAdds Fresnel effect. The more a face goes towards 180 degrees, the more it is reflecting"       )
DefNode(ShaderNode,     SH_NODE_LAYER_WEIGHT,        0,                       "LAYER_WEIGHT",        LayerWeight,       "Layer Weight",       "Add a Layer Weight Shader node\nOutputs a weight. Typically used for layering shaders with the Mix Shader node"       )
DefNode(ShaderNode,     SH_NODE_MIX_SHADER,          0,                       "MIX_SHADER",          MixShader,         "Mix Shader",         "Add a Mix Shader Shader node\nMix two shaders together by a factor"       )
DefNode(ShaderNode,     SH_NODE_ADD_SHADER,          0,                       "ADD_SHADER",          AddShader,         "Add Shader",         "Add a Add Shader Shader node\nAdds two Shaders together"       )
DefNode(ShaderNode,     SH_NODE_ATTRIBUTE,           def_sh_attribute,        "ATTRIBUTE",           Attribute,         "Attribute",          "Add a Attribute Shader node\nAllows you to retrieve attributes attached to an object or mesh"       )
DefNode(ShaderNode,     SH_NODE_AMBIENT_OCCLUSION,   def_sh_ambient_occlusion, "AMBIENT_OCCLUSION",  AmbientOcclusion,  "Ambient Occlusion",  "Add a Ambient Occlusion Shader node\nAmbient Occlusion is a technique to self shadow the geometry of objects"       )
DefNode(ShaderNode,     SH_NODE_BACKGROUND,          0,                       "BACKGROUND",          Background,        "Background",         "Add a Background Shader node\nAdd background light emission"       )
DefNode(ShaderNode,     SH_NODE_HOLDOUT,             0,                       "HOLDOUT",             Holdout,           "Holdout",            "Add a Holdout Shader node\nCreate a “hole” in the image with zero alpha transparency"       )
DefNode(ShaderNode,     SH_NODE_BSDF_DIFFUSE,        0,                       "BSDF_DIFFUSE",        BsdfDiffuse,       "Diffuse BSDF",       "Add a Diffuse BSDF Shader node\nLambertian and Oren-Nayar diffuse reflection"       )
DefNode(ShaderNode,     SH_NODE_BSDF_PRINCIPLED,     def_principled,          "BSDF_PRINCIPLED",     BsdfPrincipled,    "Principled BSDF",    "Add a Principled BSDF Shader node\nCombines multiple shader layers into a single easy to use node"       )
DefNode(ShaderNode,     SH_NODE_BSDF_GLOSSY,         def_glossy,              "BSDF_GLOSSY",         BsdfAnisotropic,        "Glossy BSDF",        "Add a Glossy BSDF Shader node\nadd reflection with micro facet distribution"       )
DefNode(ShaderNode,     SH_NODE_BSDF_GLASS,          def_glass,               "BSDF_GLASS",          BsdfGlass,         "Glass BSDF",         "Add a Glass BSDF Shader node\nA glass shader"       )
DefNode(ShaderNode,     SH_NODE_BSDF_REFRACTION,     def_refraction,          "BSDF_REFRACTION",     BsdfRefraction,    "Refraction BSDF",    "Add a Refraction BSDF Shader node\nAdds glossy refraction with sharp or micro facet distribution"       )
DefNode(ShaderNode,     SH_NODE_BSDF_TRANSLUCENT,    0,                       "BSDF_TRANSLUCENT",    BsdfTranslucent,   "Translucent BSDF",   "Add a Translucent BSDF Shader node\nAdds Lambertian diffuse transmission"       )
DefNode(ShaderNode,     SH_NODE_BSDF_TRANSPARENT,    0,                       "BSDF_TRANSPARENT",    BsdfTransparent,   "Transparent BSDF",   "Add a Transparent BSDF Shader node\nAdds transparency without refraction"       )
DefNode(ShaderNode,     SH_NODE_BSDF_RAY_PORTAL,    0,                      "BSDF_RAY_PORTAL",    BsdfRayPortal,    "Ray Portal BSDF",   "Continue tracing from an arbitrary new position and in a new direction")
DefNode(ShaderNode,     SH_NODE_BSDF_SHEEN,         def_sheen,              "BSDF_SHEEN",         BsdfSheen,        "Sheen BSDF",        "Add a Sheen/Velvet BSDF Shader node\nAdds sheen/velvet reflection to materials, such as cloth\nTypically mixed with other shaders (such as a Diffuse Shader) and is not particularly useful on its own"       )
DefNode(ShaderNode,     SH_NODE_BSDF_TOON,           def_toon,                "BSDF_TOON",           BsdfToon,          "Toon BSDF",          "Add a Toon BSDF Shader node\nCreate Diffuse and Glossy materials with cartoon light effects"       )
DefNode(ShaderNode,     SH_NODE_BSDF_HAIR,           def_hair,                "BSDF_HAIR",           BsdfHair,          "Hair BSDF",          "Add a Hair BSDF Shader node\nAdd shading for Hair"       )
DefNode(ShaderNode,     SH_NODE_BSDF_HAIR_PRINCIPLED,   def_hair_principled,  "BSDF_HAIR_PRINCIPLED",  BsdfHairPrincipled,   "Principled Hair BSDF",  "Add a Principled Hair BSDF Shader node\nShading for Hair and Fur")
DefNode(ShaderNode,     SH_NODE_SUBSURFACE_SCATTERING,  def_sh_subsurface,    "SUBSURFACE_SCATTERING", SubsurfaceScattering, "Subsurface Scattering", "Add a Subsurface Scattering Shader node\nSimple subsurface multiple scattering, for skin, wax, etc")
DefNode(ShaderNode,     SH_NODE_VOLUME_ABSORPTION,   0,                       "VOLUME_ABSORPTION",   VolumeAbsorption,  "Volume Absorption",  "Add a Volume Absorption Shader node\nAllows light to be absorbed as it passes through the volume"       )
DefNode(ShaderNode,     SH_NODE_VOLUME_SCATTER,      0,                       "VOLUME_SCATTER",      VolumeScatter,     "Volume Scatter",     "Add a Volume Scatter Shader node\nAllows light to be scattered as it passes through the volume"       )
DefNode(ShaderNode,     SH_NODE_VOLUME_PRINCIPLED,   0,                       "PRINCIPLED_VOLUME",   VolumePrincipled,  "Principled Volume",  "Add a Principled Volume Shader node\nAll volume shading components in a single node"       )
DefNode(ShaderNode,     SH_NODE_EMISSION,            0,                       "EMISSION",            Emission,          "Emission",           "Add a Emission Shader node\nThe Emission node emits light"       )
DefNode(ShaderNode,     SH_NODE_NEW_GEOMETRY,        0,                       "NEW_GEOMETRY",        NewGeometry,       "Geometry",           "Add a Geometry Shader node\nGives geometric information about the current shading point"       )
DefNode(ShaderNode,     SH_NODE_LIGHT_PATH,          0,                       "LIGHT_PATH",          LightPath,         "Light Path",         "Add a Light Path Shader node\nRetreives for which kind of incoming ray the shader is being executed"       )
DefNode(ShaderNode,     SH_NODE_LIGHT_FALLOFF,       0,                       "LIGHT_FALLOFF",       LightFalloff,      "Light Falloff",      "Add a Light Falloff Shader node\nAllows you to manipulate how light intensity decreases over distance"       )
DefNode(ShaderNode,     SH_NODE_OBJECT_INFO,         0,                       "OBJECT_INFO",         ObjectInfo,        "Object Info",        "Add a Object Info Shader node\nRetreives information about the object instance"       )
DefNode(ShaderNode,     SH_NODE_PARTICLE_INFO,       0,                       "PARTICLE_INFO",       ParticleInfo,      "Particle Info",      "Add a Particle Info Shader node\nGet access to the data of the particle that spawned the object instance"       )
DefNode(ShaderNode,     SH_NODE_HAIR_INFO,           0,                       "HAIR_INFO",           HairInfo,          "Curves Info",         "Add a Curves Info Shader node\nGives access to Hair information"       )
DefNode(ShaderNode,     SH_NODE_POINT_INFO,          0,                       "POINT_INFO",          PointInfo,         "Point Info",         "Add a Point Info Shader node\nRetreive info from a point cloud"       )
DefNode(ShaderNode,     SH_NODE_VOLUME_INFO,         0,                       "VOLUME_INFO",         VolumeInfo,        "Volume Info",        "Add a Volume Info Shader node\nRetreives information about Smoke Domains"       )
DefNode(ShaderNode,     SH_NODE_WIREFRAME,           def_sh_tex_wireframe,    "WIREFRAME",           Wireframe,         "Wireframe",          "Add a Wireframe Shader node\nRetreive and render the wireframe, triangulated"       )
DefNode(ShaderNode,     SH_NODE_WAVELENGTH,          0,                       "WAVELENGTH",          Wavelength,        "Wavelength",         "Add a Wavelength Shader node\nConverts a wavelength value to an RGB value"       )
DefNode(ShaderNode,     SH_NODE_BLACKBODY,           0,                       "BLACKBODY",           Blackbody,         "Blackbody",          "Add a Blackbody Shader node\nConverts a blackbody temperature to RGB value"       )
DefNode(ShaderNode,     SH_NODE_BUMP,                def_sh_bump,             "BUMP",                Bump,              "Bump",               "Add a Bump Shader node\nGenerates a perturbed normal from a height texture, for bump mapping"       )
DefNode(ShaderNode,     SH_NODE_NORMAL_MAP,          def_sh_normal_map,       "NORMAL_MAP",          NormalMap,         "Normal Map",         "Add a Normal Map Shader node\nGenerates a perturbed normal from an RGB normal map image"       )
DefNode(ShaderNode,     SH_NODE_TANGENT,             def_sh_tangent,          "TANGENT",             Tangent,           "Tangent",            "Add a Tangent Shader node\nGenerates a tangent direction for the Anisotropic BSDF"       )
DefNode(ShaderNode,     SH_NODE_SCRIPT,              def_sh_script,           "SCRIPT",              Script,            "Script",             "Add a Script Shader node\nIn this node you can load OSL shaders.\nNote: OSL shaders are not supported on all GPU backends"       )
DefNode(ShaderNode,     SH_NODE_TEX_IMAGE,           def_sh_tex_image,        "TEX_IMAGE",           TexImage,          "Image Texture",      "Add an Image Texture Shader node\nAdd an image file as a texture"       )
DefNode(ShaderNode,     SH_NODE_TEX_ENVIRONMENT,     def_sh_tex_environment,  "TEX_ENVIRONMENT",     TexEnvironment,    "Environment Texture", "Add a Environment Texture Shader node\nLoad an environment texture to light your scene"      )
DefNode(ShaderNode,     SH_NODE_TEX_SKY,             def_sh_tex_sky,          "TEX_SKY",             TexSky,            "Sky Texture",        "Add a Sky Texture Shader node\nAdds a procedural Sky texture"       )
DefNode(ShaderNode,     SH_NODE_TEX_GRADIENT,        def_sh_tex_gradient,     "TEX_GRADIENT",        TexGradient,       "Gradient Texture",   "Add a Gradient Texture Shader node\nGenerates interpolated color and intensity values based on the input vector"       )
DefNode(ShaderNode,     SH_NODE_TEX_NOISE,           def_sh_tex_noise,        "TEX_NOISE",           TexNoise,          "Noise Texture",      "Add a Noise Texture Shader node\nEvaluates a fractal Perlin noise at the input texture coordinates"       )
DefNode(ShaderNode,     SH_NODE_TEX_MAGIC,           def_sh_tex_magic,        "TEX_MAGIC",           TexMagic,          "Magic Texture",      "Add a Magic Texture Shader node\nAdds a procedural psychedelic color texture"       )
DefNode(ShaderNode,     SH_NODE_TEX_WAVE,            def_sh_tex_wave,         "TEX_WAVE",            TexWave,           "Wave Texture",       "Add a Wave Texture Shader node\nAdds procedural bands or rings with noise distortion"       )
DefNode(ShaderNode,     SH_NODE_TEX_VORONOI,         def_sh_tex_voronoi,      "TEX_VORONOI",         TexVoronoi,        "Voronoi Texture",    "Add a Voronoi Texture Shader node\nEvaluates a Worley Noise at the input texture coordinates"       )
DefNode(ShaderNode,     SH_NODE_TEX_CHECKER,         def_sh_tex_checker,      "TEX_CHECKER",         TexChecker,        "Checker Texture",    "Add a Checker Texture Shader node\nAdds a procedural checkerboard texture"       )
DefNode(ShaderNode,     SH_NODE_TEX_BRICK,           def_sh_tex_brick,        "TEX_BRICK",           TexBrick,          "Brick Texture",      "Add a Brick Texture Shader node\nAdds a procedural brick texture"       )
DefNode(ShaderNode,     SH_NODE_TEX_POINTDENSITY,    def_sh_tex_pointdensity, "TEX_POINTDENSITY",    TexPointDensity,   "Point Density",      "Add a Point Density Shader node\nAdds volumetric points for each particle or vertex of another object"       )
DefNode(ShaderNode,     SH_NODE_TEX_COORD,           def_sh_tex_coord,        "TEX_COORD",           TexCoord,          "Texture Coordinate", "Add a Texture Coordinate Shader node\nDefine some texture coordinate types"       )
DefNode(ShaderNode,     SH_NODE_VECTOR_ROTATE,       def_sh_vector_rotate,    "VECTOR_ROTATE",       VectorRotate,      "Vector Rotate",      "Add a Vector Rotate Shader node\nRotate a vector around a center point"       )
DefNode(ShaderNode,     SH_NODE_VECT_TRANSFORM,      def_sh_vect_transform,   "VECT_TRANSFORM",      VectorTransform,   "Vector Transform",   "Add a Vector Transform Shader node\nConvert a vector, point, or normal between world and camera and object coordinate space"       )
DefNode(ShaderNode,     SH_NODE_SEPHSV_LEGACY,       0,                       "SEPHSV",              SeparateHSV,       "Separate HSV",       "Add a Separate HSV Shader node\nSeparates the single HSV channels from a single image"       )
DefNode(ShaderNode,     SH_NODE_COMBHSV_LEGACY,      0,                       "COMBHSV",             CombineHSV,        "Combine HSV",        "Add a Combine HSV Shader node\nCombine the single HSV channels into a single image"       )
DefNode(ShaderNode,     SH_NODE_UVMAP,               def_sh_uvmap,            "UVMAP",               UVMap,             "UV Map",             "Add a UV Map Shader node\nRetrieve specific UV maps"       )
DefNode(ShaderNode,     SH_NODE_VERTEX_COLOR,        def_sh_vertex_color,     "VERTEX_COLOR",        VertexColor,       "Color Attribute",    "Add a Color Attribute Shader node\nProvides vertex colors as well as their alpha value"       )
DefNode(ShaderNode,     SH_NODE_UVALONGSTROKE,       def_sh_uvalongstroke,    "UVALONGSTROKE",       UVAlongStroke,     "UV Along Stroke",    "Add a UV Along Stroke Shader node\nMaps textures along the stroke length"       )
DefNode(ShaderNode,     SH_NODE_SEPXYZ,              0,                       "SEPXYZ",              SeparateXYZ,       "Separate XYZ",       "Add a Separate XYZ Shader node\nSeparates the single RGB channels from a single image by values between 0 and 1"       )
DefNode(ShaderNode,     SH_NODE_COMBXYZ,             0,                       "COMBXYZ",             CombineXYZ,        "Combine XYZ",        "Add a Combine XYZ Shader node\nCombine the single RGB channels into a single image by values between 0 and 1"       )
DefNode(ShaderNode,     SH_NODE_BEVEL,               def_sh_bevel,            "BEVEL",               Bevel,             "Bevel",              "Add a Bevel Shader node\nRender rounded corners to capture specular highlights"       )
DefNode(ShaderNode,     SH_NODE_DISPLACEMENT,        def_sh_displacement,     "DISPLACEMENT",        Displacement,      "Displacement",       "Add a Displacement Shader node\nDisplace the surface along all the surface normal"       )
DefNode(ShaderNode,     SH_NODE_VECTOR_DISPLACEMENT, def_sh_vector_displacement, "VECTOR_DISPLACEMENT", VectorDisplacement, "Vector Displacement", "Add a Vector Displacement Shader node\nDisplace the surface along arbitrary directions"  )
DefNode(ShaderNode,     SH_NODE_TEX_IES,             def_sh_tex_ies,          "TEX_IES",             TexIES,            "IES Texture",        "Add a IES Texture Shader node\nMatch real world lights based on IES files"       )
DefNode(ShaderNode,     SH_NODE_TEX_WHITE_NOISE,     def_sh_tex_white_noise,  "TEX_WHITE_NOISE",     TexWhiteNoise,     "White Noise Texture",        "Add a White Noise Texture Shader node\nAdds white noise"       )
DefNode(ShaderNode,     SH_NODE_OUTPUT_AOV,          def_sh_output_aov,       "OUTPUT_AOV",          OutputAOV,         "AOV Output",         "Add a AOV Output Shader node\nProvides custom render passes for arbitrary shader node components"       )
DefNode(ShaderNode,     SH_NODE_CURVE_FLOAT,         def_float_curve,         "CURVE_FLOAT",         FloatCurve,        "Float Curve",        "Add a Curve Float Shader node\nMaps an input float to a curve and outputs a float value"       )
DefNode(ShaderNode,     SH_NODE_COMBINE_COLOR,       def_sh_combsep_color,    "COMBINE_COLOR",       CombineColor,      "Combine Color",      "Add a Combine Color Shader node\nCombines single colors to a rgb, hsv or hsl color value"       )
DefNode(ShaderNode,     SH_NODE_SEPARATE_COLOR,      def_sh_combsep_color,    "SEPARATE_COLOR",      SeparateColor,     "Separate Color",     "Add a Separate Color Shader node\nSeparates the values of a rgb, hsv or hsl color into its single values"       )
DefNode(ShaderNode,     SH_NODE_MIX,                 def_sh_mix,              "MIX",                 Mix,               "Mix",                "Add a Mix Shader node\nMixes values by a factor")

DefNode(CompositorNode,  CMP_NODE_VIEWER,          def_cmp_viewer,          "VIEWER",          Viewer,            "Viewer",             "Add a Viewer Compositor node\nDisplays the output as a backdrop in the viewport or in the Image editor"              )
DefNode(CompositorNode,  CMP_NODE_RGB,             0,                       "RGB",             RGB,               "RGB",                "Add a RGB Compositor node\nSets a color"              )
DefNode(CompositorNode,  CMP_NODE_VALUE,           0,                       "VALUE",           Value,             "Value",              "Add a Value Compositor node\nInput numerical values to other nodes"              )
DefNode(CompositorNode,  CMP_NODE_MIX_RGB,         def_mix_rgb,             "MIX_RGB",         MixRGB,            "Mix",                "Add a Mix Compositor node\nMixes images by working on the individual and corresponding pixels of the two input images"              )
DefNode(CompositorNode,  CMP_NODE_VALTORGB,        def_colorramp,           "VALTORGB",        ValToRGB,          "Color Ramp",          "Add a Color Ramp Compositor node\nMap color values by gradient"              )
DefNode(CompositorNode,  CMP_NODE_RGBTOBW,         0,                       "RGBTOBW",         RGBToBW,           "RGB to BW",          "Add a RGB to BW Compositor node\nConverts an RGB color image to a gray-scale image based at its luminance"              )
DefNode(CompositorNode,  CMP_NODE_NORMAL,          0,                       "NORMAL",          Normal,            "Normal",             "Add a Normal Compositor node\nGenerates a normal vector and a dot product"              )
DefNode(CompositorNode,  CMP_NODE_CURVE_VEC,       def_vector_curve,        "CURVE_VEC",       CurveVec,          "Vector Curves",      "Add a Vector Curves Compositor node\nMaps an input vector components to a curve"              )
DefNode(CompositorNode,  CMP_NODE_CURVE_RGB,       def_rgb_curve,           "CURVE_RGB",       CurveRGB,          "RGB Curves",         "Add a RGB Curves Compositor node\nAllows color corrections for each color channel and levels adjustments"              )
DefNode(CompositorNode,  CMP_NODE_ALPHAOVER,       def_cmp_alpha_over,      "ALPHAOVER",       AlphaOver,         "Alpha Over",         "Add a Alpha Over Compositor node\nLayer images with an alpha channel on top of one another"              )
DefNode(CompositorNode,  CMP_NODE_BLUR,            def_cmp_blur,            "BLUR",            Blur,              "Blur",               "Add a Blur Compositor node\nBlur an image"              )
DefNode(CompositorNode,  CMP_NODE_FILTER,          def_cmp_filter,          "FILTER",          Filter,            "Filter",             "Add a Filter Compositor node\nProvides various common image enhancement filters"              )
DefNode(CompositorNode,  CMP_NODE_MAP_VALUE,       def_cmp_map_value,       "MAP_VALUE",       MapValue,          "Map Value",          "Add a Map Value Compositor node\nScale, offset and clamp values"              )
DefNode(CompositorNode,  CMP_NODE_MAP_RANGE,       def_cmp_map_range,       "MAP_RANGE",       MapRange,          "Map Range",          "Add a Map Range Compositor node\nRemaps a value from a source range to a target range"              )
DefNode(CompositorNode,  CMP_NODE_TIME,            def_time,                "TIME",            Time,              "Time Curve",           "Add a Time Curve Compositor node\ngenerates a factor value that changes according to the curve as time progresses through the Timeline"              )
DefNode(CompositorNode,  CMP_NODE_VECBLUR,         def_cmp_vector_blur,     "VECBLUR",         VecBlur,           "Vector Blur",        "Add a Vector Blur Compositor node\nUses the vector speed render pass to blur the image pixels in 2D"              )
DefNode(CompositorNode,  CMP_NODE_SEPRGBA_LEGACY,  0,                       "SEPRGBA",         SepRGBA,           "Separate RGBA",      "Add a Separate RGBA Compositor node\nSeparates the RGBA values from a single image"              )
DefNode(CompositorNode,  CMP_NODE_SEPHSVA_LEGACY,  0,                       "SEPHSVA",         SepHSVA,           "Separate HSVA",      "Add a Separate HSVA Compositor node\nSeparates the single RGB channels from a single image"              )
DefNode(CompositorNode,  CMP_NODE_SETALPHA,        def_cmp_set_alpha,       "SETALPHA",        SetAlpha,          "Set Alpha",          "Add a Set Alpha Compositor node\nAdds an alpha channel to an image"              )
DefNode(CompositorNode,  CMP_NODE_HUE_SAT,         0,                       "HUE_SAT",         HueSat,            "Hue/Saturation/Value", "Add a Hue/Saturation/Value Compositor node\nApply a color transformation in the HSV color space"            )
DefNode(CompositorNode,  CMP_NODE_IMAGE,           def_cmp_image,           "IMAGE",           Image,             "Image",              "Add an Image Compositor node\nImage input"              )
DefNode(CompositorNode,  CMP_NODE_R_LAYERS,        def_cmp_render_layers,   "R_LAYERS",        RLayers,           "Render Layers",      "Add a Render Layers Compositor node\nInputs the available render layers"              )
DefNode(CompositorNode,  CMP_NODE_COMPOSITE,       def_cmp_composite,       "COMPOSITE",       Composite,         "Composite",          "Add a Composite Compositor node\nComposite output to the renderer"              )
/* NOTE: #OutputFile node has special RNA setup function called in `rna_nodetree.cc`. */
DefNode(CompositorNode, CMP_NODE_OUTPUT_FILE,     0,                       "OUTPUT_FILE",     OutputFile,        "File Output",        "Add a File Output Compositor node\nWrites out an image as part of a frame set sequence"              )
DefNode(CompositorNode, CMP_NODE_TEXTURE,         def_texture,             "TEXTURE",         Texture,           "Texture",            "Add a Texture Compositor node\nAllows you to use 3D textures in the Compositor"              )
DefNode(CompositorNode, CMP_NODE_TRANSLATE,       def_cmp_translate,       "TRANSLATE",       Translate,         "Translate",          "Add a Translate Compositor node\nMove an image"              )
DefNode(CompositorNode, CMP_NODE_ZCOMBINE,        def_cmp_zcombine,        "ZCOMBINE",        Zcombine,          "Z Combine",          "Add a Z Combine Compositor node\nCombines two images based on their Z-depth maps"              )
DefNode(CompositorNode, CMP_NODE_COMBRGBA_LEGACY, 0,                       "COMBRGBA",        CombRGBA,          "Combine RGBA",       "Add a Combine RGBA Compositor node\nCombine the single RGB channels into a single image"              )
DefNode(CompositorNode, CMP_NODE_DILATEERODE,     def_cmp_dilate_erode,    "DILATEERODE",     DilateErode,       "Dilate/Erode",       "Add a Dilate/Erode Compositor node\nProvides a morphology filter to dilate or erode the image"              )
DefNode(CompositorNode, CMP_NODE_INPAINT,         def_cmp_inpaint,         "INPAINT",         Inpaint,           "Inpaint",            "Add a Inpaint Compositor node\nExtend borders of an image into transparent or masked regions"              )
DefNode(CompositorNode, CMP_NODE_DESPECKLE,       def_cmp_despeckle,       "DESPECKLE",       Despeckle,         "Despeckle",          "Add a Despeckle Compositor node\nSmooth areas of an image in which noise is noticeable"              )
DefNode(CompositorNode, CMP_NODE_ROTATE,          def_cmp_rotate,          "ROTATE",          Rotate,            "Rotate",             "Add a Rotate Compositor node\nRotate a texture"              )
DefNode(CompositorNode, CMP_NODE_SCALE,           def_cmp_scale,           "SCALE",           Scale,             "Scale",              "Add a Scale Compositor node\nScale a texture"              )
DefNode(CompositorNode, CMP_NODE_SEPYCCA_LEGACY,  def_cmp_ycc,             "SEPYCCA",         SepYCCA,           "Separate YCbCrA",    "Add a Separate YCbCrA Compositor node\nConverts an RGBA image to YCbCrA color space, and splits it to single output"              )
DefNode(CompositorNode, CMP_NODE_COMBYCCA_LEGACY, def_cmp_ycc,             "COMBYCCA",        CombYCCA,          "Combine YCbCrA",     "Add a Combine YCbCrA Compositor node\nConverts an YCbCrA image to RGBA color space and unions the channels"              )
DefNode(CompositorNode, CMP_NODE_SEPYUVA_LEGACY,  0,                       "SEPYUVA",         SepYUVA,           "Separate YUVA",      "Add a Separate YUVA Compositor node\nConverts an RGBA image to YUVA color space"              )
DefNode(CompositorNode, CMP_NODE_COMBYUVA_LEGACY, 0,                       "COMBYUVA",        CombYUVA,          "Combine YUVA",       "Add a Combine YUVA Compositor node\nConverts an YUVA image to RGBA color space"              )
DefNode(CompositorNode, CMP_NODE_DIFF_MATTE,      def_cmp_diff_matte,      "DIFF_MATTE",      DiffMatte,         "Difference Key",     "Add a Difference Key Compositor node\nProduces a matte that isolates foreground content by comparing it with a reference background image"              )
DefNode(CompositorNode, CMP_NODE_COLOR_SPILL,     def_cmp_color_spill,     "COLOR_SPILL",     ColorSpill,        "Color Spill",        "Add a Color Spill Compositor node\nReduces one of the RGB channels so that it is not greater than any of the others"              )
DefNode(CompositorNode, CMP_NODE_CHROMA_MATTE,    def_cmp_chroma_matte,    "CHROMA_MATTE",    ChromaMatte,       "Chroma Key",         "Add a Chroma Key Compositor node\nDetermines if a pixel is a foreground or background (and thereby should be transparent) based on its chroma values"              )
DefNode(CompositorNode, CMP_NODE_CHANNEL_MATTE,   def_cmp_channel_matte,   "CHANNEL_MATTE",   ChannelMatte,      "Channel Key",        "Add a Channel Key Compositor node\nDetermines background objects from foreground objects by the difference in the selected channel’s levels"              )
DefNode(CompositorNode, CMP_NODE_FLIP,            def_cmp_flip,            "FLIP",            Flip,              "Flip",               "Add a Flip Compositor node\nFlips an image at defined axis"              )
DefNode(CompositorNode, CMP_NODE_SPLIT,           def_cmp_split,           "SPLIT",           Split,             "Split",              "Add a Split Compositor node\ndisplays two images side-by-side as backdrop, or as a Viewer Node output"              )
DefNode(CompositorNode, CMP_NODE_MAP_UV,          def_cmp_map_uv,          "MAP_UV",          MapUV,             "Map UV",             "Add a Map UV Compositor node\nAllows to re-texture objects after they have been rendered"              )
DefNode(CompositorNode, CMP_NODE_ID_MASK,         def_cmp_id_mask,         "ID_MASK",         IDMask,            "ID Mask",            "Add a ID Mask Compositor node\nAccess an alpha mask per object or per material"              )
DefNode(CompositorNode, CMP_NODE_DOUBLEEDGEMASK,  def_cmp_double_edge_mask, "DOUBLEEDGEMASK",  DoubleEdgeMask,   "Double Edge Mask",   "Add a Double Edge Mask Compositor node\nCreates a gradient between two masks"              )
DefNode(CompositorNode, CMP_NODE_DEFOCUS,         def_cmp_defocus,         "DEFOCUS",         Defocus,           "Defocus",            "Add a Defocus Compositor node\nEmulates depth of field (DOF)"              )
DefNode(CompositorNode, CMP_NODE_DISPLACE,        0,                       "DISPLACE",        Displace,          "Displace",           "Add a Displace Compositor node\nDisplaces the pixel position based on an input vector"              )
DefNode(CompositorNode, CMP_NODE_COMBHSVA_LEGACY, 0,                       "COMBHSVA",        CombHSVA,          "Combine HSVA",       "Add a Combine HSVA Compositor node\nCombine the single HSV channels into a single image"              )
DefNode(CompositorNode, CMP_NODE_MATH,            def_math,                "MATH",            Math,              "Math",               "Add a Math Compositor node\nPerforms math operations"              )
DefNode(CompositorNode, CMP_NODE_LUMA_MATTE,      def_cmp_luma_matte,      "LUMA_MATTE",      LumaMatte,         "Luminance Key",      "Add a Luminance Key Compositor node\nDetermines background objects from foreground objects by the difference in the brightness level"              )
DefNode(CompositorNode, CMP_NODE_BRIGHTCONTRAST,  def_cmp_brightcontrast,  "BRIGHTCONTRAST",  BrightContrast,    "Brightness/Contrast",    "Add a Brightness/Contrast Compositor node\nAdjust the brightness and contrast"              )
DefNode(CompositorNode, CMP_NODE_GAMMA,           0,                       "GAMMA",           Gamma,             "Gamma",              "Add a Gamma Compositor node\nApply a gamma correction"              )
DefNode(CompositorNode, CMP_NODE_INVERT,          def_cmp_invert,          "INVERT",          Invert,            "Invert Color",             "Add an Invert Color Compositor node\nInverts the colors in the input image, producing a negative"              )
DefNode(CompositorNode, CMP_NODE_NORMALIZE,       0,                       "NORMALIZE",       Normalize,         "Normalize",          "Add a Normalize Compositor node\nFind the minimum and maximum values of a single channel in the range of 0 and 1. "              )
DefNode(CompositorNode, CMP_NODE_CROP,            def_cmp_crop,            "CROP",            Crop,              "Crop",               "Add a Crop Compositor node\nCrops an image to a selected region"              )
DefNode(CompositorNode, CMP_NODE_DBLUR,           def_cmp_dblur,           "DBLUR",           DBlur,             "Directional Blur",   "Add a Directional Blur Compositor node\nBlurs an image in a specified direction and magnitude"              )
DefNode(CompositorNode, CMP_NODE_BILATERALBLUR,   def_cmp_bilateral_blur,  "BILATERALBLUR",   Bilateralblur,     "Bilateral Blur",     "Add a Bilateral Blur Compositor node\nPerforms a high-quality adaptive blur on the source image"              )
DefNode(CompositorNode, CMP_NODE_PREMULKEY,       def_cmp_premul_key,      "PREMULKEY",       PremulKey,         "Alpha Convert",      "Add a Alpha Convert Compositor node\nConverts the alpha channel interpretation of an image from pre-multiplied to straight or vice versa"              )
DefNode(CompositorNode, CMP_NODE_GLARE,           def_cmp_glare,           "GLARE",           Glare,             "Glare",              "Add a Glare Compositor node\nAdds lens flares, fog, glows around exposed parts of an image"              )
DefNode(CompositorNode, CMP_NODE_TONEMAP,         def_cmp_tonemap,         "TONEMAP",         Tonemap,           "Tonemap",            "Add a Tonemap Compositor node\nAllows Tonemapping"              )
DefNode(CompositorNode, CMP_NODE_LENSDIST,        def_cmp_lensdist,        "LENSDIST",        Lensdist,          "Lens Distortion",    "Add a Lens Distortion Compositor node\nSimulate distortions from real camera lenses"              )
DefNode(CompositorNode, CMP_NODE_VIEW_LEVELS,     def_cmp_levels,          "LEVELS",          Levels,            "Levels",             "Add a Levels Compositor node\nReads the inputs color channels and outputs analytical values"              )
DefNode(CompositorNode, CMP_NODE_COLOR_MATTE,     def_cmp_color_matte,     "COLOR_MATTE",     ColorMatte,        "Color Key",          "Add a Color Key Compositor node\nCreates a matte based on a specified color of the input image"              )
DefNode(CompositorNode, CMP_NODE_DIST_MATTE,      def_cmp_distance_matte,  "DISTANCE_MATTE",  DistanceMatte,     "Distance Key",       "Add a Distance Key Compositor node\nDetermines a pixel’s alpha value"              )
DefNode(CompositorNode, CMP_NODE_COLORBALANCE,    def_cmp_colorbalance,    "COLORBALANCE",    ColorBalance,      "Color Balance",      "Add a Color Balance Compositor node\nAdjust the color and values of an image"              )
DefNode(CompositorNode, CMP_NODE_HUECORRECT,      def_cmp_huecorrect,      "HUECORRECT",      HueCorrect,        "Hue Correct",        "Add a Hue Correct Compositor node\nAdjust the Hue, Saturation, and Value of an image with an input curve"              )
DefNode(CompositorNode, CMP_NODE_MOVIECLIP,       def_cmp_movieclip,       "MOVIECLIP",       MovieClip,         "Movie Clip",         "Add a Movie Clip Compositor node\nTakes values from footage cameras and trackings, and links them to the output"              )
DefNode(CompositorNode, CMP_NODE_TRANSFORM,       dev_cmd_transform,       "TRANSFORM",       Transform,         "Transform",          "Add a Transform Compositor node\nMove, rotate or scale an image"              )
DefNode(CompositorNode, CMP_NODE_STABILIZE2D,     def_cmp_stabilize2d,     "STABILIZE2D",     Stabilize,         "Stabilize 2D",       "Add a Stabilize 2D Compositor node\nStabilizes the footage according to the settings set in Movie Clip Editor"              )
DefNode(CompositorNode, CMP_NODE_MOVIEDISTORTION, def_cmp_moviedistortion, "MOVIEDISTORTION", MovieDistortion,   "Movie Distortion",   "Add a Movie Distortion Compositor node\nAdds distortion to render or removes distortion from movies to make them fit together "              )
DefNode(CompositorNode, CMP_NODE_MASK_BOX,        def_cmp_boxmask,         "BOXMASK",         BoxMask,           "Box Mask",           "Add a Box Mask Compositor node\nCreates an image suitable for use as a simple matte"              )
DefNode(CompositorNode, CMP_NODE_MASK_ELLIPSE,    def_cmp_ellipsemask,     "ELLIPSEMASK",     EllipseMask,       "Ellipse Mask",       "Add a Ellipse Mask Compositor node\ncreates an image suitable for use as a simple matte or vignette mask"              )
DefNode(CompositorNode, CMP_NODE_BOKEHIMAGE,      def_cmp_bokehimage,      "BOKEHIMAGE",      BokehImage,        "Bokeh Image",        "Add a Bokeh Image Compositor node\nGenerates a special input image for use with the Bokeh Blur filter node"              )
DefNode(CompositorNode, CMP_NODE_BOKEHBLUR,       def_cmp_bokehblur,       "BOKEHBLUR",       BokehBlur,         "Bokeh Blur",         "Add a Bokeh Blur Compositor node\nGenerates a bokeh type blur"              )
DefNode(CompositorNode, CMP_NODE_SWITCH,          def_cmp_switch,          "SWITCH",          Switch,            "Switch",             "Add a Switch Compositor node\nSwitch between two images"              )
DefNode(CompositorNode, CMP_NODE_SWITCH_VIEW,     def_cmp_switch_view,     "VIEWSWITCH",      SwitchView,        "Switch View",        "Add a Switch View Compositor node\nCombines the views (left and right) into a single Stereo 3D output"              )
DefNode(CompositorNode, CMP_NODE_COLORCORRECTION, def_cmp_colorcorrection, "COLORCORRECTION", ColorCorrection,   "Color Correction",   "Add a Color Correction Compositor node\nAdjust the color of an image"              )
DefNode(CompositorNode, CMP_NODE_MASK,            def_cmp_mask,            "MASK",            Mask,              "Mask",               "Add a Mask Compositor node\nThe Mask node can be used to select a Mask data"              )
DefNode(CompositorNode, CMP_NODE_KEYINGSCREEN,    def_cmp_keyingscreen,    "KEYINGSCREEN",    KeyingScreen,      "Keying Screen",      "Add a Keying Screen Compositor node\nCreates plates for use as a color reference for keying nodes"              )
DefNode(CompositorNode, CMP_NODE_KEYING,          def_cmp_keying,          "KEYING",          Keying,            "Keying",             "Add a Keying Compositor node\nPerforms chroma keying to remove the backdrop and despill to correct color cast from the backdrop"              )
DefNode(CompositorNode, CMP_NODE_TRACKPOS,        def_cmp_trackpos,        "TRACKPOS",        TrackPos,          "Track Position",     "Add a Track Position Compositor node\nreturn information about a tracking marker to the Compositor\nYou need a tracking project"              )
DefNode(CompositorNode, CMP_NODE_PIXELATE,        def_cmp_pixelate,                       "PIXELATE",        Pixelate,          "Pixelate",           "Add a Pixelate Compositor node\nAdd this node in front of a Scale node to get a pixelated (non-smoothed) image"              )
DefNode(CompositorNode, CMP_NODE_PLANETRACKDEFORM, def_cmp_planetrackdeform, "PLANETRACKDEFORM", PlaneTrackDeform, "Plane Track Deform", "Add a Plane Track Deform Compositor node\nIncorporate the special “plane track” in your composite"            )
DefNode(CompositorNode, CMP_NODE_CORNERPIN,       0,                       "CORNERPIN",       CornerPin,         "Corner Pin",         "Add a Corner Pin Compositor node\nUses explicit corner values for a plane warp transformation"              )
DefNode(CompositorNode, CMP_NODE_SUNBEAMS,        def_cmp_sunbeams,        "SUNBEAMS",        SunBeams,          "Sun Beams",          "Add a Sun Beams Compositor node\nCreates 2D sun beams"              )
DefNode(CompositorNode, CMP_NODE_CRYPTOMATTE,     def_cmp_cryptomatte,     "CRYPTOMATTE_V2",  CryptomatteV2,     "Cryptomatte",        "Add a Cryptomatte Compositor node\nCreate mattes for compositing"              )
DefNode(CompositorNode, CMP_NODE_CRYPTOMATTE_LEGACY,  def_cmp_cryptomatte_legacy,  "CRYPTOMATTE",  Cryptomatte,  "Cryptomatte (Legacy)",  "Add a Cryptomatte (Legacy) Compositor node\ncreate mattes for compositing. Deprecated method"           )
DefNode(CompositorNode, CMP_NODE_DENOISE,         def_cmp_denoise,         "DENOISE",         Denoise,           "Denoise",            "Add a Denoise Compositor node\nDenoises the image"              )
DefNode(CompositorNode, CMP_NODE_EXPOSURE,        0,                       "EXPOSURE",        Exposure,          "Exposure",           "Add a Exposure Compositor node\nMake areas of an image brighter or dimmer"              )
DefNode(CompositorNode, CMP_NODE_ANTIALIASING,    def_cmp_antialiasing,    "ANTIALIASING",    AntiAliasing,      "Anti-Aliasing",      "Add a Anti-Aliasing Compositor node\nAnti-alias an image"              )
DefNode(CompositorNode, CMP_NODE_POSTERIZE,       0,                       "POSTERIZE",       Posterize,         "Posterize",          "Add a Posterize Node\nPosterize reduces the number of colors"              )
DefNode(CompositorNode, CMP_NODE_CONVERT_COLOR_SPACE, def_cmp_convert_color_space,  "CONVERT_COLORSPACE",  ConvertColorSpace,  "Convert Colorspace", "Add a Color Space Node\nConvert the color space from one color space to another"       )
DefNode(CompositorNode, CMP_NODE_SCENE_TIME,      0,                       "SCENE_TIME",      SceneTime,         "Scene Time",         "Add a Scene Time Node\nOutputs the current scene time in seconds or in frames"              )
DefNode(CompositorNode, CMP_NODE_COMBINE_XYZ,     0,                       "COMBINE_XYZ",     CombineXYZ,        "Combine XYZ",        "Add a Combine XYZ Compositor Node\nCombine the single RGB channels into a single image by values between 0 and 1")
DefNode(CompositorNode, CMP_NODE_SEPARATE_XYZ,    0,                       "SEPARATE_XYZ",    SeparateXYZ,       "Separate XYZ",       "Add a Separate XYZ Compositor Node\nSeparates the single RGB channels from a single image by values between 0 and 1")
DefNode(CompositorNode, CMP_NODE_SEPARATE_COLOR,  def_cmp_combsep_color,   "SEPARATE_COLOR",  SeparateColor,     "Separate Color",     "Add a Combine Color Compositor node\nCombines single colors to a rgb, hsv or hsl color value"               )
DefNode(CompositorNode, CMP_NODE_COMBINE_COLOR,   def_cmp_combsep_color,   "COMBINE_COLOR",   CombineColor,      "Combine Color",      "Add a Separate Color Compositor node\nSeparates the values of a rgb, hsv or hsl color into its single values"              )
DefNode(CompositorNode, CMP_NODE_KUWAHARA,        def_cmp_kuwahara,       "KUWAHARA",       Kuwahara,         "Kuwahara",          "Add a Kuwahara Compositor node\nKuwahara is a stylize filter")

DefNode(TextureNode,     TEX_NODE_OUTPUT,          def_tex_output,          "OUTPUT",          Output,            "Output",             "Add a Output Texture node\nOutput for node textures"              )
DefNode(TextureNode,     TEX_NODE_CHECKER,         0,                       "CHECKER",         Checker,           "Checker",            "Add a Checker Texture node\nAdds a procedural checkerboard texture"              )
DefNode(TextureNode,     TEX_NODE_TEXTURE,         def_texture,             "TEXTURE",         Texture,           "Texture",            "Add a Texture Texture node\nallows you to use 3D textures in the Compositor"              )
DefNode(TextureNode,     TEX_NODE_BRICKS,          def_tex_bricks,          "BRICKS",          Bricks,            "Bricks",             "Add a Brick Texture node\nAdds a procedural brick texture"              )
DefNode(TextureNode,     TEX_NODE_MATH,            def_math,                "MATH",            Math,              "Math",               "Add a Math Texture node\nPerforms math operations"              )
DefNode(TextureNode,     TEX_NODE_MIX_RGB,         def_mix_rgb,             "MIX_RGB",         MixRGB,            "Mix RGB",            "Add a Mix RGB Texture node\nMixes images by working on the individual and corresponding pixels of the two input images"              )
DefNode(TextureNode,     TEX_NODE_RGBTOBW,         0,                       "RGBTOBW",         RGBToBW,           "RGB to BW",          "Add a RGB to BW Texture node\nConverts an RGB color image to a gray-scale image based at its luminance"              )
DefNode(TextureNode,     TEX_NODE_VALTORGB,        def_colorramp,           "VALTORGB",        ValToRGB,          "Color Ramp",         "Add a Color Ramp Texture node\nMaps values to colors with the use of a gradient"              )
DefNode(TextureNode,     TEX_NODE_IMAGE,           def_tex_image,           "IMAGE",           Image,             "Image",              "Add an Image Texture node\nAdd an image file as a texture"              )
DefNode(TextureNode,     TEX_NODE_CURVE_RGB,       def_rgb_curve,           "CURVE_RGB",       CurveRGB,          "RGB Curves",         "Add a RGB Curves Texture node\nAllows color corrections for each color channel and levels adjustments"              )
DefNode(TextureNode,     TEX_NODE_INVERT,          0,                       "INVERT",          Invert,            "Invert Color",       "Add a Invert Texture node\nInverts the colors in the input image, producing a negative"              )
DefNode(TextureNode,     TEX_NODE_HUE_SAT,         0,                       "HUE_SAT",         HueSaturation,     "Hue/Saturation/Value",	  "Add a Hue/Saturation/Value Texture node\nColor transformation in the HSV color space"              )
DefNode(TextureNode,     TEX_NODE_CURVE_TIME,      def_time,                "CURVE_TIME",      CurveTime,         "Curve Time",         "Add a Curve Time Texture node\nAdjust the changes over time by curves"              )
DefNode(TextureNode,     TEX_NODE_ROTATE,          0,                       "ROTATE",          Rotate,            "Rotate",             "Add a Rotate Texture node\nRotate an image"              )
DefNode(TextureNode,     TEX_NODE_VIEWER,          0,                       "VIEWER",          Viewer,            "Viewer",             "Add a Viewer Texture node\nDisplays the output as a backdrop in the viewport or in the Image editor"              )
DefNode(TextureNode,     TEX_NODE_TRANSLATE,       0,                       "TRANSLATE",       Translate,         "Translate",          "Add a Translate Texture node\nMove the texture"              )
DefNode(TextureNode,     TEX_NODE_COORD,           0,                       "COORD",           Coordinates,       "Coordinates",        "Add a Coordinates Texture node\nOutputs the geometry local coordinates, relative to its bounding box as RGB colors"              )
DefNode(TextureNode,     TEX_NODE_DISTANCE,        0,                       "DISTANCE",        Distance,          "Distance",           "Add a Distance Texture node\nComputes the distance between two 3D coordinates"              )
DefNode(TextureNode,     TEX_NODE_COMPOSE_LEGACY,  0,                       "COMPOSE",         Compose,           "Combine RGBA",       "Add a Combine RGBA Texture node\nCombine the single RGB channels into a single imag"              )
DefNode(TextureNode,     TEX_NODE_DECOMPOSE_LEGACY, 0,                      "DECOMPOSE",       Decompose,         "Separate RGBA",      "Add a Separate RGBA Texture node\nSeparates the single RGBA channels from a single image"              )
DefNode(TextureNode,     TEX_NODE_VALTONOR,        0,                       "VALTONOR",        ValToNor,          "Value to Normal",    "Add a Value to Normal Texture node\nComputes a normal map"              )
DefNode(TextureNode,     TEX_NODE_SCALE,           0,                       "SCALE",           Scale,             "Scale",              "Add a Scale Texture node\nScales the size of an image"              )
DefNode(TextureNode,     TEX_NODE_AT,              0,                       "AT",              At,                "At",                 "Add a At Texture node\nReturns the color of a texture at the specified coordinates"              )
DefNode(TextureNode,     TEX_NODE_COMBINE_COLOR,   def_tex_combsep_color,   "COMBINE_COLOR",   CombineColor,      "Combine Color",      "Add a Combine Color Texture node\nCombines single colors to a rgb, hsv or hsl color value"              )
DefNode(TextureNode,     TEX_NODE_SEPARATE_COLOR,  def_tex_combsep_color,   "SEPARATE_COLOR",  SeparateColor,     "Separate Color",     "Add a Separate Color Texture node\nSeparates the values of a rgb, hsv or hsl color into its single values")
/* procedural textures */
DefNode(TextureNode,     TEX_NODE_PROC+TEX_VORONOI,  0,                     "TEX_VORONOI",     TexVoronoi,        "Voronoi",            "Add a Voronoi Texture node\nEvaluates a Worley Noise at the input texture coordinates"              )
DefNode(TextureNode,     TEX_NODE_PROC+TEX_BLEND,  0,                       "TEX_BLEND",       TexBlend,          "Blend",              "Add a Blend Texture node\nGenerates a smoothly interpolated progression"              )
DefNode(TextureNode,     TEX_NODE_PROC+TEX_MAGIC,  0,                       "TEX_MAGIC",       TexMagic,          "Magic",              "Add a Magic Texture node\nAdds a procedural psychedelic color texture"              )
DefNode(TextureNode,     TEX_NODE_PROC+TEX_MARBLE,  0,                      "TEX_MARBLE",      TexMarble,         "Marble",             "Add a Marble Texture node\nGenerates marble, fire, or noise with a structure"              )
DefNode(TextureNode,     TEX_NODE_PROC+TEX_CLOUDS,  0,                      "TEX_CLOUDS",      TexClouds,         "Clouds",             "Add a Clouds Texture node\nAdds Perlin noise"              )
DefNode(TextureNode,     TEX_NODE_PROC+TEX_WOOD,  0,                        "TEX_WOOD",        TexWood,           "Wood",               "Add a Wood Texture node\nGenerate wood and ring-shaped patterns"              )
DefNode(TextureNode,     TEX_NODE_PROC+TEX_MUSGRAVE,  0,                    "TEX_MUSGRAVE",    TexMusgrave,       "Musgrave",           "Add a Musgrave Texture node\nEvaluates a fractal Perlin noise at the input texture coordinates"              )
DefNode(TextureNode,     TEX_NODE_PROC+TEX_NOISE,  0,                       "TEX_NOISE",       TexNoise,          "Noise",              "Add a Noise Texture node\nRandom generated noise"              )
DefNode(TextureNode,     TEX_NODE_PROC+TEX_STUCCI,  0,                      "TEX_STUCCI",      TexStucci,         "Stucci",             "Add a Stucci Texture node\nNoise based, but gives structures for stone, asphalt etc"              )
DefNode(TextureNode,     TEX_NODE_PROC+TEX_DISTNOISE,  0,                   "TEX_DISTNOISE",   TexDistNoise,      "Distorted Noise",    "Add a Distorted Noise Texture node\nGenerate distorted noise"              )

DefNode(FunctionNode, FN_NODE_ALIGN_EULER_TO_VECTOR, 0,  "ALIGN_EULER_TO_VECTOR",  AlignEulerToVector,  "Align Euler to Vector",  "Add a Align Euler to Vector Function node\nAligns a euler value to a vector")
DefNode(FunctionNode, FN_NODE_ALIGN_ROTATION_TO_VECTOR, 0, "ALIGN_ROTATION_TO_VECTOR", AlignRotationToVector, "Align Rotation to Vector", "Add a Axes to Rotation Function node\Aligns a rotation to a vector")
DefNode(FunctionNode, FN_NODE_AXES_TO_ROTATION, 0, "AXES_TO_ROTATION", AxesToRotation, "Axes to Rotation", "Add a Rotation to Vector Function node\Create a rotation from a primary and (ideally orthogonal) secondary axis")
DefNode(FunctionNode, FN_NODE_AXIS_ANGLE_TO_ROTATION, 0, "AXIS_ANGLE_TO_ROTATION", AxisAngleToRotation, "Axis Angle to Rotation", "Add a Axis Angle to Rotation Function node\nConverts a axis angle to a rotation vector")
DefNode(FunctionNode, FN_NODE_BOOLEAN_MATH, 0,   "BOOLEAN_MATH",  BooleanMath,  "Boolean Math",  "Add a Boolean Math Function node\nPerforms a basic logical operation between its inputs")
DefNode(FunctionNode, FN_NODE_COMBINE_COLOR, 0,  "COMBINE_COLOR",  CombineColor,  "Combine Color",  "Add a Combine Color Function node\nCombines single colors to a rgb, hsv or hsl color value" )
DefNode(FunctionNode, FN_NODE_COMBINE_MATRIX, 0, "COMBINE_MATRIX", CombineMatrix, "Combine Matrix", "Construct a 4x4 matrix from its individual values")
DefNode(FunctionNode, FN_NODE_QUATERNION_TO_ROTATION, 0, "QUATERNION_TO_ROTATION", QuaternionToRotation, "Quaternion to Rotation", "Add a Quaternion to Rotation Function node\nConverts a axis angle to a rotation vector")
DefNode(FunctionNode, FN_NODE_COMBINE_TRANSFORM, 0, "COMBINE_TRANSFORM", CombineTransform, "Combine Transform", "")
DefNode(FunctionNode, FN_NODE_COMPARE, 0,  "COMPARE",  Compare,  "Compare",     "Add a Compare Function node\nAdds a mathematical compare between two inputs")
DefNode(FunctionNode, FN_NODE_EULER_TO_ROTATION, 0, "EULER_TO_ROTATION", EulerToRotation, "Euler to Rotation", "Add a Euler to Rotation Function node\nConverts a euler angle to a rotation vector")
DefNode(FunctionNode, FN_NODE_FLOAT_TO_INT, def_float_to_int,  "FLOAT_TO_INT",  FloatToInt,  "Float to Integer",  "Add a Float to Integer Function node\nConverts float values into integer values")
DefNode(FunctionNode, FN_NODE_INPUT_BOOL, def_fn_input_bool,  "INPUT_BOOL",  InputBool,  "Boolean",  "Add a Boolean Function node\nAdds a boolean that can be on or off")
DefNode(FunctionNode, FN_NODE_INPUT_COLOR, def_fn_input_color,  "INPUT_COLOR",  InputColor,  "Color",  "Add a Color Function node\nAdds a color picker that allows you to set a color")
DefNode(FunctionNode, FN_NODE_INPUT_INT, def_fn_input_int,  "INPUT_INT",  InputInt,  "Integer",  "Add a Integer Function node\nAllows to add a integer number")
DefNode(FunctionNode, FN_NODE_INPUT_ROTATION, def_fn_input_rotation, "INPUT_ROTATION", InputRotation, "Rotation", "")
DefNode(FunctionNode, FN_NODE_INPUT_SPECIAL_CHARACTERS,  0,  "INPUT_SPECIAL_CHARACTERS",  InputSpecialCharacters,  "Special Characters",  "Add a Special Character Function node\nAdd special characters")
DefNode(FunctionNode, FN_NODE_INPUT_STRING, def_fn_input_string,  "INPUT_STRING",  InputString,  "String",  "Add a String Function node\nAdds a string")
DefNode(FunctionNode, FN_NODE_INPUT_VECTOR, def_fn_input_vector,  "INPUT_VECTOR",  InputVector,  "Vector",  "Add a Vector Function Function node\nCreates a single vector of three values that can be used as an input")
DefNode(FunctionNode, FN_NODE_INVERT_MATRIX, 0, "INVERT_MATRIX", InvertMatrix, "Invert Matrix", "Add a Invert Matrix node")
DefNode(FunctionNode, FN_NODE_INVERT_ROTATION, 0, "INVERT_ROTATION", InvertRotation, "Invert Rotation", "Add a Invert Rotation Function node\nInverts a rotation verctor")
DefNode(FunctionNode, FN_NODE_MATRIX_MULTIPLY, 0, "MATRIX_MULTIPLY", MatrixMultiply, "Multiply Matrices", "")
DefNode(FunctionNode, FN_NODE_PROJECT_POINT, 0, "PROJECT_POINT", ProjectPoint, "Project Point", "Project a point using a matrix, using location, rotation, scale, and perspective divide")
DefNode(FunctionNode, FN_NODE_RANDOM_VALUE, def_fn_random_value,  "RANDOM_VALUE",  RandomValue,  "Random Value",  "Add a Random Value Function node\nAdds a random value")
DefNode(FunctionNode, FN_NODE_REPLACE_STRING, 0,  "REPLACE_STRING",  ReplaceString,  "Replace String",  "Add a Replace String Function node\nAllows you to replace a string")
DefNode(FunctionNode, FN_NODE_ROTATE_EULER, def_fn_rotate_euler,  "ROTATE_EULER",  RotateEuler,  "Rotate Euler",  "Add a Rotate Euler Function node\nRotate in euler angles")
DefNode(FunctionNode, FN_NODE_ROTATE_ROTATION, 0, "ROTATE_ROTATION", RotateRotation, "Rotate Rotation",  "Add a Rotate Rotation node\nRotate euler by another euler angle")
DefNode(FunctionNode, FN_NODE_ROTATE_VECTOR, 0, "ROTATE_VECTOR", RotateVector, "Rotate Vector", "Add a Rotate Vector Function node\nRotate by a rotation vector")
DefNode(FunctionNode, FN_NODE_ROTATION_TO_AXIS_ANGLE, 0, "ROTATION_TO_AXIS_ANGLE", RotationToAxisAngle, "Rotation to Axis Angle", "Add a Rotation to Axis Angle Function node\nConverts a rotation vector to a axis angle")
DefNode(FunctionNode, FN_NODE_ROTATION_TO_EULER, 0, "ROTATION_TO_EULER", RotationToEuler, "Rotation to Euler", "Add a Rotation to Euler Function node\nConverts a rotation vector to an euler angle vector")
DefNode(FunctionNode, FN_NODE_SEPARATE_COLOR, 0,  "SEPARATE_COLOR",  SeparateColor,  "Separate Color",  "Add a Separate Color Function node\nSeparates the values of a rgb, hsv or hsl color into its single values" )
DefNode(FunctionNode, FN_NODE_SEPARATE_MATRIX, 0, "SEPARATE_MATRIX", SeparateMatrix, "Separate Matrix", "Split a 4x4 matrix into its individual values")
DefNode(FunctionNode, FN_NODE_ROTATION_TO_QUATERNION, 0, "ROTATION_TO_QUATERNION", RotationToQuaternion, "Rotation to Quaternion", "Add a Rotation to Quaternion Function node\nConverts a rotation vector to an quaternion angle vector")
DefNode(FunctionNode, FN_NODE_SEPARATE_TRANSFORM, 0, "SEPARATE_TRANSFORM", SeparateTransform, "Separate Transform", "Add a Separate Transform node")
DefNode(FunctionNode, FN_NODE_SLICE_STRING, 0,  "SLICE_STRING",  SliceString,  "Slice String",  "Add a Slice String Function node\nAllows to slice an input string")
DefNode(FunctionNode, FN_NODE_STRING_LENGTH, 0,  "STRING_LENGTH",  StringLength,  "String Length",  "Add a String Length Function node\nCalculate the length of a string")
DefNode(FunctionNode, FN_NODE_TRANSFORM_DIRECTION, 0, "TRANSFORM_DIRECTION", TransformDirection, "Transform Direction", "Add a Transform Direction node")
DefNode(FunctionNode, FN_NODE_TRANSFORM_POINT, 0, "TRANSFORM_POINT", TransformPoint, "Transform Point", "Add a Transform Point node")
DefNode(FunctionNode, FN_NODE_TRANSPOSE_MATRIX, 0, "TRANSPOSE_MATRIX", TransposeMatrix, "Transpose Matrix", "Add a Transpose Matrix node")
DefNode(FunctionNode, FN_NODE_VALUE_TO_STRING, 0,  "VALUE_TO_STRING",  ValueToString,  "Value to String",  "Add a Value to String Function node\nConverts a value to a text string")

DefNode(GeometryNode, GEO_NODE_ACCUMULATE_FIELD, 0, "ACCUMULATE_FIELD", AccumulateField, "Accumulate Field", "Add a Accumulate Field Geometry node\nAdd the values of an evaluated field together and output the running total for each element")
DefNode(GeometryNode, GEO_NODE_ATTRIBUTE_DOMAIN_SIZE, 0, "ATTRIBUTE_DOMAIN_SIZE", AttributeDomainSize, "Domain Size", "Add a Domain Size Geometry node\nRetrieve the number of elements in a geometry for each attribute domain")
DefNode(GeometryNode, GEO_NODE_ATTRIBUTE_STATISTIC, 0, "ATTRIBUTE_STATISTIC",AttributeStatistic, "Attribute Statistic", "Add a Attribute Statistic Geometry node\nCalculate statistics about a data set from a field evaluated on a geometry")
DefNode(GeometryNode, GEO_NODE_BAKE, rna_def_geo_bake, "BAKE", Bake, "Bake", "Add a Bake Geometry node\nCache the incoming data so that it can be used without recomputation")
DefNode(GeometryNode, GEO_NODE_BLUR_ATTRIBUTE, 0, "BLUR_ATTRIBUTE", BlurAttribute, "Blur Attribute", "Add a Blur Attribute Geometry node\nMix attribute values of neighboring elements")
DefNode(GeometryNode, GEO_NODE_BOUNDING_BOX, 0, "BOUNDING_BOX", BoundBox, "Bounding Box", "Add a Bounding Box Geometry node\nCalculate the limits of a geometry's positions and generate a box mesh with those dimensions")
DefNode(GeometryNode, GEO_NODE_CAPTURE_ATTRIBUTE, 0, "CAPTURE_ATTRIBUTE", CaptureAttribute, "Capture Attribute", "Add a Capture Attribute Geometry node\nStore the result of a field on a geometry and output the data as a node socket. Allows remembering or interpolating data as the geometry changes, such as positions before deformation")
DefNode(GeometryNode, GEO_NODE_COLLECTION_INFO, 0, "COLLECTION_INFO", CollectionInfo, "Collection Info", "Add a Collection Info Geometry node\nRetrieve geometry instances from a collection")
DefNode(GeometryNode, GEO_NODE_CONVEX_HULL, 0, "CONVEX_HULL", ConvexHull, "Convex Hull", "Add a Convex Hull Geometry node\nCreate a mesh that encloses all points in the input geometry with the smallest number of points")
DefNode(GeometryNode, GEO_NODE_CURVE_ENDPOINT_SELECTION, 0, "CURVE_ENDPOINT_SELECTION", CurveEndpointSelection, "Endpoint Selection", "Add a Endpoint Selection Geometry node\nProvide a selection for an arbitrary number of endpoints in each spline")
DefNode(GeometryNode, GEO_NODE_CURVE_HANDLE_TYPE_SELECTION, def_geo_curve_handle_type_selection, "CURVE_HANDLE_TYPE_SELECTION", CurveHandleTypeSelection, "Handle Type Selection", "Add a Handle Type Selection Geometry node\nProvide a selection based on the handle types of Bézier control points")
DefNode(GeometryNode, GEO_NODE_CURVE_LENGTH, 0, "CURVE_LENGTH", CurveLength, "Curve Length", "Add a Curve Length Geometry node\nRetrieve the length of all splines added together")
DefNode(GeometryNode, GEO_NODE_CURVE_PRIMITIVE_ARC, 0, "CURVE_PRIMITIVE_ARC",CurveArc, "Arc", "Add a Arc Geometry node\nGenerate a poly spline arc")
DefNode(GeometryNode, GEO_NODE_CURVE_PRIMITIVE_BEZIER_SEGMENT, 0, "CURVE_PRIMITIVE_BEZIER_SEGMENT", CurvePrimitiveBezierSegment, "Bézier Segment", "Add a Bezier Segment Geometry node\nGenerate a 2D Bézier spline from the given control points and handles")
DefNode(GeometryNode, GEO_NODE_CURVE_PRIMITIVE_CIRCLE,0, "CURVE_PRIMITIVE_CIRCLE", CurvePrimitiveCircle, "Curve Circle", "Add a Curve Circle Geometry node\nGenerate a poly spline circle")
DefNode(GeometryNode, GEO_NODE_CURVE_PRIMITIVE_LINE, 0, "CURVE_PRIMITIVE_LINE", CurvePrimitiveLine, "Curve Line", "Add a Curve Line Geometry node\nGenerate a poly spline line with two points")
DefNode(GeometryNode, GEO_NODE_CURVE_PRIMITIVE_QUADRATIC_BEZIER, 0, "CURVE_PRIMITIVE_QUADRATIC_BEZIER", CurveQuadraticBezier, "Quadratic Bézier", "Add a Quadratic Bezier Geometry node\nGenerate a poly spline in a parabola shape with control points positions")
DefNode(GeometryNode, GEO_NODE_CURVE_PRIMITIVE_QUADRILATERAL, 0, "CURVE_PRIMITIVE_QUADRILATERAL", CurvePrimitiveQuadrilateral, "Quadrilateral", "Add a Curve Quadrilateral node\nGenerate a polygon with four points")
DefNode(GeometryNode, GEO_NODE_CURVE_PRIMITIVE_SPIRAL,0, "CURVE_PRIMITIVE_SPIRAL", CurveSpiral, "Curve Spiral", "Add a Curve Spiral Geometry node\nGenerate a poly spline in a spiral shape")
DefNode(GeometryNode, GEO_NODE_CURVE_PRIMITIVE_STAR, 0, "CURVE_PRIMITIVE_STAR", CurveStar, "Star", "Add a Star Geometry node\nGenerate a poly spline in a star pattern by connecting alternating points of two circles")
DefNode(GeometryNode, GEO_NODE_CURVE_SET_HANDLE_TYPE, def_geo_curve_set_handle_type, "CURVE_SET_HANDLES", CurveSetHandles, "Set Handle Type", "Add a Set Handle Type Geometry node\nSet the handle type for the control points of a Bézier curve")
DefNode(GeometryNode, GEO_NODE_CURVE_SPLINE_PARAMETER,0, "SPLINE_PARAMETER", SplineParameter, "Spline Parameter", "Add a Spline Parameter Geometry node\nRetrieve how far along each spline a control point is")
DefNode(GeometryNode, GEO_NODE_CURVE_SPLINE_TYPE, 0, "CURVE_SPLINE_TYPE", CurveSplineType, "Set Spline Type", "Add a Set Spline Type Geometry node\nChange the type of curves")
DefNode(GeometryNode, GEO_NODE_CURVE_TO_MESH, 0, "CURVE_TO_MESH", CurveToMesh, "Curve to Mesh", "Add a Curve to Mesh Geometry node\nConvert curves into a mesh, optionally with a custom profile shape defined by curves")
DefNode(GeometryNode, GEO_NODE_CURVE_TO_POINTS, 0, "CURVE_TO_POINTS", CurveToPoints, "Curve to Points", "Add a Curve to Points Geometry node\nGenerate a point cloud by sampling positions along curves")
DefNode(GeometryNode, GEO_NODE_CURVE_TOPOLOGY_CURVE_OF_POINT, 0, "CURVE_OF_POINT", CurveOfPoint, "Curve of Point", "Add a Curve of Point Geometry node\nRetrieve the curve a control point is part of")
DefNode(GeometryNode, GEO_NODE_CURVE_TOPOLOGY_POINTS_OF_CURVE, 0, "POINTS_OF_CURVE", PointsOfCurve, "Points of Curve", "Add a Points of Curve Geometry node\nRetrieve a point index within a curve")
DefNode(GeometryNode, GEO_NODE_DEFORM_CURVES_ON_SURFACE, 0, "DEFORM_CURVES_ON_SURFACE", DeformCurvesOnSurface, "Deform Curves on Surface", "Add a Deform Curves on Surface Geometry node\nTranslate and rotate curves based on changes between the object's original and evaluated surface mesh")
DefNode(GeometryNode, GEO_NODE_DELETE_GEOMETRY, 0, "DELETE_GEOMETRY", DeleteGeometry, "Delete Geometry", "Add a Delete Geometry Geometry node\nRemove selected elements of a geometry")
DefNode(GeometryNode, GEO_NODE_DISTRIBUTE_POINTS_IN_GRID, 0, "DISTRIBUTE_POINTS_IN_GRID", DistributePointsInGrid, "Distribute Points in Grid", "Generate points inside a volume grid")
DefNode(GeometryNode, GEO_NODE_DISTRIBUTE_POINTS_IN_VOLUME, 0, "DISTRIBUTE_POINTS_IN_VOLUME", DistributePointsInVolume, "Distribute Points in Volume", "Add a Distribute Points in Volume Geometry node\nGenerate points inside a volume")
DefNode(GeometryNode, GEO_NODE_DISTRIBUTE_POINTS_ON_FACES, def_geo_distribute_points_on_faces, "DISTRIBUTE_POINTS_ON_FACES", DistributePointsOnFaces, "Distribute Points on Faces", "Add a Distribute Points on Faces Geometry node\nGenerate points spread out on the surface of a mesh")
DefNode(GeometryNode, GEO_NODE_DUAL_MESH, 0, "DUAL_MESH", DualMesh, "Dual Mesh", "Add a Dual Mesh Geometry node\nConvert Faces into vertices and vertices into faces")
DefNode(GeometryNode, GEO_NODE_DUPLICATE_ELEMENTS, 0, "DUPLICATE_ELEMENTS", DuplicateElements,  "Duplicate Elements",  "Add a Duplicate Elements Geometry Node\nDuplicates the selected mesh element")
DefNode(GeometryNode, GEO_NODE_EDGE_PATHS_TO_CURVES, 0, "EDGE_PATHS_TO_CURVES", EdgePathsToCurves, "Edge Paths to Curves", "Add a Edge Paths to Curves Geometry Node\nConverts Edge Paths to curves")
DefNode(GeometryNode, GEO_NODE_EDGE_PATHS_TO_SELECTION, 0, "EDGE_PATHS_TO_SELECTION", EdgePathsToSelection, "Edge Paths to Selection", "Add a Edge Paths to Selection Geometry Node\nDefines a edge path with given input vertices and converts it to a selection")
DefNode(GeometryNode, GEO_NODE_EDGES_TO_FACE_GROUPS, 0, "EDGES_TO_FACE_GROUPS", EdgesToFaceGroups, "Edges to Face Groups", "Add a Edges to Face Groups Geometry Node\nGroup faces into regions surrounded by the selected boundary edges")
DefNode(GeometryNode, GEO_NODE_EVALUATE_AT_INDEX, 0, "FIELD_AT_INDEX", FieldAtIndex, "Evaluate at Index", "Add a Evaluate at Index Geometry Node\nRetrieve data of other elements in the context's geometry")
DefNode(GeometryNode, GEO_NODE_EVALUATE_ON_DOMAIN, 0, "FIELD_ON_DOMAIN", FieldOnDomain, "Evaluate on Domain", "Add a Evaluate on Domain Geometry Node\nRRetrieve values from a field on a different domain besides the domain from the context")
DefNode(GeometryNode, GEO_NODE_EXTRUDE_MESH, 0, "EXTRUDE_MESH", ExtrudeMesh, "Extrude Mesh", "Add a Extrude Mesh Geometry node\nGenerate new vertices, edges, or faces from selected elements and move them based on an offset while keeping them connected by their boundary")
DefNode(GeometryNode, GEO_NODE_FILL_CURVE, 0, "FILL_CURVE", FillCurve, "Fill Curve", "Add a Fill Curve Geometry node\nGenerate a mesh on the XY plane with faces on the inside of input curves")
DefNode(GeometryNode, GEO_NODE_FILLET_CURVE, 0, "FILLET_CURVE", FilletCurve, "Fillet Curve", "Add a Fillet Curve Geometry node\nRound corners by generating circular arcs on each control point")
DefNode(GeometryNode, GEO_NODE_FLIP_FACES, 0, "FLIP_FACES", FlipFaces, "Flip Faces", "Add a Flip Faces Geometry node\nReverse the order of the vertices and edges of selected faces, flipping their normal direction")
DefNode(GeometryNode, GEO_NODE_GEOMETRY_TO_INSTANCE, 0, "GEOMETRY_TO_INSTANCE", GeometryToInstance, "Geometry to Instance", "Add a Geometry to Instance Geometry node\nConvert each input geometry into an instance, which can be much faster than the Join Geometry node when the inputs are large")
DefNode(GeometryNode, GEO_NODE_GET_NAMED_GRID, 0, "GET_NAMED_GRID", GetNamedGrid, "Get Named Grid", "Get volume grid from a volume geometry with the specified name")
DefNode(GeometryNode, GEO_NODE_GRID_TO_MESH, 0, "GRID_TO_MESH", GridToMesh, "Grid to Mesh", "Generate a mesh on the \"surface\" of a volume grid")
DefNode(GeometryNode, GEO_NODE_IMAGE_INFO, 0, "IMAGE_INFO", ImageInfo, "Image Info", "Add an Image Info Geometry node\nRetrieve information about an image")
DefNode(GeometryNode, GEO_NODE_IMAGE_TEXTURE, def_geo_image_texture, "IMAGE_TEXTURE", ImageTexture, "Image Texture", "Add an Image Texture node\nSample values from an image texture")
DefNode(GeometryNode, GEO_NODE_IMAGE, def_geo_image, "IMAGE", InputImage, "Image", "Add an Image Input node\nInput image")
DefNode(GeometryNode, GEO_NODE_INDEX_OF_NEAREST, 0, "INDEX_OF_NEAREST", IndexOfNearest, "Index of Nearest", "Add an Index of Nearest node\nFind the nearest element in a group. Similar to the \"Sample Nearest\" node")
DefNode(GeometryNode, GEO_NODE_INDEX_SWITCH, def_geo_index_switch, "INDEX_SWITCH", IndexSwitch, "Index Switch", "Add an Index Switch node\nChoose between an arbitrary number of values with an index")
DefNode(GeometryNode, GEO_NODE_INPUT_ACTIVE_CAMERA, 0, "INPUT_ACTIVE_CAMERA", InputActiveCamera, "Active Camera", "Add an Active Camera node\nRetrieve the scene's active camera")
DefNode(GeometryNode, GEO_NODE_INPUT_CURVE_HANDLES, 0, "INPUT_CURVE_HANDLES", InputCurveHandlePositions, "Curve Handle Positions", "Add a Curve Handle Positions node\nRetrieve the position of each Bézier control point's handles")
DefNode(GeometryNode, GEO_NODE_INPUT_CURVE_TILT, 0, "INPUT_CURVE_TILT", InputCurveTilt, "Curve Tilt", "Add a Curve Tilt node\nRetrieve the angle at each control point used to twist the curve's normal around its tangent")
DefNode(GeometryNode, GEO_NODE_INPUT_EDGE_SMOOTH, 0, "INPUT_EDGE_SMOOTH", InputEdgeSmooth, "Is Edge Smooth", "Add a Is Edge Smooth node\nSRetrieve whether each edge is marked for smooth or split normals")
DefNode(GeometryNode, GEO_NODE_INPUT_FACE_SMOOTH, 0, "INPUT_SHADE_SMOOTH", InputShadeSmooth, "Is Face Smooth", "Add a Is Shade Smooth node\nRetrieve whether each face is marked for smooth or sharp normals")
DefNode(GeometryNode, GEO_NODE_INPUT_ID, 0, "INPUT_ID", InputID, "ID", "Add an ID node\nRetrieve a stable random identifier value from the \"id\" attribute on the point domain, or the index if the attribute does not exist")
DefNode(GeometryNode, GEO_NODE_INPUT_INDEX, 0, "INDEX", InputIndex, "Index", "Add a Index node\nRetrieve an integer value indicating the position of each element in the list, starting at zero")
DefNode(GeometryNode, GEO_NODE_INPUT_INSTANCE_ROTATION, 0, "INPUT_INSTANCE_ROTATION", InputInstanceRotation, "Instance Rotation", "Add a Instance Rotation node\nRetrieve the rotation of each instance in the geometry")
DefNode(GeometryNode, GEO_NODE_INPUT_INSTANCE_SCALE, 0, "INPUT_INSTANCE_SCALE", InputInstanceScale, "Instance Scale", "Add a Instanec Scale node\nRetrieve the scale of each instance in the geometry")
DefNode(GeometryNode, GEO_NODE_INPUT_MATERIAL_INDEX, 0, "INPUT_MATERIAL_INDEX", InputMaterialIndex, "Material Index", "Add a Material Index node\nRetrieve the index of the material used for each element in the geometry's list of materials")
DefNode(GeometryNode, GEO_NODE_INPUT_MATERIAL, def_geo_input_material, "INPUT_MATERIAL", InputMaterial, "Material", "Add a Material node\nOutput a single material")
DefNode(GeometryNode, GEO_NODE_INPUT_MESH_EDGE_ANGLE, 0, "MESH_EDGE_ANGLE", InputMeshEdgeAngle, "Edge Angle", "Add an Edge Angle node\nCalculate the surface area of each face in a mesh")
DefNode(GeometryNode, GEO_NODE_INPUT_MESH_EDGE_NEIGHBORS, 0, "MESH_EDGE_NEIGHBORS",InputMeshEdgeNeighbors, "Edge Neighbors", "Add an Edge neighbors node\nRetrieve the number of faces that use each edge as one of their sides")
DefNode(GeometryNode, GEO_NODE_INPUT_MESH_EDGE_VERTICES, 0, "MESH_EDGE_VERTICES", InputMeshEdgeVertices, "Edge Vertices", "Add an Edge Vertices node\nRetrieve topology information relating to each edge of a mesh")
DefNode(GeometryNode, GEO_NODE_INPUT_MESH_FACE_AREA, 0, "MESH_FACE_AREA", InputMeshFaceArea, "Face Area", "Add a Face Area node\nCalculate the surface area of a mesh's faces")
DefNode(GeometryNode, GEO_NODE_INPUT_MESH_FACE_IS_PLANAR, 0, "MESH_FACE_IS_PLANAR", InputMeshFaceIsPlanar, "Is Face Planar", "Add a Is Face Planar node\nRetrieve whether all triangles in a face are on the same plane, i.e. whether they have the same normal")
DefNode(GeometryNode, GEO_NODE_INPUT_MESH_FACE_NEIGHBORS, 0, "MESH_FACE_NEIGHBORS",InputMeshFaceNeighbors, "Face Neighbors", "Add a Face Neighbors node\nRetrieve topology information relating to each face of a mesh")
DefNode(GeometryNode, GEO_NODE_INPUT_MESH_ISLAND, 0, "MESH_ISLAND", InputMeshIsland, "Mesh Island", "Add a Mesh Island node\nRetrieve information about separate connected regions in a mesh")
DefNode(GeometryNode, GEO_NODE_INPUT_MESH_VERTEX_NEIGHBORS, 0, "MESH_VERTEX_NEIGHBORS", InputMeshVertexNeighbors, "Vertex Neighbors", "Add a Vertex Neighbors node\nRetrieve topology information relating to each vertex of a mesh")
DefNode(GeometryNode, GEO_NODE_INPUT_NAMED_ATTRIBUTE, 0, "INPUT_ATTRIBUTE", InputNamedAttribute, "Named Attribute", "Add a Named Attributes node\nRetrieve the data of a specified attribute")
DefNode(GeometryNode, GEO_NODE_INPUT_NAMED_LAYER_SELECTION, 0, "INPUT_NAMED_LAYER_SELECTION", InputNamedLayerSelection, "Add a Input Named Layer Selection node\nNamed Layer Selection", "Output a selection of a grease pencil layer")
DefNode(GeometryNode, GEO_NODE_INPUT_NORMAL, 0, "INPUT_NORMAL", InputNormal, "Normal", "Add a Normal node\nRetrieve a unit length vector indicating the direction pointing away from the geometry at each element")
DefNode(GeometryNode, GEO_NODE_INPUT_POSITION, 0, "POSITION", InputPosition, "Position", "Add a Position node\nRetrieve a vector indicating the location of each element")
DefNode(GeometryNode, GEO_NODE_INPUT_RADIUS, 0, "INPUT_RADIUS", InputRadius, "Radius", "Add a Radius node\nRetrieve the radius at each point on curve or point cloud geometry")
DefNode(GeometryNode, GEO_NODE_INPUT_SCENE_TIME, 0, "INPUT_SCENE_TIME", InputSceneTime, "Scene Time", "Add a Scene Time node\nRetrieve the current time in the scene's animation in units of seconds or frames")
DefNode(GeometryNode, GEO_NODE_INPUT_SHORTEST_EDGE_PATHS, 0, "SHORTEST_EDGE_PATHS", InputShortestEdgePaths, "Shortest Edge Paths", "Add a Shortest Edge Paths node\n Retrieve the shortest edge paths on select geometry")
DefNode(GeometryNode, GEO_NODE_INPUT_SPLINE_CYCLIC, 0, "INPUT_SPLINE_CYCLIC",InputSplineCyclic, "Is Spline Cyclic", "Add a Is Spline Cyclic node\nRetrieve whether each spline endpoint connects to the beginning")
DefNode(GeometryNode, GEO_NODE_INPUT_SPLINE_LENGTH, 0, "SPLINE_LENGTH", SplineLength, "Spline Length", "Add a Spline Length node\nRetrieve the total length of each spline, as a distance or as a number of points")
DefNode(GeometryNode, GEO_NODE_INPUT_SPLINE_RESOLUTION, 0, "INPUT_SPLINE_RESOLUTION", InputSplineResolution, "Spline Resolution", "Add a Spline Resolution node\nRetrieve the number of evaluated points that will be generated for every control point on curves")
DefNode(GeometryNode, GEO_NODE_INPUT_TANGENT, 0, "INPUT_TANGENT", InputTangent, "Curve Tangent", "Add a Curve Tangent node\nRetrieve the direction of curves at each control point")
DefNode(GeometryNode, GEO_NODE_INSTANCE_ON_POINTS, 0, "INSTANCE_ON_POINTS", InstanceOnPoints, "Instance on Points", "Add a Instance on Points node\nGenerate a reference to geometry at each of the input points, without duplicating its underlying data")
DefNode(GeometryNode, GEO_NODE_INSTANCES_TO_POINTS, 0, "INSTANCES_TO_POINTS",InstancesToPoints, "Instances to Points", "Add a Instances to Points node\nGenerate points at the origins of instances.\nNote: Nested instances are not affected by this node")
DefNode(GeometryNode, GEO_NODE_INTERPOLATE_CURVES, 0, "INTERPOLATE_CURVES", InterpolateCurves, "Interpolate Curves", "Add a Interpolate Curves node\nGenerate new curves on points by interpolating between existing curves")
DefNode(GeometryNode, GEO_NODE_IS_VIEWPORT, 0, "IS_VIEWPORT", IsViewport, "Is Viewport", "Add a Is Viewport node\nRetrieve whether the nodes are being evaluated for the viewport rather than the final render")
DefNode(GeometryNode, GEO_NODE_JOIN_GEOMETRY, 0, "JOIN_GEOMETRY", JoinGeometry, "Join Geometry", "Add a Join Geometry node\nMerge separately generated geometries into a single one")
DefNode(GeometryNode, GEO_NODE_MATERIAL_SELECTION, 0, "MATERIAL_SELECTION", MaterialSelection, "Add a Material Selection node", "Add a Material Selection node\nProvide a selection of faces that use the specified material")
DefNode(GeometryNode, GEO_NODE_MENU_SWITCH, def_geo_menu_switch, "MENU_SWITCH", MenuSwitch, "Menu Switch", "Add a Menu Switch node\nSelect from multiple inputs by name")
DefNode(GeometryNode, GEO_NODE_MERGE_BY_DISTANCE, 0, "MERGE_BY_DISTANCE", MergeByDistance, "Merge by Distance", "Add a Merge by Distance Geometry node\nMerge vertices or points within a given distance")
DefNode(GeometryNode, GEO_NODE_MESH_BOOLEAN, 0, "MESH_BOOLEAN", MeshBoolean, "Mesh Boolean", "Add a Mesh Boolean Geometry node\nCut, subtract, or join multiple mesh inputs")
DefNode(GeometryNode, GEO_NODE_MESH_FACE_GROUP_BOUNDARIES, 0, "MESH_FACE_SET_BOUNDARIES", MeshFaceSetBoundaries, "Face Group Boundaries", "Add a Face Group Boundaries Geometry node\nFind edges on the boundaries between groups of faces with the same ID value")
DefNode(GeometryNode, GEO_NODE_MESH_PRIMITIVE_CIRCLE, 0, "MESH_PRIMITIVE_CIRCLE", MeshCircle, "Mesh Circle", "Add a Mesh Circle Geometry node\nGenerate a circular ring of edges")
DefNode(GeometryNode, GEO_NODE_MESH_PRIMITIVE_CONE, 0, "MESH_PRIMITIVE_CONE",MeshCone, "Cone", "Add a Cone Geometry node\nGenerate a cone mesh")
DefNode(GeometryNode, GEO_NODE_MESH_PRIMITIVE_CUBE, 0, "MESH_PRIMITIVE_CUBE",MeshCube, "Cube", "Add a Cube Geometry node\nGenerate a cuboid mesh with variable side lengths and subdivisions")
DefNode(GeometryNode, GEO_NODE_MESH_PRIMITIVE_CYLINDER, 0, "MESH_PRIMITIVE_CYLINDER", MeshCylinder, "Cylinder", "Add a Cylinder Geometry node\nGenerate a cylinder mesh")
DefNode(GeometryNode, GEO_NODE_MESH_PRIMITIVE_GRID, 0, "MESH_PRIMITIVE_GRID",MeshGrid, "Grid", "Add a Grid Geometry node\nGenerate a planar mesh on the XY plane")
DefNode(GeometryNode, GEO_NODE_MESH_PRIMITIVE_ICO_SPHERE, 0, "MESH_PRIMITIVE_ICO_SPHERE", MeshIcoSphere, "Ico Sphere", "Add a Ico Sphere Geometry node\nGenerate a spherical mesh that consists of equally sized triangles")
DefNode(GeometryNode, GEO_NODE_MESH_PRIMITIVE_LINE, 0, "MESH_PRIMITIVE_LINE",MeshLine, "Mesh Line", "Add a Mesh Line Geometry node\nGenerate vertices in a line and connect them with edges")
DefNode(GeometryNode, GEO_NODE_MESH_PRIMITIVE_UV_SPHERE, 0, "MESH_PRIMITIVE_UV_SPHERE", MeshUVSphere, "UV Sphere", "Add a UV Sphere Geometry node\nGenerate a spherical mesh with quads, except for triangles at the top and bottom")
DefNode(GeometryNode, GEO_NODE_MESH_TO_CURVE, 0, "MESH_TO_CURVE", MeshToCurve, "Mesh to Curve", "Add a Mesh to Curve Geometry node\nGenerate a curve from a mesh")
DefNode(GeometryNode, GEO_NODE_MESH_TO_DENSITY_GRID, 0, "MESH_TO_DENSITY_GRID", MeshToDensityGrid, "Mesh to Density Grid", "Create a filled volume grid from a mesh")
DefNode(GeometryNode, GEO_NODE_MESH_TO_POINTS, 0, "MESH_TO_POINTS", MeshToPoints, "Mesh to Points", "Add a Mesh to Points Geometry node\nGenerate a point cloud from a mesh's vertices")
DefNode(GeometryNode, GEO_NODE_MESH_TO_SDF_GRID, 0, "MESH_TO_SDF_GRID", MeshToSDFGrid, "Mesh to SDF Grid", "Create a signed distance volume grid from a mesh")
DefNode(GeometryNode, GEO_NODE_MESH_TO_VOLUME, 0, "MESH_TO_VOLUME", MeshToVolume, "Mesh to Volume", "Add a Mesh to Volume Geometry node\nCreate a fog volume with the shape of the input mesh's surface")
DefNode(GeometryNode, GEO_NODE_MESH_TOPOLOGY_CORNERS_OF_EDGE, 0, "CORNERS_OF_EDGE", CornersOfEdge, "Corners of Edge", "Add a Corners of Edge Geometry node\nRetrieve face corners connected to edges")
DefNode(GeometryNode, GEO_NODE_MESH_TOPOLOGY_CORNERS_OF_FACE, 0, "CORNERS_OF_FACE", CornersOfFace, "Corners of Face", "Add a Corners of Face Geometry node\nRetrieve corners that make up a face")
DefNode(GeometryNode, GEO_NODE_MESH_TOPOLOGY_CORNERS_OF_VERTEX, 0, "CORNERS_OF_VERTEX", CornersOfVertex, "Corners of Vertex", "Add a Corners of Vertex Geometry node\nRetrieve face corners connected to vertices")
DefNode(GeometryNode, GEO_NODE_MESH_TOPOLOGY_EDGES_OF_CORNER, 0, "EDGES_OF_CORNER", EdgesOfCorner, "Edges of Corner", "Add a Edges of Corner Geometry node\nRetrieve the edges on both sides of a face corner")
DefNode(GeometryNode, GEO_NODE_MESH_TOPOLOGY_EDGES_OF_VERTEX, 0, "EDGES_OF_VERTEX", EdgesOfVertex, "Edges of Vertex", "Add a Edges of Vertex Geometry node\nRetrieve the edges connected to each vertex")
DefNode(GeometryNode, GEO_NODE_MESH_TOPOLOGY_FACE_OF_CORNER, 0, "FACE_OF_CORNER", FaceOfCorner, "Face of Corner", "Add a Face of Corner Geometry node\nRetrieve the face each face corner is part of")
DefNode(GeometryNode, GEO_NODE_MESH_TOPOLOGY_OFFSET_CORNER_IN_FACE, 0, "OFFSET_CORNER_IN_FACE", OffsetCornerInFace, "Offset Corner in Face", "Add a Offset Corner in Face Geometry node\nRetrieve corners in the same face as another")
DefNode(GeometryNode, GEO_NODE_MESH_TOPOLOGY_VERTEX_OF_CORNER, 0, "VERTEX_OF_CORNER", VertexOfCorner, "Vertex of Corner", "Add a Vertex of Corner Geometry node\nRetrieve the vertex each face corner is attached to")
DefNode(GeometryNode, GEO_NODE_OBJECT_INFO, 0, "OBJECT_INFO", ObjectInfo, "Object Info", "Add a Object Info Geometry node\nRetrieve information from an object")
DefNode(GeometryNode, GEO_NODE_OFFSET_POINT_IN_CURVE, 0, "OFFSET_POINT_IN_CURVE", OffsetPointInCurve, "Offset Point in Curve", "Add a Offset Point in Curve Geometry node\nOffset a control point index within its curve")
DefNode(GeometryNode, GEO_NODE_POINTS_TO_CURVES, 0, "POINTS_TO_CURVES", PointsToCurves, "Points to Curves", "Add a Points to Curves node\nSplit all points to curve by its group ID and reorder by weight")
DefNode(GeometryNode, GEO_NODE_POINTS_TO_SDF_GRID, 0, "POINTS_TO_SDF_GRID", PointsToSDFGrid, "Points to SDF Grid", "Create a signed distance volume grid from points")
DefNode(GeometryNode, GEO_NODE_POINTS_TO_VERTICES, 0, "POINTS_TO_VERTICES", PointsToVertices, "Points to Vertices", "Add a Points to Vertices Geometry node\nGenerate a mesh vertex for each point cloud point")
DefNode(GeometryNode, GEO_NODE_POINTS_TO_VOLUME, 0, "POINTS_TO_VOLUME", PointsToVolume, "Points to Volume", "Add a Points to Volume Geometry node\nGenerate a fog volume sphere around every point")
DefNode(GeometryNode, GEO_NODE_POINTS, 0, "POINTS", Points, "Points", "Add a Points Geometry node\nGenerate a point cloud with positions and radii defined by fields")
DefNode(GeometryNode, GEO_NODE_PROXIMITY, 0, "PROXIMITY", Proximity, "Geometry Proximity", "Add a Switch Geometry node\nCompute the closest location on the target geometry")
DefNode(GeometryNode, GEO_NODE_RAYCAST, 0, "RAYCAST", Raycast, "Raycast", "Add a Raycast Geometry node\nCast rays from the context geometry onto a target geometry, and retrieve information from each hit point")
DefNode(GeometryNode, GEO_NODE_REALIZE_INSTANCES, 0, "REALIZE_INSTANCES", RealizeInstances, "Realize Instances", "Add a Realize Instances Geometry node\nConvert instances into real geometry data")
DefNode(GeometryNode, GEO_NODE_REMOVE_ATTRIBUTE, 0, "REMOVE_ATTRIBUTE", RemoveAttribute, "Remove Named Attribute", "Add a Remove Named Attribute Geometry node\nDelete an attribute with a specified name from a geometry. Typically used to optimize performance")
DefNode(GeometryNode, GEO_NODE_REPEAT_INPUT, def_geo_repeat_input, "REPEAT_INPUT", RepeatInput, "Repeat Input", "Add a Repeat Input  Geometry node\nStarts a serial loop for a chain of nodes a number of times")
DefNode(GeometryNode, GEO_NODE_REPEAT_OUTPUT, def_geo_repeat_output, "REPEAT_OUTPUT", RepeatOutput, "Repeat Output", "Add a Repeat Output Geometry node\nEnds a serial loop for a chain of nodes a number of times")
DefNode(GeometryNode, GEO_NODE_REPLACE_MATERIAL, 0, "REPLACE_MATERIAL", ReplaceMaterial, "Replace Material", "Add a Replace Material Geometry node\n\nSwap one material with another")
DefNode(GeometryNode, GEO_NODE_RESAMPLE_CURVE, 0, "RESAMPLE_CURVE", ResampleCurve, "Resample Curve", "Add a Resample Curve Geometry node\nGenerate a poly spline for each input spline")
DefNode(GeometryNode, GEO_NODE_REVERSE_CURVE, 0, "REVERSE_CURVE", ReverseCurve, "Reverse Curve", "Add a Reverse Curve Geometry node\nChange the direction of curves by swapping their start and end data")
DefNode(GeometryNode, GEO_NODE_ROTATE_INSTANCES, 0, "ROTATE_INSTANCES", RotateInstances, "Rotate Instances", "Add a Rotate Instances Geometry node\nRotate geometry instances in local or global space")
DefNode(GeometryNode, GEO_NODE_SAMPLE_CURVE, def_geo_curve_sample, "SAMPLE_CURVE", SampleCurve, "Sample Curve", "Add a Sample Curve Geometry node\nRetrieve data from a point on a curve at a certain distance from its start")
DefNode(GeometryNode, GEO_NODE_SAMPLE_GRID, 0, "SAMPLE_GRID", SampleGrid, "Sample Grid", "")
DefNode(GeometryNode, GEO_NODE_SAMPLE_GRID_INDEX, 0, "SAMPLE_GRID_INDEX", SampleGridIndex, "Sample Grid Index", "Retrieve volume grid values at specific voxels")
DefNode(GeometryNode, GEO_NODE_SAMPLE_INDEX, def_geo_sample_index, "SAMPLE_INDEX", SampleIndex, "Sample Index", "Add a Sample Index Geometry node\nRetrieve values from specific geometry elements")
DefNode(GeometryNode, GEO_NODE_SAMPLE_NEAREST_SURFACE, 0, "SAMPLE_NEAREST_SURFACE", SampleNearestSurface, "Sample Nearest Surface", "Add a Sample Nearest Surface Geometry node\nCalculate the interpolated value of a mesh attribute on the closest point of its surface")
DefNode(GeometryNode, GEO_NODE_SAMPLE_NEAREST, 0, "SAMPLE_NEAREST", SampleNearest, "Sample Nearest", "Add a Sample Nearest Geometry node\nFind the element of a geometry closest to a position. Similar to the \"Index of Nearest\" node")
DefNode(GeometryNode, GEO_NODE_SAMPLE_UV_SURFACE, 0, "SAMPLE_UV_SURFACE", SampleUVSurface, "Sample UV Surface", "Add a Sample UV Surface Geometry node\nCalculate the interpolated values of a mesh attribute at a UV coordinate")
DefNode(GeometryNode, GEO_NODE_SCALE_ELEMENTS, 0, "SCALE_ELEMENTS", ScaleElements, "Scale Elements", "Add a Scale Elements Geometry node\nScale groups of connected edges and faces")
DefNode(GeometryNode, GEO_NODE_SCALE_INSTANCES, 0, "SCALE_INSTANCES", ScaleInstances, "Scale Instances", "Add a Scale Instances Geometry node\nScale geometry instances in local or global space")
DefNode(GeometryNode, GEO_NODE_SDF_GRID_BOOLEAN, 0, "SDF_GRID_BOOLEAN", SDFGridBoolean, "SDF Grid Boolean", "Cut, subtract, or join multiple SDF volume grid inputs")
DefNode(GeometryNode, GEO_NODE_SELF_OBJECT, 0, "SELF_OBJECT", SelfObject, "Self Object", "Add a Self Object Geometry node\nRetrieve the object that contains the geometry nodes modifier currently being executed")
DefNode(GeometryNode, GEO_NODE_SEPARATE_COMPONENTS, 0, "SEPARATE_COMPONENTS",SeparateComponents, "Separate Components", "Add a Separate Components Geometry node\nSplit a geometry into a separate output for each type of data in the geometry")
DefNode(GeometryNode, GEO_NODE_SEPARATE_GEOMETRY, 0, "SEPARATE_GEOMETRY", SeparateGeometry, "Separate Geometry", "Add a Separate Geometry Geometry node\nSplit a geometry into two geometry outputs based on a selection")
DefNode(GeometryNode, GEO_NODE_SET_CURVE_HANDLES, 0, "SET_CURVE_HANDLES", SetCurveHandlePositions, "Set Handle Positions", "Add a Set Handle Positions Geometry node\nSet the positions for the handles of Bézier curves")
DefNode(GeometryNode, GEO_NODE_SET_CURVE_NORMAL, 0, "SET_CURVE_NORMAL", SetCurveNormal, "Set Curve Normal", "Add a Set Curve Normal Geometry node\nSet the evaluation mode for curve normals")
DefNode(GeometryNode, GEO_NODE_SET_CURVE_RADIUS, 0, "SET_CURVE_RADIUS", SetCurveRadius, "Set Curve Radius", "Add a Set Curve Radius Geometry node\nSet the radius of the curve at each control point")
DefNode(GeometryNode, GEO_NODE_SET_CURVE_TILT, 0, "SET_CURVE_TILT", SetCurveTilt, "Set Curve Tilt", "Add a Set Curve Tilt Geometry node\nSet the tilt angle at each curve control point")
DefNode(GeometryNode, GEO_NODE_SET_ID, 0, "SET_ID", SetID, "Set ID", "Add a Set ID Geometry node\nSet the id attribute on the input geometry, mainly used internally for randomizing")
DefNode(GeometryNode, GEO_NODE_SET_MATERIAL_INDEX, 0, "SET_MATERIAL_INDEX", SetMaterialIndex, "Set Material Index", "Add a Set Material Index Geometry node\nSet the material index for each selected geometry element")
DefNode(GeometryNode, GEO_NODE_SET_MATERIAL, 0, "SET_MATERIAL", SetMaterial, "Set Material", "Add a Set Material Geometry node\nAssign a material to geometry elements")
DefNode(GeometryNode, GEO_NODE_SET_POINT_RADIUS, 0, "SET_POINT_RADIUS", SetPointRadius, "Set Point Radius", "Add a Set Point Radius Geometry node\nSet the display size of point cloud points")
DefNode(GeometryNode, GEO_NODE_SET_POSITION, 0, "SET_POSITION", SetPosition, "Set Position", "Add a Set Position Geometry node\nSet the location of each point")
DefNode(GeometryNode, GEO_NODE_SET_SHADE_SMOOTH, 0, "SET_SHADE_SMOOTH", SetShadeSmooth, "Set Shade Smooth", "Add a Set Shade Smooth Geometry node\nControl the smoothness of mesh normals around each face by changing the \"shade smooth\" attribute")
DefNode(GeometryNode, GEO_NODE_SET_SPLINE_CYCLIC, 0, "SET_SPLINE_CYCLIC", SetSplineCyclic, "Set Spline Cyclic", "Add a Set Spline Cyclic Geometry node\nControl whether each spline loops back on itself by changing the \"cyclic\" attribute")
DefNode(GeometryNode, GEO_NODE_SET_SPLINE_RESOLUTION, 0, "SET_SPLINE_RESOLUTION", SetSplineResolution, "Set Spline Resolution", "Add a Set Spline Resolution Geometry node\nControl how many evaluated points should be generated on every curve segment")
DefNode(GeometryNode, GEO_NODE_SIMULATION_INPUT, def_geo_simulation_input, "SIMULATION_INPUT", SimulationInput, "Simulation Input", "Add a Simulation Input Geometry node\nInput data for the simulation zone")
DefNode(GeometryNode, GEO_NODE_SIMULATION_OUTPUT, def_geo_simulation_output, "SIMULATION_OUTPUT", SimulationOutput, "Simulation Output", "Add a Simulation Output Geometry node\nOutput data from the simulation zone")
DefNode(GeometryNode, GEO_NODE_SORT_ELEMENTS, 0, "SORT_ELEMENTS", SortElements, "Sort Elements", "Add a Sort Elements node\nRearrange geometry elements, changing their indices")
DefNode(GeometryNode, GEO_NODE_SPLIT_EDGES, 0, "SPLIT_EDGES", SplitEdges, "Split Edges", "Add a Split Edges Geometry node\nDuplicate mesh edges and break connections with the surrounding faces")
DefNode(GeometryNode, GEO_NODE_SPLIT_TO_INSTANCES, 0, "Split to Instances", SplitToInstances, "Split to Instances", "Add a Split to Instances Geometry node\nCreate separate geometries containing the elements from the same group")
DefNode(GeometryNode, GEO_NODE_STORE_NAMED_ATTRIBUTE, 0, "STORE_NAMED_ATTRIBUTE", StoreNamedAttribute, "Store Named Attribute", "Add a Store Named Attribute Geometry node\nStore the result of a field on a geometry as an attribute with the specified name")
DefNode(GeometryNode, GEO_NODE_STORE_NAMED_GRID, 0, "STORE_NAMED_GRID", StoreNamedGrid, "Store Named Grid", "Store grid data in a volume geometry with the specified name")
DefNode(GeometryNode, GEO_NODE_STRING_JOIN, 0, "STRING_JOIN", StringJoin, "Join Strings", "Add a Join Strings Geometry node\nCombine any number of input strings")
DefNode(GeometryNode, GEO_NODE_STRING_TO_CURVES, def_geo_string_to_curves, "STRING_TO_CURVES", StringToCurves, "String to Curves", "Add a String to Curves Geometry node\nGenerate a paragraph of text with a specific font, using a curve instance to store each character")
DefNode(GeometryNode, GEO_NODE_SUBDIVIDE_CURVE, 0, "SUBDIVIDE_CURVE", SubdivideCurve, "Subdivide Curve", "Add a Subdivide Curve Geometry node\nDividing each curve segment into a specified number of pieces")
DefNode(GeometryNode, GEO_NODE_SUBDIVIDE_MESH, 0, "SUBDIVIDE_MESH", SubdivideMesh, "Subdivide Mesh", "Add a Subdivide Mesh Geometry node\nDivide mesh faces into smaller ones without changing the shape or volume, using linear interpolation to place the new vertices")
DefNode(GeometryNode, GEO_NODE_SUBDIVISION_SURFACE, 0, "SUBDIVISION_SURFACE",SubdivisionSurface, "Subdivision Surface", "Add a Subdivision Surface Geometry node\nDivide mesh faces to form a smooth surface, using the Catmull-Clark subdivision method")
DefNode(GeometryNode, GEO_NODE_SWITCH, 0, "SWITCH", Switch, "Switch", "Add a Switch Geometry node\nSwitch between two inputs")
DefNode(GeometryNode, GEO_NODE_TOOL_3D_CURSOR, 0, "TOOL_3D_CURSOR", Tool3DCursor, "3D Cursor", "Add a 3D Cursor Geometry node\nThe scene's 3D cursor location and rotation")
DefNode(GeometryNode, GEO_NODE_TOOL_FACE_SET, 0, "TOOL_FACE_SET", ToolFaceSet, "Face Set", "Add a Face Set Geometry node\nEach face's sculpt face set value")
DefNode(GeometryNode, GEO_NODE_TOOL_MOUSE_POSITION, 0, "TOOL_MOUSE_POSITION", ToolMousePosition, "Mouse Position", "Retrieve the position of the mouse cursor")
DefNode(GeometryNode, GEO_NODE_TOOL_SELECTION, 0, "TOOL_SELECTION", ToolSelection, "Selection", "Add a Selection Geometry node\nUser selection of the edited geometry, for tool execution")
DefNode(GeometryNode, GEO_NODE_TOOL_SET_FACE_SET, 0, "TOOL_SET_FACE_SET", ToolSetFaceSet, "Set Face Set", "Add a Set Face Set Geometry node\nSet sculpt face set values for faces")
DefNode(GeometryNode, GEO_NODE_TOOL_SET_SELECTION, 0, "TOOL_SELECTION_SET", ToolSetSelection, "Set Selection", "Add a Set Selection Geometry node\nSet selection of the edited geometry, for tool execution")
DefNode(GeometryNode, GEO_NODE_TOOL_VIEWPORT_TRANSFORM, 0, "VIEWPORT_TRANFORM", ViewportTransform, "Viewport Transform", "Retrieve the view direction and location of the 3D viewport")
DefNode(GeometryNode, GEO_NODE_TRANSFORM_GEOMETRY, 0, "TRANSFORM_GEOMETRY", Transform, "Transform Geometry", "Add a Transform Geometry Geometry node\nTranslate, rotate or scale the geometry")
DefNode(GeometryNode, GEO_NODE_TRANSLATE_INSTANCES, 0, "TRANSLATE_INSTANCES",TranslateInstances, "Translate Instances", "Add a Translate Instances Geometry node\nMove top-level geometry instances in local or global space")
DefNode(GeometryNode, GEO_NODE_TRIANGULATE, 0, "TRIANGULATE", Triangulate, "Triangulate", "Add a Triangulate Geometry node\nConvert all faces in a mesh to triangular faces")
DefNode(GeometryNode, GEO_NODE_TRIM_CURVE, 0, "TRIM_CURVE", TrimCurve, "Trim Curve", "Add a Trim Curve Geometry node\nShorten curves by removing portions at the start or end")
DefNode(GeometryNode, GEO_NODE_UV_PACK_ISLANDS, 0, "UV_PACK_ISLANDS", UVPackIslands, "Pack UV Islands", "Add a Pack UV Islands Geometry node\nScale islands of a UV map and move them so they fill the UV space as much as possible")
DefNode(GeometryNode, GEO_NODE_UV_UNWRAP, 0, "UV_UNWRAP", UVUnwrap, "UV Unwrap", "Add a UV Unwrap Geometry node\nGenerate a UV map based on seam edges")
DefNode(GeometryNode, GEO_NODE_VIEWER, 0, "VIEWER", Viewer, "Viewer", "Add a Viewer Geometry node\nDisplay the input data in the Spreadsheet Editor")
DefNode(GeometryNode, GEO_NODE_VOLUME_CUBE, 0, "VOLUME_CUBE", VolumeCube, "Volume Cube", "Add a Volume Cube Geometry node\nGenerate a dense volume with a field that controls the density at each grid voxel based on its position")
DefNode(GeometryNode, GEO_NODE_VOLUME_TO_MESH, 0, "VOLUME_TO_MESH", VolumeToMesh, "Volume to Mesh", "Add a Volume to Mesh Geometry node\nGenerate a mesh on the \"surface\" of a volume")

/* undefine macros */
#undef DefNode

    /* clang-format on */
