/* SPDX-FileCopyrightText: 2023 Blender Authors
 *
 * SPDX-License-Identifier: GPL-2.0-or-later */

#pragma once

void register_node_tree_type_cmp();

void register_node_type_cmp_group();

void register_node_type_cmp_alphaover();
void register_node_type_cmp_antialiasing();
void register_node_type_cmp_bilateralblur();
void register_node_type_cmp_blur();
void register_node_type_cmp_bokehblur();
void register_node_type_cmp_bokehimage();
void register_node_type_cmp_boxmask();
void register_node_type_cmp_brightcontrast();
void register_node_type_cmp_channel_matte();
void register_node_type_cmp_chroma_matte();
void register_node_type_cmp_color_matte();
void register_node_type_cmp_color_spill();
void register_node_type_cmp_colorbalance();
void register_node_type_cmp_colorcorrection();
void register_node_type_cmp_combhsva();
void register_node_type_cmp_combine_color();
void register_node_type_cmp_combine_xyz();
void register_node_type_cmp_combrgba();
void register_node_type_cmp_combycca();
void register_node_type_cmp_combyuva();
void register_node_type_cmp_composite();
void register_node_type_cmp_convert_color_space();
void register_node_type_cmp_cornerpin();
void register_node_type_cmp_crop();
void register_node_type_cmp_cryptomatte_legacy();
void register_node_type_cmp_cryptomatte();
void register_node_type_cmp_curve_rgb();
void register_node_type_cmp_curve_time();
void register_node_type_cmp_curve_vec();
void register_node_type_cmp_dblur();
void register_node_type_cmp_defocus();
void register_node_type_cmp_denoise();
void register_node_type_cmp_despeckle();
void register_node_type_cmp_diff_matte();
void register_node_type_cmp_dilateerode();
void register_node_type_cmp_displace();
void register_node_type_cmp_distance_matte();
void register_node_type_cmp_doubleedgemask();
void register_node_type_cmp_ellipsemask();
void register_node_type_cmp_exposure();
void register_node_type_cmp_filter();
void register_node_type_cmp_flip();
void register_node_type_cmp_gamma();
void register_node_type_cmp_glare();
void register_node_type_cmp_hue_sat();
void register_node_type_cmp_huecorrect();
void register_node_type_cmp_idmask();
void register_node_type_cmp_image();
void register_node_type_cmp_inpaint();
void register_node_type_cmp_invert();
void register_node_type_cmp_keying();
void register_node_type_cmp_keyingscreen();
void register_node_type_cmp_kuwahara();
void register_node_type_cmp_lensdist();
void register_node_type_cmp_luma_matte();
void register_node_type_cmp_map_range();
void register_node_type_cmp_map_value();
void register_node_type_cmp_mapuv();
void register_node_type_cmp_mask();
void register_node_type_cmp_math();
void register_node_type_cmp_mix_rgb();
void register_node_type_cmp_movieclip();
void register_node_type_cmp_moviedistortion();
void register_node_type_cmp_normal();
void register_node_type_cmp_normalize();
void register_node_type_cmp_output_file();
void register_node_type_cmp_pixelate();
void register_node_type_cmp_planetrackdeform();
void register_node_type_cmp_posterize();
void register_node_type_cmp_premulkey();
void register_node_type_cmp_rgb();
void register_node_type_cmp_rgbtobw();
void register_node_type_cmp_rlayers();
void register_node_type_cmp_rotate();
void register_node_type_cmp_scale();
void register_node_type_cmp_scene_time();
void register_node_type_cmp_separate_color();
void register_node_type_cmp_separate_xyz();
void register_node_type_cmp_sephsva();
void register_node_type_cmp_seprgba();
void register_node_type_cmp_sepycca();
void register_node_type_cmp_sepyuva();
void register_node_type_cmp_setalpha();
void register_node_type_cmp_splitviewer();
void register_node_type_cmp_stabilize2d();
void register_node_type_cmp_sunbeams();
void register_node_type_cmp_switch_view();
void register_node_type_cmp_switch();
void register_node_type_cmp_texture();
void register_node_type_cmp_tonemap();
void register_node_type_cmp_trackpos();
void register_node_type_cmp_transform();
void register_node_type_cmp_translate();
void register_node_type_cmp_valtorgb();
void register_node_type_cmp_value();
void register_node_type_cmp_vecblur();
void register_node_type_cmp_view_levels();
void register_node_type_cmp_viewer();
void register_node_type_cmp_zcombine();
