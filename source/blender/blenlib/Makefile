# Makefile.in generated by automake 1.7.6 from Makefile.am.
# source/blender/blenlib/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/blender
pkglibdir = $(libdir)/blender
pkgincludedir = $(includedir)/blender
top_builddir = ../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run autoconf
AUTOHEADER = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run autoheader
AUTOMAKE = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run automake-1.7
AWK = mawk
BLIB_JPEG = 
BLIB_PNG = 
BLIB_SDL = 
BlenderFMOD_FALSE = 
BlenderFMOD_TRUE = #
BlenderGAME_FALSE = 
BlenderGAME_TRUE = #
BlenderOPENAL_FALSE = 
BlenderOPENAL_TRUE = #
BlenderPLUGIN_FALSE = 
BlenderPLUGIN_TRUE = #
BlenderQUICKTIME_FALSE = 
BlenderQUICKTIME_TRUE = #
BlenderSTATIC_FALSE = 
BlenderSTATIC_TRUE = #
CARBON_FALSE = 
CARBON_TRUE = #
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -funsigned-char
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -funsigned-char
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBM = -lm
LIBOBJS = 

LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKE = /usr/bin/make
MAKEINFO = ${SHELL} /home/qword/nuevo/fuentes/trabajo/blender/missing --run makeinfo
OBJEXT = o
PACKAGE = blender
PACKAGE_BUGREPORT = 
PACKAGE_NAME = blender
PACKAGE_STRING = blender 2.29
PACKAGE_TARNAME = blender
PACKAGE_VERSION = 2.29
PATH_SEPARATOR = :
PBBUILD = 
PYTHON = /usr/bin/python
PYTHONSYSPREFIX = /usr
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_LDFLAGS = -Xlinker -export-dynamic
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.2
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL -lpthread
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
USE_OPENAL_FALSE = 
USE_OPENAL_TRUE = #
VERSION = 2.29
WIN32_FALSE = 
WIN32_TRUE = #
X11_FALSE = #
X11_TRUE = 
X_CFLAGS =  -I/usr/X11R6/include
X_EXTRA_LIBS = 
X_LIBS =  -L/usr/X11R6/lib
X_PRE_LIBS =  -lSM -lICE
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
b_jpeg_FALSE = 
b_jpeg_TRUE = #
b_png_FALSE = 
b_png_TRUE = #
b_sdl_FALSE = 
b_sdl_TRUE = #
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/qword/nuevo/fuentes/trabajo/blender/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
pkgpyexecdir = ${pyexecdir}/blender
pkgpythondir = ${pythondir}/blender
prefix = /usr/local
program_transform_name = s,x,x,
pyexecdir = ${exec_prefix}/lib/python2.2/site-packages
pythondir = ${prefix}/lib/python2.2/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
noinst_LTLIBRARIES = libblender_blenlib.la

libblender_blenlib_la_SOURCES = \
	BLI_arithb.h \
	BLI_blenlib.h \
	BLI_dynstr.h \
	BLI_editVert.h \
	BLI_ghash.h \
	BLI_gsqueue.h \
	BLI_linklist.h \
	BLI_memarena.h \
	BLI_rand.h \
	BLI_storage_types.h \
	BLI_vfontdata.h \
	BLI_winstuff.h \
	MTC_matrixops.h \
	MTC_vectorops.h \
	PIL_dynlib.h \
	PIL_time.h \
	intern/BLI_callbacks.h \
	intern/BLI_dynstr.c \
	intern/BLI_fileops.h \
	intern/BLI_ghash.c \
	intern/BLI_linklist.c \
	intern/BLI_memarena.c \
	intern/BLI_scanfill.h \
	intern/BLI_storage.h \
	intern/BLI_util.h \
	intern/arithb.c \
	intern/dynlib.c \
	intern/fileops.c \
	intern/gsqueue.c \
	intern/matrixops.c \
	intern/noise.c \
	intern/psfont.c \
	intern/rand.c \
	intern/rct.c \
	intern/scanfill.c \
	intern/storage.c \
	intern/time.c \
	intern/util.c \
	intern/vectorops.c \
	intern/freetypefont.c \
	intern/winstuff.c


INCLUDES = -I$(top_srcdir)/source/blender/makesdna \
	-I$(top_srcdir)/intern/guardedalloc \
	-I$(top_srcdir)/source/blender/include


EXTRA_DIST = \
	Makefile \
	intern/Makefile

subdir = source/blender/blenlib
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libblender_blenlib_la_LDFLAGS =
libblender_blenlib_la_LIBADD =
am_libblender_blenlib_la_OBJECTS = BLI_dynstr.lo BLI_ghash.lo \
	BLI_linklist.lo BLI_memarena.lo arithb.lo dynlib.lo fileops.lo \
	gsqueue.lo matrixops.lo noise.lo psfont.lo rand.lo rct.lo \
	scanfill.lo storage.lo time.lo util.lo vectorops.lo \
	freetypefont.lo winstuff.lo
libblender_blenlib_la_OBJECTS = $(am_libblender_blenlib_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/BLI_dynstr.Plo \
	./$(DEPDIR)/BLI_ghash.Plo \
	./$(DEPDIR)/BLI_linklist.Plo \
	./$(DEPDIR)/BLI_memarena.Plo ./$(DEPDIR)/arithb.Plo \
	./$(DEPDIR)/dynlib.Plo ./$(DEPDIR)/fileops.Plo \
	./$(DEPDIR)/freetypefont.Plo \
	./$(DEPDIR)/gsqueue.Plo ./$(DEPDIR)/matrixops.Plo \
	./$(DEPDIR)/noise.Plo ./$(DEPDIR)/psfont.Plo \
	./$(DEPDIR)/rand.Plo ./$(DEPDIR)/rct.Plo \
	./$(DEPDIR)/scanfill.Plo ./$(DEPDIR)/storage.Plo \
	./$(DEPDIR)/time.Plo ./$(DEPDIR)/util.Plo \
	./$(DEPDIR)/vectorops.Plo ./$(DEPDIR)/winstuff.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libblender_blenlib_la_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libblender_blenlib_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  source/blender/blenlib/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libblender_blenlib.la: $(libblender_blenlib_la_OBJECTS) $(libblender_blenlib_la_DEPENDENCIES) 
	$(LINK)  $(libblender_blenlib_la_LDFLAGS) $(libblender_blenlib_la_OBJECTS) $(libblender_blenlib_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/BLI_dynstr.Plo
include ./$(DEPDIR)/BLI_ghash.Plo
include ./$(DEPDIR)/BLI_linklist.Plo
include ./$(DEPDIR)/BLI_memarena.Plo
include ./$(DEPDIR)/arithb.Plo
include ./$(DEPDIR)/dynlib.Plo
include ./$(DEPDIR)/fileops.Plo
include ./$(DEPDIR)/freetypefont.Plo
include ./$(DEPDIR)/gsqueue.Plo
include ./$(DEPDIR)/matrixops.Plo
include ./$(DEPDIR)/noise.Plo
include ./$(DEPDIR)/psfont.Plo
include ./$(DEPDIR)/rand.Plo
include ./$(DEPDIR)/rct.Plo
include ./$(DEPDIR)/scanfill.Plo
include ./$(DEPDIR)/storage.Plo
include ./$(DEPDIR)/time.Plo
include ./$(DEPDIR)/util.Plo
include ./$(DEPDIR)/vectorops.Plo
include ./$(DEPDIR)/winstuff.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

BLI_dynstr.o: intern/BLI_dynstr.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_dynstr.o -MD -MP -MF "$(DEPDIR)/BLI_dynstr.Tpo" \
	  -c -o BLI_dynstr.o `test -f 'intern/BLI_dynstr.c' || echo '$(srcdir)/'`intern/BLI_dynstr.c; \
	then mv -f "$(DEPDIR)/BLI_dynstr.Tpo" "$(DEPDIR)/BLI_dynstr.Po"; \
	else rm -f "$(DEPDIR)/BLI_dynstr.Tpo"; exit 1; \
	fi
#	source='intern/BLI_dynstr.c' object='BLI_dynstr.o' libtool=no \
#	depfile='$(DEPDIR)/BLI_dynstr.Po' tmpdepfile='$(DEPDIR)/BLI_dynstr.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_dynstr.o `test -f 'intern/BLI_dynstr.c' || echo '$(srcdir)/'`intern/BLI_dynstr.c

BLI_dynstr.obj: intern/BLI_dynstr.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_dynstr.obj -MD -MP -MF "$(DEPDIR)/BLI_dynstr.Tpo" \
	  -c -o BLI_dynstr.obj `if test -f 'intern/BLI_dynstr.c'; then $(CYGPATH_W) 'intern/BLI_dynstr.c'; else $(CYGPATH_W) '$(srcdir)/intern/BLI_dynstr.c'; fi`; \
	then mv -f "$(DEPDIR)/BLI_dynstr.Tpo" "$(DEPDIR)/BLI_dynstr.Po"; \
	else rm -f "$(DEPDIR)/BLI_dynstr.Tpo"; exit 1; \
	fi
#	source='intern/BLI_dynstr.c' object='BLI_dynstr.obj' libtool=no \
#	depfile='$(DEPDIR)/BLI_dynstr.Po' tmpdepfile='$(DEPDIR)/BLI_dynstr.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_dynstr.obj `if test -f 'intern/BLI_dynstr.c'; then $(CYGPATH_W) 'intern/BLI_dynstr.c'; else $(CYGPATH_W) '$(srcdir)/intern/BLI_dynstr.c'; fi`

BLI_dynstr.lo: intern/BLI_dynstr.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_dynstr.lo -MD -MP -MF "$(DEPDIR)/BLI_dynstr.Tpo" \
	  -c -o BLI_dynstr.lo `test -f 'intern/BLI_dynstr.c' || echo '$(srcdir)/'`intern/BLI_dynstr.c; \
	then mv -f "$(DEPDIR)/BLI_dynstr.Tpo" "$(DEPDIR)/BLI_dynstr.Plo"; \
	else rm -f "$(DEPDIR)/BLI_dynstr.Tpo"; exit 1; \
	fi
#	source='intern/BLI_dynstr.c' object='BLI_dynstr.lo' libtool=yes \
#	depfile='$(DEPDIR)/BLI_dynstr.Plo' tmpdepfile='$(DEPDIR)/BLI_dynstr.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_dynstr.lo `test -f 'intern/BLI_dynstr.c' || echo '$(srcdir)/'`intern/BLI_dynstr.c

BLI_ghash.o: intern/BLI_ghash.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_ghash.o -MD -MP -MF "$(DEPDIR)/BLI_ghash.Tpo" \
	  -c -o BLI_ghash.o `test -f 'intern/BLI_ghash.c' || echo '$(srcdir)/'`intern/BLI_ghash.c; \
	then mv -f "$(DEPDIR)/BLI_ghash.Tpo" "$(DEPDIR)/BLI_ghash.Po"; \
	else rm -f "$(DEPDIR)/BLI_ghash.Tpo"; exit 1; \
	fi
#	source='intern/BLI_ghash.c' object='BLI_ghash.o' libtool=no \
#	depfile='$(DEPDIR)/BLI_ghash.Po' tmpdepfile='$(DEPDIR)/BLI_ghash.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_ghash.o `test -f 'intern/BLI_ghash.c' || echo '$(srcdir)/'`intern/BLI_ghash.c

BLI_ghash.obj: intern/BLI_ghash.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_ghash.obj -MD -MP -MF "$(DEPDIR)/BLI_ghash.Tpo" \
	  -c -o BLI_ghash.obj `if test -f 'intern/BLI_ghash.c'; then $(CYGPATH_W) 'intern/BLI_ghash.c'; else $(CYGPATH_W) '$(srcdir)/intern/BLI_ghash.c'; fi`; \
	then mv -f "$(DEPDIR)/BLI_ghash.Tpo" "$(DEPDIR)/BLI_ghash.Po"; \
	else rm -f "$(DEPDIR)/BLI_ghash.Tpo"; exit 1; \
	fi
#	source='intern/BLI_ghash.c' object='BLI_ghash.obj' libtool=no \
#	depfile='$(DEPDIR)/BLI_ghash.Po' tmpdepfile='$(DEPDIR)/BLI_ghash.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_ghash.obj `if test -f 'intern/BLI_ghash.c'; then $(CYGPATH_W) 'intern/BLI_ghash.c'; else $(CYGPATH_W) '$(srcdir)/intern/BLI_ghash.c'; fi`

BLI_ghash.lo: intern/BLI_ghash.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_ghash.lo -MD -MP -MF "$(DEPDIR)/BLI_ghash.Tpo" \
	  -c -o BLI_ghash.lo `test -f 'intern/BLI_ghash.c' || echo '$(srcdir)/'`intern/BLI_ghash.c; \
	then mv -f "$(DEPDIR)/BLI_ghash.Tpo" "$(DEPDIR)/BLI_ghash.Plo"; \
	else rm -f "$(DEPDIR)/BLI_ghash.Tpo"; exit 1; \
	fi
#	source='intern/BLI_ghash.c' object='BLI_ghash.lo' libtool=yes \
#	depfile='$(DEPDIR)/BLI_ghash.Plo' tmpdepfile='$(DEPDIR)/BLI_ghash.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_ghash.lo `test -f 'intern/BLI_ghash.c' || echo '$(srcdir)/'`intern/BLI_ghash.c

BLI_linklist.o: intern/BLI_linklist.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_linklist.o -MD -MP -MF "$(DEPDIR)/BLI_linklist.Tpo" \
	  -c -o BLI_linklist.o `test -f 'intern/BLI_linklist.c' || echo '$(srcdir)/'`intern/BLI_linklist.c; \
	then mv -f "$(DEPDIR)/BLI_linklist.Tpo" "$(DEPDIR)/BLI_linklist.Po"; \
	else rm -f "$(DEPDIR)/BLI_linklist.Tpo"; exit 1; \
	fi
#	source='intern/BLI_linklist.c' object='BLI_linklist.o' libtool=no \
#	depfile='$(DEPDIR)/BLI_linklist.Po' tmpdepfile='$(DEPDIR)/BLI_linklist.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_linklist.o `test -f 'intern/BLI_linklist.c' || echo '$(srcdir)/'`intern/BLI_linklist.c

BLI_linklist.obj: intern/BLI_linklist.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_linklist.obj -MD -MP -MF "$(DEPDIR)/BLI_linklist.Tpo" \
	  -c -o BLI_linklist.obj `if test -f 'intern/BLI_linklist.c'; then $(CYGPATH_W) 'intern/BLI_linklist.c'; else $(CYGPATH_W) '$(srcdir)/intern/BLI_linklist.c'; fi`; \
	then mv -f "$(DEPDIR)/BLI_linklist.Tpo" "$(DEPDIR)/BLI_linklist.Po"; \
	else rm -f "$(DEPDIR)/BLI_linklist.Tpo"; exit 1; \
	fi
#	source='intern/BLI_linklist.c' object='BLI_linklist.obj' libtool=no \
#	depfile='$(DEPDIR)/BLI_linklist.Po' tmpdepfile='$(DEPDIR)/BLI_linklist.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_linklist.obj `if test -f 'intern/BLI_linklist.c'; then $(CYGPATH_W) 'intern/BLI_linklist.c'; else $(CYGPATH_W) '$(srcdir)/intern/BLI_linklist.c'; fi`

BLI_linklist.lo: intern/BLI_linklist.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_linklist.lo -MD -MP -MF "$(DEPDIR)/BLI_linklist.Tpo" \
	  -c -o BLI_linklist.lo `test -f 'intern/BLI_linklist.c' || echo '$(srcdir)/'`intern/BLI_linklist.c; \
	then mv -f "$(DEPDIR)/BLI_linklist.Tpo" "$(DEPDIR)/BLI_linklist.Plo"; \
	else rm -f "$(DEPDIR)/BLI_linklist.Tpo"; exit 1; \
	fi
#	source='intern/BLI_linklist.c' object='BLI_linklist.lo' libtool=yes \
#	depfile='$(DEPDIR)/BLI_linklist.Plo' tmpdepfile='$(DEPDIR)/BLI_linklist.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_linklist.lo `test -f 'intern/BLI_linklist.c' || echo '$(srcdir)/'`intern/BLI_linklist.c

BLI_memarena.o: intern/BLI_memarena.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_memarena.o -MD -MP -MF "$(DEPDIR)/BLI_memarena.Tpo" \
	  -c -o BLI_memarena.o `test -f 'intern/BLI_memarena.c' || echo '$(srcdir)/'`intern/BLI_memarena.c; \
	then mv -f "$(DEPDIR)/BLI_memarena.Tpo" "$(DEPDIR)/BLI_memarena.Po"; \
	else rm -f "$(DEPDIR)/BLI_memarena.Tpo"; exit 1; \
	fi
#	source='intern/BLI_memarena.c' object='BLI_memarena.o' libtool=no \
#	depfile='$(DEPDIR)/BLI_memarena.Po' tmpdepfile='$(DEPDIR)/BLI_memarena.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_memarena.o `test -f 'intern/BLI_memarena.c' || echo '$(srcdir)/'`intern/BLI_memarena.c

BLI_memarena.obj: intern/BLI_memarena.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_memarena.obj -MD -MP -MF "$(DEPDIR)/BLI_memarena.Tpo" \
	  -c -o BLI_memarena.obj `if test -f 'intern/BLI_memarena.c'; then $(CYGPATH_W) 'intern/BLI_memarena.c'; else $(CYGPATH_W) '$(srcdir)/intern/BLI_memarena.c'; fi`; \
	then mv -f "$(DEPDIR)/BLI_memarena.Tpo" "$(DEPDIR)/BLI_memarena.Po"; \
	else rm -f "$(DEPDIR)/BLI_memarena.Tpo"; exit 1; \
	fi
#	source='intern/BLI_memarena.c' object='BLI_memarena.obj' libtool=no \
#	depfile='$(DEPDIR)/BLI_memarena.Po' tmpdepfile='$(DEPDIR)/BLI_memarena.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_memarena.obj `if test -f 'intern/BLI_memarena.c'; then $(CYGPATH_W) 'intern/BLI_memarena.c'; else $(CYGPATH_W) '$(srcdir)/intern/BLI_memarena.c'; fi`

BLI_memarena.lo: intern/BLI_memarena.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT BLI_memarena.lo -MD -MP -MF "$(DEPDIR)/BLI_memarena.Tpo" \
	  -c -o BLI_memarena.lo `test -f 'intern/BLI_memarena.c' || echo '$(srcdir)/'`intern/BLI_memarena.c; \
	then mv -f "$(DEPDIR)/BLI_memarena.Tpo" "$(DEPDIR)/BLI_memarena.Plo"; \
	else rm -f "$(DEPDIR)/BLI_memarena.Tpo"; exit 1; \
	fi
#	source='intern/BLI_memarena.c' object='BLI_memarena.lo' libtool=yes \
#	depfile='$(DEPDIR)/BLI_memarena.Plo' tmpdepfile='$(DEPDIR)/BLI_memarena.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o BLI_memarena.lo `test -f 'intern/BLI_memarena.c' || echo '$(srcdir)/'`intern/BLI_memarena.c

arithb.o: intern/arithb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT arithb.o -MD -MP -MF "$(DEPDIR)/arithb.Tpo" \
	  -c -o arithb.o `test -f 'intern/arithb.c' || echo '$(srcdir)/'`intern/arithb.c; \
	then mv -f "$(DEPDIR)/arithb.Tpo" "$(DEPDIR)/arithb.Po"; \
	else rm -f "$(DEPDIR)/arithb.Tpo"; exit 1; \
	fi
#	source='intern/arithb.c' object='arithb.o' libtool=no \
#	depfile='$(DEPDIR)/arithb.Po' tmpdepfile='$(DEPDIR)/arithb.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o arithb.o `test -f 'intern/arithb.c' || echo '$(srcdir)/'`intern/arithb.c

arithb.obj: intern/arithb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT arithb.obj -MD -MP -MF "$(DEPDIR)/arithb.Tpo" \
	  -c -o arithb.obj `if test -f 'intern/arithb.c'; then $(CYGPATH_W) 'intern/arithb.c'; else $(CYGPATH_W) '$(srcdir)/intern/arithb.c'; fi`; \
	then mv -f "$(DEPDIR)/arithb.Tpo" "$(DEPDIR)/arithb.Po"; \
	else rm -f "$(DEPDIR)/arithb.Tpo"; exit 1; \
	fi
#	source='intern/arithb.c' object='arithb.obj' libtool=no \
#	depfile='$(DEPDIR)/arithb.Po' tmpdepfile='$(DEPDIR)/arithb.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o arithb.obj `if test -f 'intern/arithb.c'; then $(CYGPATH_W) 'intern/arithb.c'; else $(CYGPATH_W) '$(srcdir)/intern/arithb.c'; fi`

arithb.lo: intern/arithb.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT arithb.lo -MD -MP -MF "$(DEPDIR)/arithb.Tpo" \
	  -c -o arithb.lo `test -f 'intern/arithb.c' || echo '$(srcdir)/'`intern/arithb.c; \
	then mv -f "$(DEPDIR)/arithb.Tpo" "$(DEPDIR)/arithb.Plo"; \
	else rm -f "$(DEPDIR)/arithb.Tpo"; exit 1; \
	fi
#	source='intern/arithb.c' object='arithb.lo' libtool=yes \
#	depfile='$(DEPDIR)/arithb.Plo' tmpdepfile='$(DEPDIR)/arithb.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o arithb.lo `test -f 'intern/arithb.c' || echo '$(srcdir)/'`intern/arithb.c

dynlib.o: intern/dynlib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dynlib.o -MD -MP -MF "$(DEPDIR)/dynlib.Tpo" \
	  -c -o dynlib.o `test -f 'intern/dynlib.c' || echo '$(srcdir)/'`intern/dynlib.c; \
	then mv -f "$(DEPDIR)/dynlib.Tpo" "$(DEPDIR)/dynlib.Po"; \
	else rm -f "$(DEPDIR)/dynlib.Tpo"; exit 1; \
	fi
#	source='intern/dynlib.c' object='dynlib.o' libtool=no \
#	depfile='$(DEPDIR)/dynlib.Po' tmpdepfile='$(DEPDIR)/dynlib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dynlib.o `test -f 'intern/dynlib.c' || echo '$(srcdir)/'`intern/dynlib.c

dynlib.obj: intern/dynlib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dynlib.obj -MD -MP -MF "$(DEPDIR)/dynlib.Tpo" \
	  -c -o dynlib.obj `if test -f 'intern/dynlib.c'; then $(CYGPATH_W) 'intern/dynlib.c'; else $(CYGPATH_W) '$(srcdir)/intern/dynlib.c'; fi`; \
	then mv -f "$(DEPDIR)/dynlib.Tpo" "$(DEPDIR)/dynlib.Po"; \
	else rm -f "$(DEPDIR)/dynlib.Tpo"; exit 1; \
	fi
#	source='intern/dynlib.c' object='dynlib.obj' libtool=no \
#	depfile='$(DEPDIR)/dynlib.Po' tmpdepfile='$(DEPDIR)/dynlib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dynlib.obj `if test -f 'intern/dynlib.c'; then $(CYGPATH_W) 'intern/dynlib.c'; else $(CYGPATH_W) '$(srcdir)/intern/dynlib.c'; fi`

dynlib.lo: intern/dynlib.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dynlib.lo -MD -MP -MF "$(DEPDIR)/dynlib.Tpo" \
	  -c -o dynlib.lo `test -f 'intern/dynlib.c' || echo '$(srcdir)/'`intern/dynlib.c; \
	then mv -f "$(DEPDIR)/dynlib.Tpo" "$(DEPDIR)/dynlib.Plo"; \
	else rm -f "$(DEPDIR)/dynlib.Tpo"; exit 1; \
	fi
#	source='intern/dynlib.c' object='dynlib.lo' libtool=yes \
#	depfile='$(DEPDIR)/dynlib.Plo' tmpdepfile='$(DEPDIR)/dynlib.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dynlib.lo `test -f 'intern/dynlib.c' || echo '$(srcdir)/'`intern/dynlib.c

fileops.o: intern/fileops.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fileops.o -MD -MP -MF "$(DEPDIR)/fileops.Tpo" \
	  -c -o fileops.o `test -f 'intern/fileops.c' || echo '$(srcdir)/'`intern/fileops.c; \
	then mv -f "$(DEPDIR)/fileops.Tpo" "$(DEPDIR)/fileops.Po"; \
	else rm -f "$(DEPDIR)/fileops.Tpo"; exit 1; \
	fi
#	source='intern/fileops.c' object='fileops.o' libtool=no \
#	depfile='$(DEPDIR)/fileops.Po' tmpdepfile='$(DEPDIR)/fileops.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fileops.o `test -f 'intern/fileops.c' || echo '$(srcdir)/'`intern/fileops.c

fileops.obj: intern/fileops.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fileops.obj -MD -MP -MF "$(DEPDIR)/fileops.Tpo" \
	  -c -o fileops.obj `if test -f 'intern/fileops.c'; then $(CYGPATH_W) 'intern/fileops.c'; else $(CYGPATH_W) '$(srcdir)/intern/fileops.c'; fi`; \
	then mv -f "$(DEPDIR)/fileops.Tpo" "$(DEPDIR)/fileops.Po"; \
	else rm -f "$(DEPDIR)/fileops.Tpo"; exit 1; \
	fi
#	source='intern/fileops.c' object='fileops.obj' libtool=no \
#	depfile='$(DEPDIR)/fileops.Po' tmpdepfile='$(DEPDIR)/fileops.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fileops.obj `if test -f 'intern/fileops.c'; then $(CYGPATH_W) 'intern/fileops.c'; else $(CYGPATH_W) '$(srcdir)/intern/fileops.c'; fi`

fileops.lo: intern/fileops.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fileops.lo -MD -MP -MF "$(DEPDIR)/fileops.Tpo" \
	  -c -o fileops.lo `test -f 'intern/fileops.c' || echo '$(srcdir)/'`intern/fileops.c; \
	then mv -f "$(DEPDIR)/fileops.Tpo" "$(DEPDIR)/fileops.Plo"; \
	else rm -f "$(DEPDIR)/fileops.Tpo"; exit 1; \
	fi
#	source='intern/fileops.c' object='fileops.lo' libtool=yes \
#	depfile='$(DEPDIR)/fileops.Plo' tmpdepfile='$(DEPDIR)/fileops.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fileops.lo `test -f 'intern/fileops.c' || echo '$(srcdir)/'`intern/fileops.c

gsqueue.o: intern/gsqueue.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gsqueue.o -MD -MP -MF "$(DEPDIR)/gsqueue.Tpo" \
	  -c -o gsqueue.o `test -f 'intern/gsqueue.c' || echo '$(srcdir)/'`intern/gsqueue.c; \
	then mv -f "$(DEPDIR)/gsqueue.Tpo" "$(DEPDIR)/gsqueue.Po"; \
	else rm -f "$(DEPDIR)/gsqueue.Tpo"; exit 1; \
	fi
#	source='intern/gsqueue.c' object='gsqueue.o' libtool=no \
#	depfile='$(DEPDIR)/gsqueue.Po' tmpdepfile='$(DEPDIR)/gsqueue.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gsqueue.o `test -f 'intern/gsqueue.c' || echo '$(srcdir)/'`intern/gsqueue.c

gsqueue.obj: intern/gsqueue.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gsqueue.obj -MD -MP -MF "$(DEPDIR)/gsqueue.Tpo" \
	  -c -o gsqueue.obj `if test -f 'intern/gsqueue.c'; then $(CYGPATH_W) 'intern/gsqueue.c'; else $(CYGPATH_W) '$(srcdir)/intern/gsqueue.c'; fi`; \
	then mv -f "$(DEPDIR)/gsqueue.Tpo" "$(DEPDIR)/gsqueue.Po"; \
	else rm -f "$(DEPDIR)/gsqueue.Tpo"; exit 1; \
	fi
#	source='intern/gsqueue.c' object='gsqueue.obj' libtool=no \
#	depfile='$(DEPDIR)/gsqueue.Po' tmpdepfile='$(DEPDIR)/gsqueue.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gsqueue.obj `if test -f 'intern/gsqueue.c'; then $(CYGPATH_W) 'intern/gsqueue.c'; else $(CYGPATH_W) '$(srcdir)/intern/gsqueue.c'; fi`

gsqueue.lo: intern/gsqueue.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gsqueue.lo -MD -MP -MF "$(DEPDIR)/gsqueue.Tpo" \
	  -c -o gsqueue.lo `test -f 'intern/gsqueue.c' || echo '$(srcdir)/'`intern/gsqueue.c; \
	then mv -f "$(DEPDIR)/gsqueue.Tpo" "$(DEPDIR)/gsqueue.Plo"; \
	else rm -f "$(DEPDIR)/gsqueue.Tpo"; exit 1; \
	fi
#	source='intern/gsqueue.c' object='gsqueue.lo' libtool=yes \
#	depfile='$(DEPDIR)/gsqueue.Plo' tmpdepfile='$(DEPDIR)/gsqueue.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gsqueue.lo `test -f 'intern/gsqueue.c' || echo '$(srcdir)/'`intern/gsqueue.c

matrixops.o: intern/matrixops.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrixops.o -MD -MP -MF "$(DEPDIR)/matrixops.Tpo" \
	  -c -o matrixops.o `test -f 'intern/matrixops.c' || echo '$(srcdir)/'`intern/matrixops.c; \
	then mv -f "$(DEPDIR)/matrixops.Tpo" "$(DEPDIR)/matrixops.Po"; \
	else rm -f "$(DEPDIR)/matrixops.Tpo"; exit 1; \
	fi
#	source='intern/matrixops.c' object='matrixops.o' libtool=no \
#	depfile='$(DEPDIR)/matrixops.Po' tmpdepfile='$(DEPDIR)/matrixops.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrixops.o `test -f 'intern/matrixops.c' || echo '$(srcdir)/'`intern/matrixops.c

matrixops.obj: intern/matrixops.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrixops.obj -MD -MP -MF "$(DEPDIR)/matrixops.Tpo" \
	  -c -o matrixops.obj `if test -f 'intern/matrixops.c'; then $(CYGPATH_W) 'intern/matrixops.c'; else $(CYGPATH_W) '$(srcdir)/intern/matrixops.c'; fi`; \
	then mv -f "$(DEPDIR)/matrixops.Tpo" "$(DEPDIR)/matrixops.Po"; \
	else rm -f "$(DEPDIR)/matrixops.Tpo"; exit 1; \
	fi
#	source='intern/matrixops.c' object='matrixops.obj' libtool=no \
#	depfile='$(DEPDIR)/matrixops.Po' tmpdepfile='$(DEPDIR)/matrixops.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrixops.obj `if test -f 'intern/matrixops.c'; then $(CYGPATH_W) 'intern/matrixops.c'; else $(CYGPATH_W) '$(srcdir)/intern/matrixops.c'; fi`

matrixops.lo: intern/matrixops.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrixops.lo -MD -MP -MF "$(DEPDIR)/matrixops.Tpo" \
	  -c -o matrixops.lo `test -f 'intern/matrixops.c' || echo '$(srcdir)/'`intern/matrixops.c; \
	then mv -f "$(DEPDIR)/matrixops.Tpo" "$(DEPDIR)/matrixops.Plo"; \
	else rm -f "$(DEPDIR)/matrixops.Tpo"; exit 1; \
	fi
#	source='intern/matrixops.c' object='matrixops.lo' libtool=yes \
#	depfile='$(DEPDIR)/matrixops.Plo' tmpdepfile='$(DEPDIR)/matrixops.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrixops.lo `test -f 'intern/matrixops.c' || echo '$(srcdir)/'`intern/matrixops.c

noise.o: intern/noise.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT noise.o -MD -MP -MF "$(DEPDIR)/noise.Tpo" \
	  -c -o noise.o `test -f 'intern/noise.c' || echo '$(srcdir)/'`intern/noise.c; \
	then mv -f "$(DEPDIR)/noise.Tpo" "$(DEPDIR)/noise.Po"; \
	else rm -f "$(DEPDIR)/noise.Tpo"; exit 1; \
	fi
#	source='intern/noise.c' object='noise.o' libtool=no \
#	depfile='$(DEPDIR)/noise.Po' tmpdepfile='$(DEPDIR)/noise.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o noise.o `test -f 'intern/noise.c' || echo '$(srcdir)/'`intern/noise.c

noise.obj: intern/noise.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT noise.obj -MD -MP -MF "$(DEPDIR)/noise.Tpo" \
	  -c -o noise.obj `if test -f 'intern/noise.c'; then $(CYGPATH_W) 'intern/noise.c'; else $(CYGPATH_W) '$(srcdir)/intern/noise.c'; fi`; \
	then mv -f "$(DEPDIR)/noise.Tpo" "$(DEPDIR)/noise.Po"; \
	else rm -f "$(DEPDIR)/noise.Tpo"; exit 1; \
	fi
#	source='intern/noise.c' object='noise.obj' libtool=no \
#	depfile='$(DEPDIR)/noise.Po' tmpdepfile='$(DEPDIR)/noise.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o noise.obj `if test -f 'intern/noise.c'; then $(CYGPATH_W) 'intern/noise.c'; else $(CYGPATH_W) '$(srcdir)/intern/noise.c'; fi`

noise.lo: intern/noise.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT noise.lo -MD -MP -MF "$(DEPDIR)/noise.Tpo" \
	  -c -o noise.lo `test -f 'intern/noise.c' || echo '$(srcdir)/'`intern/noise.c; \
	then mv -f "$(DEPDIR)/noise.Tpo" "$(DEPDIR)/noise.Plo"; \
	else rm -f "$(DEPDIR)/noise.Tpo"; exit 1; \
	fi
#	source='intern/noise.c' object='noise.lo' libtool=yes \
#	depfile='$(DEPDIR)/noise.Plo' tmpdepfile='$(DEPDIR)/noise.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o noise.lo `test -f 'intern/noise.c' || echo '$(srcdir)/'`intern/noise.c

psfont.o: intern/psfont.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT psfont.o -MD -MP -MF "$(DEPDIR)/psfont.Tpo" \
	  -c -o psfont.o `test -f 'intern/psfont.c' || echo '$(srcdir)/'`intern/psfont.c; \
	then mv -f "$(DEPDIR)/psfont.Tpo" "$(DEPDIR)/psfont.Po"; \
	else rm -f "$(DEPDIR)/psfont.Tpo"; exit 1; \
	fi
#	source='intern/psfont.c' object='psfont.o' libtool=no \
#	depfile='$(DEPDIR)/psfont.Po' tmpdepfile='$(DEPDIR)/psfont.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o psfont.o `test -f 'intern/psfont.c' || echo '$(srcdir)/'`intern/psfont.c

psfont.obj: intern/psfont.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT psfont.obj -MD -MP -MF "$(DEPDIR)/psfont.Tpo" \
	  -c -o psfont.obj `if test -f 'intern/psfont.c'; then $(CYGPATH_W) 'intern/psfont.c'; else $(CYGPATH_W) '$(srcdir)/intern/psfont.c'; fi`; \
	then mv -f "$(DEPDIR)/psfont.Tpo" "$(DEPDIR)/psfont.Po"; \
	else rm -f "$(DEPDIR)/psfont.Tpo"; exit 1; \
	fi
#	source='intern/psfont.c' object='psfont.obj' libtool=no \
#	depfile='$(DEPDIR)/psfont.Po' tmpdepfile='$(DEPDIR)/psfont.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o psfont.obj `if test -f 'intern/psfont.c'; then $(CYGPATH_W) 'intern/psfont.c'; else $(CYGPATH_W) '$(srcdir)/intern/psfont.c'; fi`

psfont.lo: intern/psfont.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT psfont.lo -MD -MP -MF "$(DEPDIR)/psfont.Tpo" \
	  -c -o psfont.lo `test -f 'intern/psfont.c' || echo '$(srcdir)/'`intern/psfont.c; \
	then mv -f "$(DEPDIR)/psfont.Tpo" "$(DEPDIR)/psfont.Plo"; \
	else rm -f "$(DEPDIR)/psfont.Tpo"; exit 1; \
	fi
#	source='intern/psfont.c' object='psfont.lo' libtool=yes \
#	depfile='$(DEPDIR)/psfont.Plo' tmpdepfile='$(DEPDIR)/psfont.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o psfont.lo `test -f 'intern/psfont.c' || echo '$(srcdir)/'`intern/psfont.c

rand.o: intern/rand.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rand.o -MD -MP -MF "$(DEPDIR)/rand.Tpo" \
	  -c -o rand.o `test -f 'intern/rand.c' || echo '$(srcdir)/'`intern/rand.c; \
	then mv -f "$(DEPDIR)/rand.Tpo" "$(DEPDIR)/rand.Po"; \
	else rm -f "$(DEPDIR)/rand.Tpo"; exit 1; \
	fi
#	source='intern/rand.c' object='rand.o' libtool=no \
#	depfile='$(DEPDIR)/rand.Po' tmpdepfile='$(DEPDIR)/rand.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rand.o `test -f 'intern/rand.c' || echo '$(srcdir)/'`intern/rand.c

rand.obj: intern/rand.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rand.obj -MD -MP -MF "$(DEPDIR)/rand.Tpo" \
	  -c -o rand.obj `if test -f 'intern/rand.c'; then $(CYGPATH_W) 'intern/rand.c'; else $(CYGPATH_W) '$(srcdir)/intern/rand.c'; fi`; \
	then mv -f "$(DEPDIR)/rand.Tpo" "$(DEPDIR)/rand.Po"; \
	else rm -f "$(DEPDIR)/rand.Tpo"; exit 1; \
	fi
#	source='intern/rand.c' object='rand.obj' libtool=no \
#	depfile='$(DEPDIR)/rand.Po' tmpdepfile='$(DEPDIR)/rand.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rand.obj `if test -f 'intern/rand.c'; then $(CYGPATH_W) 'intern/rand.c'; else $(CYGPATH_W) '$(srcdir)/intern/rand.c'; fi`

rand.lo: intern/rand.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rand.lo -MD -MP -MF "$(DEPDIR)/rand.Tpo" \
	  -c -o rand.lo `test -f 'intern/rand.c' || echo '$(srcdir)/'`intern/rand.c; \
	then mv -f "$(DEPDIR)/rand.Tpo" "$(DEPDIR)/rand.Plo"; \
	else rm -f "$(DEPDIR)/rand.Tpo"; exit 1; \
	fi
#	source='intern/rand.c' object='rand.lo' libtool=yes \
#	depfile='$(DEPDIR)/rand.Plo' tmpdepfile='$(DEPDIR)/rand.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rand.lo `test -f 'intern/rand.c' || echo '$(srcdir)/'`intern/rand.c

rct.o: intern/rct.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rct.o -MD -MP -MF "$(DEPDIR)/rct.Tpo" \
	  -c -o rct.o `test -f 'intern/rct.c' || echo '$(srcdir)/'`intern/rct.c; \
	then mv -f "$(DEPDIR)/rct.Tpo" "$(DEPDIR)/rct.Po"; \
	else rm -f "$(DEPDIR)/rct.Tpo"; exit 1; \
	fi
#	source='intern/rct.c' object='rct.o' libtool=no \
#	depfile='$(DEPDIR)/rct.Po' tmpdepfile='$(DEPDIR)/rct.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rct.o `test -f 'intern/rct.c' || echo '$(srcdir)/'`intern/rct.c

rct.obj: intern/rct.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rct.obj -MD -MP -MF "$(DEPDIR)/rct.Tpo" \
	  -c -o rct.obj `if test -f 'intern/rct.c'; then $(CYGPATH_W) 'intern/rct.c'; else $(CYGPATH_W) '$(srcdir)/intern/rct.c'; fi`; \
	then mv -f "$(DEPDIR)/rct.Tpo" "$(DEPDIR)/rct.Po"; \
	else rm -f "$(DEPDIR)/rct.Tpo"; exit 1; \
	fi
#	source='intern/rct.c' object='rct.obj' libtool=no \
#	depfile='$(DEPDIR)/rct.Po' tmpdepfile='$(DEPDIR)/rct.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rct.obj `if test -f 'intern/rct.c'; then $(CYGPATH_W) 'intern/rct.c'; else $(CYGPATH_W) '$(srcdir)/intern/rct.c'; fi`

rct.lo: intern/rct.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rct.lo -MD -MP -MF "$(DEPDIR)/rct.Tpo" \
	  -c -o rct.lo `test -f 'intern/rct.c' || echo '$(srcdir)/'`intern/rct.c; \
	then mv -f "$(DEPDIR)/rct.Tpo" "$(DEPDIR)/rct.Plo"; \
	else rm -f "$(DEPDIR)/rct.Tpo"; exit 1; \
	fi
#	source='intern/rct.c' object='rct.lo' libtool=yes \
#	depfile='$(DEPDIR)/rct.Plo' tmpdepfile='$(DEPDIR)/rct.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rct.lo `test -f 'intern/rct.c' || echo '$(srcdir)/'`intern/rct.c

scanfill.o: intern/scanfill.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scanfill.o -MD -MP -MF "$(DEPDIR)/scanfill.Tpo" \
	  -c -o scanfill.o `test -f 'intern/scanfill.c' || echo '$(srcdir)/'`intern/scanfill.c; \
	then mv -f "$(DEPDIR)/scanfill.Tpo" "$(DEPDIR)/scanfill.Po"; \
	else rm -f "$(DEPDIR)/scanfill.Tpo"; exit 1; \
	fi
#	source='intern/scanfill.c' object='scanfill.o' libtool=no \
#	depfile='$(DEPDIR)/scanfill.Po' tmpdepfile='$(DEPDIR)/scanfill.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scanfill.o `test -f 'intern/scanfill.c' || echo '$(srcdir)/'`intern/scanfill.c

scanfill.obj: intern/scanfill.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scanfill.obj -MD -MP -MF "$(DEPDIR)/scanfill.Tpo" \
	  -c -o scanfill.obj `if test -f 'intern/scanfill.c'; then $(CYGPATH_W) 'intern/scanfill.c'; else $(CYGPATH_W) '$(srcdir)/intern/scanfill.c'; fi`; \
	then mv -f "$(DEPDIR)/scanfill.Tpo" "$(DEPDIR)/scanfill.Po"; \
	else rm -f "$(DEPDIR)/scanfill.Tpo"; exit 1; \
	fi
#	source='intern/scanfill.c' object='scanfill.obj' libtool=no \
#	depfile='$(DEPDIR)/scanfill.Po' tmpdepfile='$(DEPDIR)/scanfill.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scanfill.obj `if test -f 'intern/scanfill.c'; then $(CYGPATH_W) 'intern/scanfill.c'; else $(CYGPATH_W) '$(srcdir)/intern/scanfill.c'; fi`

scanfill.lo: intern/scanfill.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scanfill.lo -MD -MP -MF "$(DEPDIR)/scanfill.Tpo" \
	  -c -o scanfill.lo `test -f 'intern/scanfill.c' || echo '$(srcdir)/'`intern/scanfill.c; \
	then mv -f "$(DEPDIR)/scanfill.Tpo" "$(DEPDIR)/scanfill.Plo"; \
	else rm -f "$(DEPDIR)/scanfill.Tpo"; exit 1; \
	fi
#	source='intern/scanfill.c' object='scanfill.lo' libtool=yes \
#	depfile='$(DEPDIR)/scanfill.Plo' tmpdepfile='$(DEPDIR)/scanfill.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scanfill.lo `test -f 'intern/scanfill.c' || echo '$(srcdir)/'`intern/scanfill.c

storage.o: intern/storage.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT storage.o -MD -MP -MF "$(DEPDIR)/storage.Tpo" \
	  -c -o storage.o `test -f 'intern/storage.c' || echo '$(srcdir)/'`intern/storage.c; \
	then mv -f "$(DEPDIR)/storage.Tpo" "$(DEPDIR)/storage.Po"; \
	else rm -f "$(DEPDIR)/storage.Tpo"; exit 1; \
	fi
#	source='intern/storage.c' object='storage.o' libtool=no \
#	depfile='$(DEPDIR)/storage.Po' tmpdepfile='$(DEPDIR)/storage.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o storage.o `test -f 'intern/storage.c' || echo '$(srcdir)/'`intern/storage.c

storage.obj: intern/storage.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT storage.obj -MD -MP -MF "$(DEPDIR)/storage.Tpo" \
	  -c -o storage.obj `if test -f 'intern/storage.c'; then $(CYGPATH_W) 'intern/storage.c'; else $(CYGPATH_W) '$(srcdir)/intern/storage.c'; fi`; \
	then mv -f "$(DEPDIR)/storage.Tpo" "$(DEPDIR)/storage.Po"; \
	else rm -f "$(DEPDIR)/storage.Tpo"; exit 1; \
	fi
#	source='intern/storage.c' object='storage.obj' libtool=no \
#	depfile='$(DEPDIR)/storage.Po' tmpdepfile='$(DEPDIR)/storage.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o storage.obj `if test -f 'intern/storage.c'; then $(CYGPATH_W) 'intern/storage.c'; else $(CYGPATH_W) '$(srcdir)/intern/storage.c'; fi`

storage.lo: intern/storage.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT storage.lo -MD -MP -MF "$(DEPDIR)/storage.Tpo" \
	  -c -o storage.lo `test -f 'intern/storage.c' || echo '$(srcdir)/'`intern/storage.c; \
	then mv -f "$(DEPDIR)/storage.Tpo" "$(DEPDIR)/storage.Plo"; \
	else rm -f "$(DEPDIR)/storage.Tpo"; exit 1; \
	fi
#	source='intern/storage.c' object='storage.lo' libtool=yes \
#	depfile='$(DEPDIR)/storage.Plo' tmpdepfile='$(DEPDIR)/storage.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o storage.lo `test -f 'intern/storage.c' || echo '$(srcdir)/'`intern/storage.c

time.o: intern/time.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT time.o -MD -MP -MF "$(DEPDIR)/time.Tpo" \
	  -c -o time.o `test -f 'intern/time.c' || echo '$(srcdir)/'`intern/time.c; \
	then mv -f "$(DEPDIR)/time.Tpo" "$(DEPDIR)/time.Po"; \
	else rm -f "$(DEPDIR)/time.Tpo"; exit 1; \
	fi
#	source='intern/time.c' object='time.o' libtool=no \
#	depfile='$(DEPDIR)/time.Po' tmpdepfile='$(DEPDIR)/time.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o time.o `test -f 'intern/time.c' || echo '$(srcdir)/'`intern/time.c

time.obj: intern/time.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT time.obj -MD -MP -MF "$(DEPDIR)/time.Tpo" \
	  -c -o time.obj `if test -f 'intern/time.c'; then $(CYGPATH_W) 'intern/time.c'; else $(CYGPATH_W) '$(srcdir)/intern/time.c'; fi`; \
	then mv -f "$(DEPDIR)/time.Tpo" "$(DEPDIR)/time.Po"; \
	else rm -f "$(DEPDIR)/time.Tpo"; exit 1; \
	fi
#	source='intern/time.c' object='time.obj' libtool=no \
#	depfile='$(DEPDIR)/time.Po' tmpdepfile='$(DEPDIR)/time.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o time.obj `if test -f 'intern/time.c'; then $(CYGPATH_W) 'intern/time.c'; else $(CYGPATH_W) '$(srcdir)/intern/time.c'; fi`

time.lo: intern/time.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT time.lo -MD -MP -MF "$(DEPDIR)/time.Tpo" \
	  -c -o time.lo `test -f 'intern/time.c' || echo '$(srcdir)/'`intern/time.c; \
	then mv -f "$(DEPDIR)/time.Tpo" "$(DEPDIR)/time.Plo"; \
	else rm -f "$(DEPDIR)/time.Tpo"; exit 1; \
	fi
#	source='intern/time.c' object='time.lo' libtool=yes \
#	depfile='$(DEPDIR)/time.Plo' tmpdepfile='$(DEPDIR)/time.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o time.lo `test -f 'intern/time.c' || echo '$(srcdir)/'`intern/time.c

util.o: intern/util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT util.o -MD -MP -MF "$(DEPDIR)/util.Tpo" \
	  -c -o util.o `test -f 'intern/util.c' || echo '$(srcdir)/'`intern/util.c; \
	then mv -f "$(DEPDIR)/util.Tpo" "$(DEPDIR)/util.Po"; \
	else rm -f "$(DEPDIR)/util.Tpo"; exit 1; \
	fi
#	source='intern/util.c' object='util.o' libtool=no \
#	depfile='$(DEPDIR)/util.Po' tmpdepfile='$(DEPDIR)/util.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o util.o `test -f 'intern/util.c' || echo '$(srcdir)/'`intern/util.c

util.obj: intern/util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT util.obj -MD -MP -MF "$(DEPDIR)/util.Tpo" \
	  -c -o util.obj `if test -f 'intern/util.c'; then $(CYGPATH_W) 'intern/util.c'; else $(CYGPATH_W) '$(srcdir)/intern/util.c'; fi`; \
	then mv -f "$(DEPDIR)/util.Tpo" "$(DEPDIR)/util.Po"; \
	else rm -f "$(DEPDIR)/util.Tpo"; exit 1; \
	fi
#	source='intern/util.c' object='util.obj' libtool=no \
#	depfile='$(DEPDIR)/util.Po' tmpdepfile='$(DEPDIR)/util.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o util.obj `if test -f 'intern/util.c'; then $(CYGPATH_W) 'intern/util.c'; else $(CYGPATH_W) '$(srcdir)/intern/util.c'; fi`

util.lo: intern/util.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT util.lo -MD -MP -MF "$(DEPDIR)/util.Tpo" \
	  -c -o util.lo `test -f 'intern/util.c' || echo '$(srcdir)/'`intern/util.c; \
	then mv -f "$(DEPDIR)/util.Tpo" "$(DEPDIR)/util.Plo"; \
	else rm -f "$(DEPDIR)/util.Tpo"; exit 1; \
	fi
#	source='intern/util.c' object='util.lo' libtool=yes \
#	depfile='$(DEPDIR)/util.Plo' tmpdepfile='$(DEPDIR)/util.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o util.lo `test -f 'intern/util.c' || echo '$(srcdir)/'`intern/util.c

vectorops.o: intern/vectorops.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vectorops.o -MD -MP -MF "$(DEPDIR)/vectorops.Tpo" \
	  -c -o vectorops.o `test -f 'intern/vectorops.c' || echo '$(srcdir)/'`intern/vectorops.c; \
	then mv -f "$(DEPDIR)/vectorops.Tpo" "$(DEPDIR)/vectorops.Po"; \
	else rm -f "$(DEPDIR)/vectorops.Tpo"; exit 1; \
	fi
#	source='intern/vectorops.c' object='vectorops.o' libtool=no \
#	depfile='$(DEPDIR)/vectorops.Po' tmpdepfile='$(DEPDIR)/vectorops.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vectorops.o `test -f 'intern/vectorops.c' || echo '$(srcdir)/'`intern/vectorops.c

vectorops.obj: intern/vectorops.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vectorops.obj -MD -MP -MF "$(DEPDIR)/vectorops.Tpo" \
	  -c -o vectorops.obj `if test -f 'intern/vectorops.c'; then $(CYGPATH_W) 'intern/vectorops.c'; else $(CYGPATH_W) '$(srcdir)/intern/vectorops.c'; fi`; \
	then mv -f "$(DEPDIR)/vectorops.Tpo" "$(DEPDIR)/vectorops.Po"; \
	else rm -f "$(DEPDIR)/vectorops.Tpo"; exit 1; \
	fi
#	source='intern/vectorops.c' object='vectorops.obj' libtool=no \
#	depfile='$(DEPDIR)/vectorops.Po' tmpdepfile='$(DEPDIR)/vectorops.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vectorops.obj `if test -f 'intern/vectorops.c'; then $(CYGPATH_W) 'intern/vectorops.c'; else $(CYGPATH_W) '$(srcdir)/intern/vectorops.c'; fi`

vectorops.lo: intern/vectorops.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vectorops.lo -MD -MP -MF "$(DEPDIR)/vectorops.Tpo" \
	  -c -o vectorops.lo `test -f 'intern/vectorops.c' || echo '$(srcdir)/'`intern/vectorops.c; \
	then mv -f "$(DEPDIR)/vectorops.Tpo" "$(DEPDIR)/vectorops.Plo"; \
	else rm -f "$(DEPDIR)/vectorops.Tpo"; exit 1; \
	fi
#	source='intern/vectorops.c' object='vectorops.lo' libtool=yes \
#	depfile='$(DEPDIR)/vectorops.Plo' tmpdepfile='$(DEPDIR)/vectorops.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vectorops.lo `test -f 'intern/vectorops.c' || echo '$(srcdir)/'`intern/vectorops.c

freetypefont.o: intern/freetypefont.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT freetypefont.o -MD -MP -MF "$(DEPDIR)/freetypefont.Tpo" \
	  -c -o freetypefont.o `test -f 'intern/freetypefont.c' || echo '$(srcdir)/'`intern/freetypefont.c; \
	then mv -f "$(DEPDIR)/freetypefont.Tpo" "$(DEPDIR)/freetypefont.Po"; \
	else rm -f "$(DEPDIR)/freetypefont.Tpo"; exit 1; \
	fi
#	source='intern/freetypefont.c' object='freetypefont.o' libtool=no \
#	depfile='$(DEPDIR)/freetypefont.Po' tmpdepfile='$(DEPDIR)/freetypefont.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o freetypefont.o `test -f 'intern/freetypefont.c' || echo '$(srcdir)/'`intern/freetypefont.c

freetypefont.obj: intern/freetypefont.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT freetypefont.obj -MD -MP -MF "$(DEPDIR)/freetypefont.Tpo" \
	  -c -o freetypefont.obj `if test -f 'intern/freetypefont.c'; then $(CYGPATH_W) 'intern/freetypefont.c'; else $(CYGPATH_W) '$(srcdir)/intern/freetypefont.c'; fi`; \
	then mv -f "$(DEPDIR)/freetypefont.Tpo" "$(DEPDIR)/freetypefont.Po"; \
	else rm -f "$(DEPDIR)/freetypefont.Tpo"; exit 1; \
	fi
#	source='intern/freetypefont.c' object='freetypefont.obj' libtool=no \
#	depfile='$(DEPDIR)/freetypefont.Po' tmpdepfile='$(DEPDIR)/freetypefont.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o freetypefont.obj `if test -f 'intern/freetypefont.c'; then $(CYGPATH_W) 'intern/freetypefont.c'; else $(CYGPATH_W) '$(srcdir)/intern/freetypefont.c'; fi`

freetypefont.lo: intern/freetypefont.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT freetypefont.lo -MD -MP -MF "$(DEPDIR)/freetypefont.Tpo" \
	  -c -o freetypefont.lo `test -f 'intern/freetypefont.c' || echo '$(srcdir)/'`intern/freetypefont.c; \
	then mv -f "$(DEPDIR)/freetypefont.Tpo" "$(DEPDIR)/freetypefont.Plo"; \
	else rm -f "$(DEPDIR)/freetypefont.Tpo"; exit 1; \
	fi
#	source='intern/freetypefont.c' object='freetypefont.lo' libtool=yes \
#	depfile='$(DEPDIR)/freetypefont.Plo' tmpdepfile='$(DEPDIR)/freetypefont.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o freetypefont.lo `test -f 'intern/freetypefont.c' || echo '$(srcdir)/'`intern/freetypefont.c

winstuff.o: intern/winstuff.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT winstuff.o -MD -MP -MF "$(DEPDIR)/winstuff.Tpo" \
	  -c -o winstuff.o `test -f 'intern/winstuff.c' || echo '$(srcdir)/'`intern/winstuff.c; \
	then mv -f "$(DEPDIR)/winstuff.Tpo" "$(DEPDIR)/winstuff.Po"; \
	else rm -f "$(DEPDIR)/winstuff.Tpo"; exit 1; \
	fi
#	source='intern/winstuff.c' object='winstuff.o' libtool=no \
#	depfile='$(DEPDIR)/winstuff.Po' tmpdepfile='$(DEPDIR)/winstuff.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o winstuff.o `test -f 'intern/winstuff.c' || echo '$(srcdir)/'`intern/winstuff.c

winstuff.obj: intern/winstuff.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT winstuff.obj -MD -MP -MF "$(DEPDIR)/winstuff.Tpo" \
	  -c -o winstuff.obj `if test -f 'intern/winstuff.c'; then $(CYGPATH_W) 'intern/winstuff.c'; else $(CYGPATH_W) '$(srcdir)/intern/winstuff.c'; fi`; \
	then mv -f "$(DEPDIR)/winstuff.Tpo" "$(DEPDIR)/winstuff.Po"; \
	else rm -f "$(DEPDIR)/winstuff.Tpo"; exit 1; \
	fi
#	source='intern/winstuff.c' object='winstuff.obj' libtool=no \
#	depfile='$(DEPDIR)/winstuff.Po' tmpdepfile='$(DEPDIR)/winstuff.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o winstuff.obj `if test -f 'intern/winstuff.c'; then $(CYGPATH_W) 'intern/winstuff.c'; else $(CYGPATH_W) '$(srcdir)/intern/winstuff.c'; fi`

winstuff.lo: intern/winstuff.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT winstuff.lo -MD -MP -MF "$(DEPDIR)/winstuff.Tpo" \
	  -c -o winstuff.lo `test -f 'intern/winstuff.c' || echo '$(srcdir)/'`intern/winstuff.c; \
	then mv -f "$(DEPDIR)/winstuff.Tpo" "$(DEPDIR)/winstuff.Plo"; \
	else rm -f "$(DEPDIR)/winstuff.Tpo"; exit 1; \
	fi
#	source='intern/winstuff.c' object='winstuff.lo' libtool=yes \
#	depfile='$(DEPDIR)/winstuff.Plo' tmpdepfile='$(DEPDIR)/winstuff.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o winstuff.lo `test -f 'intern/winstuff.c' || echo '$(srcdir)/'`intern/winstuff.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/intern
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
