#!/usr/bin/env python
#
# ***** BEGIN GPL LICENSE BLOCK *****
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# The Original Code is Copyright (C) 2006, Blender Foundation
# All rights reserved.
#
# The Original Code is: all of this file.
#
# Contributor(s): Nathan Letwory.
#
# ***** END GPL LICENSE BLOCK *****

Import ('env')
import os

sources = env.Glob('intern/*.c')

#incs = '#/intern/guardedalloc ../blenlib ../makesdna ../blenkernel'
#incs += ' ../imbuf ../editors/include ../render/extern/include ../render/intern/include'

incs = '. ../editors/include ../python ../makesdna ../blenlib ../blenkernel'
incs += ' ../nodes ../imbuf ../blenloader ../render/extern/include'
incs += ' ../radiosity/extern/include'
incs += ' ../makesrna ../gpu ../blenfont ../bmesh ../compositor'

incs += ' #/intern/guardedalloc #/intern/memutil #/intern/ghost'
incs += ' #/intern/elbeem #/extern/glew/include'
incs += ' #source/gameengine/BlenderRoutines'

incs += ' ' + env['BF_ZLIB_INC']

defs = [ 'GLEW_STATIC' ]

if env['WITH_BF_PYTHON']:
    defs.append('WITH_PYTHON')

if env['WITH_BF_COLLADA']:
    defs.append('WITH_COLLADA')

if env['OURPLATFORM'] == 'linux':
    cflags='-pthread'
    incs += ' ../../../extern/binreloc/include'

if env['OURPLATFORM'] in ('win32-vc', 'win32-mingw', 'linuxcross', 'win64-vc', 'win64-mingw'):
    incs += ' ' + env['BF_PTHREADS_INC']
    incs += ' ../../intern/utfconv'

if env['OURPLATFORM'] != 'darwin' or env['WITH_GHOST_COCOA']:
    sources.remove('intern' + os.sep + 'wm_apple.c')

if env['BF_BUILDINFO']:
    defs.append('WITH_BUILDINFO')

if env['WITH_BF_INTERNATIONAL']:
    defs.append('WITH_INTERNATIONAL')

if env['WITH_BF_COMPOSITOR']:
    defs.append("WITH_COMPOSITOR")

env.BlenderLib ( 'bf_windowmanager', sources, Split(incs), defines=defs, libtype=['core'], priority=[5] )
